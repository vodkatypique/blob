{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0","program":"/home/vodkatypique/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","itertools","/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"use_std\"","-C","metadata=ab71b613ea0e53b1","-C","extra-filename=-ab71b613ea0e53b1","--out-dir","/home/vodkatypique/blobwar/target/rls/debug/deps","-L","dependency=/home/vodkatypique/blobwar/target/rls/debug/deps","--extern","either=/home/vodkatypique/blobwar/target/rls/debug/deps/libeither-95d9afc15c0c4980.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/vodkatypique/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/vodkatypique/blobwar/target/rls/debug/deps/libitertools-ab71b613ea0e53b1.rmeta"},"prelude":{"crate_id":{"name":"itertools","disambiguator":[10402217928479571647,10495223329282299002]},"crate_root":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src","external_crates":[{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8363989277313806732,13723635736355452392]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5114841071718684731,1147767992231475921]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14891534813972024149,13771932312545804845]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[904103305253144465,12292134317329413205]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16314738562439622889,10306027504818249940]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15843431334828571128,5286674190927770495]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17405625562201081622,10275716470817790619]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11445955052790897216,5818918092474945162]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14649202847011715524,6782578055671422766]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[7180995537586922820,7051902941398327739]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[9612987991627917998,10712864082221106628]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17826240478786457486,5527832178130695808]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6600453779972510942,5977101663316138555]}},{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","num":18,"id":{"name":"either","disambiguator":[14613171111882566636,11704222414934050450]}}],"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":0,"byte_end":72271,"line_start":1,"line_end":2176,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":123},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":1446,"byte_end":1452,"line_start":55,"line_end":55,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":3468},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":1917,"byte_end":1921,"line_start":76,"line_end":76,"column_start":14,"column_end":18},"alias_span":null,"name":"__std_iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2021,"byte_end":2026,"line_start":81,"line_end":81,"column_start":9,"column_end":14},"alias_span":null,"name":"Dedup","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1454},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2036,"byte_end":2046,"line_start":82,"line_end":82,"column_start":9,"column_end":19},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1468},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2056,"byte_end":2074,"line_start":83,"line_end":83,"column_start":9,"column_end":27},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1492},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2084,"byte_end":2091,"line_start":84,"line_end":84,"column_start":9,"column_end":16},"alias_span":null,"name":"Product","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1482},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2101,"byte_end":2108,"line_start":85,"line_end":85,"column_start":9,"column_end":16},"alias_span":null,"name":"PutBack","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1507},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2118,"byte_end":2126,"line_start":86,"line_end":86,"column_start":9,"column_end":17},"alias_span":null,"name":"Batching","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":370},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2136,"byte_end":2143,"line_start":87,"line_end":87,"column_start":9,"column_end":16},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":397},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2153,"byte_end":2163,"line_start":88,"line_end":88,"column_start":9,"column_end":19},"alias_span":null,"name":"MapResults","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2173,"byte_end":2178,"line_start":89,"line_end":89,"column_start":9,"column_end":14},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":247},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2188,"byte_end":2195,"line_start":90,"line_end":90,"column_start":9,"column_end":16},"alias_span":null,"name":"MergeBy","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2205,"byte_end":2217,"line_start":91,"line_end":91,"column_start":9,"column_end":21},"alias_span":null,"name":"TakeWhileRef","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1542},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2227,"byte_end":2236,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":278},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2246,"byte_end":2254,"line_start":93,"line_end":93,"column_start":9,"column_end":17},"alias_span":null,"name":"Coalesce","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1551},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2264,"byte_end":2281,"line_start":94,"line_end":94,"column_start":9,"column_end":26},"alias_span":null,"name":"TupleCombinations","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":425},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2291,"byte_end":2300,"line_start":95,"line_end":95,"column_start":9,"column_end":18},"alias_span":null,"name":"Positions","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2310,"byte_end":2316,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1517},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2372,"byte_end":2376,"line_start":99,"line_end":99,"column_start":23,"column_end":27},"alias_span":null,"name":"Step","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1429},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2432,"byte_end":2444,"line_start":101,"line_end":101,"column_start":23,"column_end":35},"alias_span":null,"name":"MultiProduct","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":553},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2504,"byte_end":2516,"line_start":103,"line_end":103,"column_start":27,"column_end":39},"alias_span":null,"name":"Combinations","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1828},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2548,"byte_end":2558,"line_start":104,"line_end":104,"column_start":31,"column_end":41},"alias_span":null,"name":"ConsTuples","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1845},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2581,"byte_end":2587,"line_start":105,"line_end":105,"column_start":22,"column_end":28},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2589,"byte_end":2599,"line_start":105,"line_end":105,"column_start":30,"column_end":40},"alias_span":null,"name":"FormatWith","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":755},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2660,"byte_end":2670,"line_start":107,"line_end":107,"column_start":27,"column_end":37},"alias_span":null,"name":"IntoChunks","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":779},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2672,"byte_end":2677,"line_start":107,"line_end":107,"column_start":39,"column_end":44},"alias_span":null,"name":"Chunk","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":769},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2679,"byte_end":2685,"line_start":107,"line_end":107,"column_start":46,"column_end":52},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":694},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2687,"byte_end":2694,"line_start":107,"line_end":107,"column_start":54,"column_end":61},"alias_span":null,"name":"GroupBy","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":732},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2696,"byte_end":2701,"line_start":107,"line_end":107,"column_start":63,"column_end":68},"alias_span":null,"name":"Group","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":718},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2703,"byte_end":2709,"line_start":107,"line_end":107,"column_start":70,"column_end":76},"alias_span":null,"name":"Groups","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1898},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2737,"byte_end":2748,"line_start":108,"line_end":108,"column_start":26,"column_end":37},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":825},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2808,"byte_end":2814,"line_start":110,"line_end":110,"column_start":27,"column_end":33},"alias_span":null,"name":"KMerge","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":844},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2816,"byte_end":2824,"line_start":110,"line_end":110,"column_start":35,"column_end":43},"alias_span":null,"name":"KMergeBy","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":877},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2851,"byte_end":2862,"line_start":111,"line_end":111,"column_start":25,"column_end":36},"alias_span":null,"name":"MergeJoinBy","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1944},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2924,"byte_end":2933,"line_start":113,"line_end":113,"column_start":29,"column_end":38},"alias_span":null,"name":"MultiPeek","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1955},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2957,"byte_end":2965,"line_start":114,"line_end":114,"column_start":23,"column_end":31},"alias_span":null,"name":"PadUsing","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":966},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":2999,"byte_end":3015,"line_start":115,"line_end":115,"column_start":33,"column_end":49},"alias_span":null,"name":"PeekingTakeWhile","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":2011},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3051,"byte_end":3065,"line_start":116,"line_end":116,"column_start":35,"column_end":49},"alias_span":null,"name":"ProcessResults","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":2022},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3128,"byte_end":3136,"line_start":118,"line_end":118,"column_start":30,"column_end":38},"alias_span":null,"name":"PutBackN","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":2032},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3195,"byte_end":3201,"line_start":120,"line_end":120,"column_start":26,"column_end":32},"alias_span":null,"name":"RcIter","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":2038},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3224,"byte_end":3231,"line_start":121,"line_end":121,"column_start":22,"column_end":29},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1065},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3280,"byte_end":3290,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"alias_span":null,"name":"RepeatCall","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":2047},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3292,"byte_end":3298,"line_start":123,"line_end":123,"column_start":35,"column_end":41},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":2056},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3300,"byte_end":3307,"line_start":123,"line_end":123,"column_start":43,"column_end":50},"alias_span":null,"name":"Iterate","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":2076},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3359,"byte_end":3362,"line_start":125,"line_end":125,"column_start":18,"column_end":21},"alias_span":null,"name":"Tee","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":2083},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3389,"byte_end":3400,"line_start":126,"line_end":126,"column_start":26,"column_end":37},"alias_span":null,"name":"TupleBuffer","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":2090},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3402,"byte_end":3414,"line_start":126,"line_end":126,"column_start":39,"column_end":51},"alias_span":null,"name":"TupleWindows","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1132},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3416,"byte_end":3422,"line_start":126,"line_end":126,"column_start":53,"column_end":59},"alias_span":null,"name":"Tuples","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":2160},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3483,"byte_end":3489,"line_start":128,"line_end":128,"column_start":27,"column_end":33},"alias_span":null,"name":"Unique","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":2147},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3491,"byte_end":3499,"line_start":128,"line_end":128,"column_start":35,"column_end":43},"alias_span":null,"name":"UniqueBy","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1209},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3529,"byte_end":3541,"line_start":129,"line_end":129,"column_start":28,"column_end":40},"alias_span":null,"name":"WithPosition","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":2195},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3568,"byte_end":3573,"line_start":130,"line_end":130,"column_start":26,"column_end":31},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":2208},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3600,"byte_end":3610,"line_start":131,"line_end":131,"column_start":26,"column_end":36},"alias_span":null,"name":"ZipLongest","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":2221},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3634,"byte_end":3637,"line_start":132,"line_end":132,"column_start":23,"column_end":26},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":18}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3679,"byte_end":3680,"line_start":135,"line_end":135,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"Merge, Batching, InterleaveShortest, Unique, TupleWindows, Tee, WithPosition, Update, Coalesce, MergeBy, ZipLongest, MapInto, Product, Tuples, Dedup, UniqueBy, PeekingTakeWhile, MergeJoinBy, KMerge, GroupBy, IntoChunks, Format, Combinations, Step, TupleCombinations, TakeWhileRef, MapResults, PutBack, Interleave, ZipEq, PutBackN, PadUsing, KMergeBy, Intersperse, FormatWith, MultiProduct, Positions, WhileSome","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":537},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3703,"byte_end":3709,"line_start":136,"line_end":136,"column_start":22,"column_end":28},"alias_span":null,"name":"concat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3737,"byte_end":3748,"line_start":137,"line_end":137,"column_start":27,"column_end":38},"alias_span":null,"name":"cons_tuples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":597},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3764,"byte_end":3773,"line_start":138,"line_end":138,"column_start":15,"column_end":24},"alias_span":null,"name":"diff_with","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":581},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3789,"byte_end":3793,"line_start":139,"line_end":139,"column_start":15,"column_end":19},"alias_span":null,"name":"Diff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":852},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3845,"byte_end":3854,"line_start":141,"line_end":141,"column_start":23,"column_end":32},"alias_span":null,"name":"kmerge_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1919},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3873,"byte_end":3885,"line_start":142,"line_end":142,"column_start":17,"column_end":29},"alias_span":null,"name":"MinMaxResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":951},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3915,"byte_end":3926,"line_start":143,"line_end":143,"column_start":29,"column_end":40},"alias_span":null,"name":"PeekingNext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":992},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3958,"byte_end":3973,"line_start":144,"line_end":144,"column_start":31,"column_end":46},"alias_span":null,"name":"process_results","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1036},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":3992,"byte_end":4000,"line_start":145,"line_end":145,"column_start":18,"column_end":26},"alias_span":null,"name":"repeat_n","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1070},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":4041,"byte_end":4052,"line_start":147,"line_end":147,"column_start":19,"column_end":30},"alias_span":null,"name":"repeat_call","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1079},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":4054,"byte_end":4060,"line_start":147,"line_end":147,"column_start":32,"column_end":38},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1102},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":4062,"byte_end":4069,"line_start":147,"line_end":147,"column_start":40,"column_end":47},"alias_span":null,"name":"iterate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2167},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":4095,"byte_end":4103,"line_start":148,"line_end":148,"column_start":24,"column_end":32},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1265},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":4123,"byte_end":4131,"line_start":149,"line_end":149,"column_start":19,"column_end":27},"alias_span":null,"name":"multizip","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1642},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":4191,"byte_end":4203,"line_start":152,"line_end":152,"column_start":25,"column_end":37},"alias_span":null,"name":"EitherOrBoth","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114080,"byte_end":114090,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"alias_span":null,"name":"interleave","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":237},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114096,"byte_end":114101,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"alias_span":null,"name":"merge","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":156},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114107,"byte_end":114115,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"alias_span":null,"name":"put_back","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":1001},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114173,"byte_end":114183,"line_start":21,"line_end":21,"column_start":26,"column_end":36},"alias_span":null,"name":"put_back_n","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":909},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114237,"byte_end":114246,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"alias_span":null,"name":"multipeek","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114297,"byte_end":114303,"line_start":25,"line_end":25,"column_start":22,"column_end":28},"alias_span":null,"name":"kmerge","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114326,"byte_end":114332,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"alias_span":null,"name":"zip_eq","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":873},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114354,"byte_end":114367,"line_start":27,"line_end":27,"column_start":21,"column_end":34},"alias_span":null,"name":"merge_join_by","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":1015},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114418,"byte_end":114424,"line_start":29,"line_end":29,"column_start":22,"column_end":28},"alias_span":null,"name":"rciter","value":"","parent":{"krate":0,"index":484}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":4263,"byte_end":4264,"line_start":156,"line_end":156,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"interleave, merge, merge_join_by, zip_eq, kmerge","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":0,"byte_end":72271,"line_start":1,"line_end":2176,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":2431},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":472},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":541},{"krate":0,"index":550},{"krate":0,"index":578},{"krate":0,"index":602},{"krate":0,"index":629},{"krate":0,"index":637},{"krate":0,"index":794},{"krate":0,"index":804},{"krate":0,"index":865},{"krate":0,"index":895},{"krate":0,"index":904},{"krate":0,"index":928},{"krate":0,"index":947},{"krate":0,"index":983},{"krate":0,"index":999},{"krate":0,"index":1011},{"krate":0,"index":1035},{"krate":0,"index":1048},{"krate":0,"index":1062},{"krate":0,"index":1105},{"krate":0,"index":1119},{"krate":0,"index":1168},{"krate":0,"index":1205},{"krate":0,"index":1225},{"krate":0,"index":1239},{"krate":0,"index":1263},{"krate":0,"index":1271},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":2394},{"krate":0,"index":2419},{"krate":0,"index":2416},{"krate":0,"index":2413},{"krate":0,"index":2408},{"krate":0,"index":2410},{"krate":0,"index":2402},{"krate":0,"index":2404},{"krate":0,"index":1425}],"decl_id":null,"docs":" Extra iterator adaptors, functions and macros.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"crate_name = \"itertools\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":27}},{"value":"/ Extra iterator adaptors, functions and macros.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":98,"byte_end":148,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":149,"byte_end":152,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ To extend [`Iterator`] with methods in this crate, import","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":153,"byte_end":214,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/ the [`Itertools` trait](./trait.Itertools.html):","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":215,"byte_end":267,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":268,"byte_end":271,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":272,"byte_end":279,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":280,"byte_end":309,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":310,"byte_end":317,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":318,"byte_end":321,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Now, new methods like [`interleave`](./trait.Itertools.html#method.interleave)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":322,"byte_end":404,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/ are available on all iterators:","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":405,"byte_end":440,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":441,"byte_end":444,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":445,"byte_end":452,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":453,"byte_end":482,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":483,"byte_end":486,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let it = (1..3).interleave(vec![-1, -2]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":487,"byte_end":532,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/ itertools::assert_equal(it, vec![1, -1, 2, -2]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":533,"byte_end":585,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":586,"byte_end":593,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":594,"byte_end":597,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Most iterator methods are also provided as functions (with the benefit","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":598,"byte_end":672,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ that they convert parameters using [`IntoIterator`]):","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":673,"byte_end":730,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":731,"byte_end":734,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":735,"byte_end":742,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use itertools::interleave;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":743,"byte_end":773,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":774,"byte_end":777,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ for elt in interleave(&[1, 2, 3], &[2, 3, 4]) {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":778,"byte_end":829,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/     /* loop body */","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":830,"byte_end":853,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":854,"byte_end":859,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":860,"byte_end":867,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":868,"byte_end":871,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Crate Features","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":872,"byte_end":893,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":894,"byte_end":897,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ - `use_std`","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":898,"byte_end":913,"line_start":37,"line_end":37,"column_start":1,"column_end":16}},{"value":"/   - Enabled by default.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":914,"byte_end":941,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/   - Disable to compile itertools using `#![no_std]`. This disables","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":942,"byte_end":1012,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/     any items that depend on collections (like `group_by`, `unique`,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":1013,"byte_end":1085,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/     `kmerge`, `join` and many more).","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":1086,"byte_end":1126,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":1127,"byte_end":1130,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ## Rust Version","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":1131,"byte_end":1150,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":1151,"byte_end":1154,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This version of itertools requires Rust 1.24 or later.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":1155,"byte_end":1213,"line_start":45,"line_end":45,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":1214,"byte_end":1217,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Iterator`]: https://doc.rust-lang.org/std/iter/trait.Iterator.html","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":1218,"byte_end":1290,"line_start":47,"line_end":47,"column_start":1,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":18},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":1979,"byte_end":1986,"line_start":79,"line_end":79,"column_start":9,"column_end":16},"name":"structs","qualname":"::structs","value":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77}],"decl_id":null,"docs":" The concrete iterator types.\n","sig":null,"attributes":[{"value":"/ The concrete iterator types.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":1938,"byte_end":1970,"line_start":78,"line_end":78,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1429},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs","byte_start":106020,"byte_end":106032,"line_start":15,"line_end":15,"column_start":12,"column_end":24},"name":"MultiProduct","qualname":"::adaptors::multi_product::MultiProduct","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that iterates over the cartesian product of\n multiple iterators of type `I`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs","byte_start":105660,"byte_end":105727,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/ multiple iterators of type `I`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs","byte_start":105728,"byte_end":105763,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs","byte_start":105764,"byte_end":105767,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ An iterator element type is `Vec<I>`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs","byte_start":105768,"byte_end":105809,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs","byte_start":105810,"byte_end":105813,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`.multi_cartesian_product()`](../trait.Itertools.html#method.multi_cartesian_product)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs","byte_start":105814,"byte_end":105908,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs","byte_start":105909,"byte_end":105934,"line_start":13,"line_end":13,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs","byte_start":105935,"byte_end":106008,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1454},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73673,"byte_end":73683,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::adaptors::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from two iterators until both\n run out.","sig":null,"attributes":[{"value":"/ An iterator adaptor that alternates elements from two iterators until both","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73343,"byte_end":73421,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ run out.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73422,"byte_end":73434,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73435,"byte_end":73438,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73439,"byte_end":73468,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73469,"byte_end":73472,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ See [`.interleave()`](../trait.Itertools.html#method.interleave) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73473,"byte_end":73563,"line_start":32,"line_end":32,"column_start":1,"column_end":91}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73588,"byte_end":73661,"line_start":34,"line_end":34,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":137},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":74013,"byte_end":74023,"line_start":52,"line_end":52,"column_start":8,"column_end":18},"name":"interleave","qualname":"::adaptors::interleave","value":"pub fn interleave<I, J>(I, J)\n-> Interleave<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>\nwhere I: IntoIterator, J: IntoIterator<Item = I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that interleaves elements in `i` and `j`.","sig":null,"attributes":[{"value":"/ Create an iterator that interleaves elements in `i` and `j`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73743,"byte_end":73807,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73808,"byte_end":73811,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.interleave(j)`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73812,"byte_end":73868,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73869,"byte_end":73872,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73873,"byte_end":73880,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use itertools::interleave;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73881,"byte_end":73911,"line_start":46,"line_end":46,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73912,"byte_end":73915,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ for elt in interleave(&[1, 2, 3], &[2, 3, 4]) {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73916,"byte_end":73967,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/     /* loop body */","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73968,"byte_end":73991,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73992,"byte_end":73997,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":73998,"byte_end":74005,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1468},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":75288,"byte_end":75306,"line_start":98,"line_end":98,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::adaptors::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from the two iterators until\n one of them runs out.","sig":null,"attributes":[{"value":"/ An iterator adaptor that alternates elements from the two iterators until","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":74924,"byte_end":75001,"line_start":89,"line_end":89,"column_start":1,"column_end":78}},{"value":"/ one of them runs out.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":75002,"byte_end":75027,"line_start":90,"line_end":90,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":75028,"byte_end":75031,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":75032,"byte_end":75061,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":75062,"byte_end":75065,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ See [`.interleave_shortest()`](../trait.Itertools.html#method.interleave_shortest)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":75066,"byte_end":75152,"line_start":94,"line_end":94,"column_start":1,"column_end":87}},{"value":"/ for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":75153,"byte_end":75178,"line_start":95,"line_end":95,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":75203,"byte_end":75276,"line_start":97,"line_end":97,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1482},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":77708,"byte_end":77715,"line_start":187,"line_end":187,"column_start":12,"column_end":19},"name":"PutBack","qualname":"::adaptors::PutBack","value":"PutBack {  }","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":1485}],"decl_id":null,"docs":" An iterator adaptor that allows putting back a single\n item to the front of the iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows putting back a single","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":77556,"byte_end":77613,"line_start":183,"line_end":183,"column_start":1,"column_end":58}},{"value":"/ item to the front of the iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":77614,"byte_end":77652,"line_start":184,"line_end":184,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":77653,"byte_end":77656,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":77657,"byte_end":77696,"line_start":186,"line_end":186,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":156},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":77852,"byte_end":77860,"line_start":195,"line_end":195,"column_start":8,"column_end":16},"name":"put_back","qualname":"::adaptors::put_back","value":"pub fn put_back<I>(I) -> PutBack<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator where you can put back a single item\n","sig":null,"attributes":[{"value":"/ Create an iterator where you can put back a single item","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":77785,"byte_end":77844,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":78109,"byte_end":78119,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"with_value","qualname":"<PutBack<I>>::with_value","value":"pub fn with_value(Self, I::Item) -> Self","parent":null,"children":[],"decl_id":null,"docs":" put back value `value` (builder method)\n","sig":null,"attributes":[{"value":"/ put back value `value` (builder method)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":78054,"byte_end":78097,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":78275,"byte_end":78285,"line_start":215,"line_end":215,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<PutBack<I>>::into_parts","value":"pub fn into_parts(Self) -> (Option<I::Item>, I)","parent":null,"children":[],"decl_id":null,"docs":" Split the `PutBack` into its parts.\n","sig":null,"attributes":[{"value":"/ Split the `PutBack` into its parts.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":78210,"byte_end":78249,"line_start":213,"line_end":213,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":78254,"byte_end":78263,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":78550,"byte_end":78558,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBack<I>>::put_back","value":"pub fn put_back(&mut Self, I::Item)","parent":null,"children":[],"decl_id":null,"docs":" Put back a single value to the front of the iterator.","sig":null,"attributes":[{"value":"/ Put back a single value to the front of the iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":78388,"byte_end":78445,"line_start":220,"line_end":220,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":78450,"byte_end":78453,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ If a value is already in the put back slot, it is overwritten.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":78458,"byte_end":78524,"line_start":222,"line_end":222,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":78529,"byte_end":78538,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1492},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":80019,"byte_end":80026,"line_start":276,"line_end":276,"column_start":12,"column_end":19},"name":"Product","qualname":"::adaptors::Product","value":"Product {  }","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498}],"decl_id":null,"docs":" An iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `I` and `J`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":79651,"byte_end":79718,"line_start":269,"line_end":269,"column_start":1,"column_end":68}},{"value":"/ the element sets of two iterators `I` and `J`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":79719,"byte_end":79769,"line_start":270,"line_end":270,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":79770,"byte_end":79773,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `(I::Item, J::Item)`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":79774,"byte_end":79824,"line_start":272,"line_end":272,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":79825,"byte_end":79828,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ See [`.cartesian_product()`](../trait.Itertools.html#method.cartesian_product) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":79829,"byte_end":79933,"line_start":274,"line_end":274,"column_start":1,"column_end":105}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":79934,"byte_end":80007,"line_start":275,"line_end":275,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1507},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":82866,"byte_end":82874,"line_start":372,"line_end":372,"column_start":12,"column_end":20},"name":"Batching","qualname":"::adaptors::Batching","value":"Batching {  }","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1511}],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure receives a reference to the iterator\n and may pick off as many elements as it likes, to produce the next iterator element.","sig":null,"attributes":[{"value":"/ A “meta iterator adaptor”. Its closure receives a reference to the iterator","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":82418,"byte_end":82501,"line_start":364,"line_end":364,"column_start":1,"column_end":80}},{"value":"/ and may pick off as many elements as it likes, to produce the next iterator element.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":82502,"byte_end":82590,"line_start":365,"line_end":365,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":82591,"byte_end":82594,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is *X*, if the return type of `F` is *Option\\<X\\>*.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":82595,"byte_end":82672,"line_start":367,"line_end":367,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":82673,"byte_end":82676,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ See [`.batching()`](../trait.Itertools.html#method.batching) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":82677,"byte_end":82763,"line_start":369,"line_end":369,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":82781,"byte_end":82854,"line_start":371,"line_end":371,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1517},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":83998,"byte_end":84002,"line_start":414,"line_end":414,"column_start":12,"column_end":16},"name":"Step","qualname":"::adaptors::Step","value":"Step {  }","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":1520}],"decl_id":null,"docs":" An iterator adaptor that steps a number elements in the base iterator\n for each iteration.","sig":null,"attributes":[{"value":"/ An iterator adaptor that steps a number elements in the base iterator","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":83503,"byte_end":83576,"line_start":403,"line_end":403,"column_start":1,"column_end":74}},{"value":"/ for each iteration.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":83577,"byte_end":83600,"line_start":404,"line_end":404,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":83601,"byte_end":83604,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The iterator steps by yielding the next element from the base iterator,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":83605,"byte_end":83680,"line_start":406,"line_end":406,"column_start":1,"column_end":76}},{"value":"/ then skipping forward *n-1* elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":83681,"byte_end":83722,"line_start":407,"line_end":407,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":83723,"byte_end":83726,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ See [`.step()`](../trait.Itertools.html#method.step) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":83727,"byte_end":83805,"line_start":409,"line_end":409,"column_start":1,"column_end":79}},{"value":"deprecated(note = \"Use std .step_by() instead\", since = \"0.8\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":83806,"byte_end":83867,"line_start":410,"line_end":410,"column_start":1,"column_end":62}},{"value":"allow(deprecated)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":83868,"byte_end":83888,"line_start":411,"line_end":411,"column_start":1,"column_end":21}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":83913,"byte_end":83986,"line_start":413,"line_end":413,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":86813,"byte_end":86818,"line_start":531,"line_end":531,"column_start":12,"column_end":17},"name":"Merge","qualname":"::adaptors::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":229}],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges the two base iterators in ascending order.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":86444,"byte_end":86522,"line_start":524,"line_end":524,"column_start":1,"column_end":79}},{"value":"/ If both base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":86523,"byte_end":86595,"line_start":525,"line_end":525,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":86596,"byte_end":86599,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":86600,"byte_end":86639,"line_start":527,"line_end":527,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":86640,"byte_end":86643,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ See [`.merge()`](../trait.Itertools.html#method.merge_by) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":86644,"byte_end":86727,"line_start":529,"line_end":529,"column_start":1,"column_end":84}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":86728,"byte_end":86801,"line_start":530,"line_end":530,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":237},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87606,"byte_end":87611,"line_start":567,"line_end":567,"column_start":8,"column_end":13},"name":"merge","qualname":"::adaptors::merge","value":"pub fn merge<I, J>(I, J)\n-> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter> where\nI: IntoIterator, J: IntoIterator<Item = I::Item>, I::Item: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements in `i` and `j`.","sig":null,"attributes":[{"value":"/ Create an iterator that merges elements in `i` and `j`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87356,"byte_end":87415,"line_start":556,"line_end":556,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87416,"byte_end":87419,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.merge(j)`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87420,"byte_end":87471,"line_start":558,"line_end":558,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87472,"byte_end":87475,"line_start":559,"line_end":559,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87476,"byte_end":87483,"line_start":560,"line_end":560,"column_start":1,"column_end":8}},{"value":"/ use itertools::merge;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87484,"byte_end":87509,"line_start":561,"line_end":561,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87510,"byte_end":87513,"line_start":562,"line_end":562,"column_start":1,"column_end":4}},{"value":"/ for elt in merge(&[1, 2, 3], &[2, 3, 4]) {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87514,"byte_end":87560,"line_start":563,"line_end":563,"column_start":1,"column_end":47}},{"value":"/     /* loop body */","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87561,"byte_end":87584,"line_start":564,"line_end":564,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87585,"byte_end":87590,"line_start":565,"line_end":565,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87591,"byte_end":87598,"line_start":566,"line_end":566,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":247},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":88684,"byte_end":88691,"line_start":604,"line_end":604,"column_start":12,"column_end":19},"name":"MergeBy","qualname":"::adaptors::MergeBy","value":"MergeBy {  }","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges the two base iterators in ascending order.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":88312,"byte_end":88390,"line_start":597,"line_end":597,"column_start":1,"column_end":79}},{"value":"/ If both base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":88391,"byte_end":88463,"line_start":598,"line_end":598,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":88464,"byte_end":88467,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":88468,"byte_end":88507,"line_start":600,"line_end":600,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":88508,"byte_end":88511,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ See [`.merge_by()`](../trait.Itertools.html#method.merge_by) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":88512,"byte_end":88598,"line_start":602,"line_end":602,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":88599,"byte_end":88672,"line_start":603,"line_end":603,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":278},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":91242,"byte_end":91250,"line_start":705,"line_end":705,"column_start":12,"column_end":20},"name":"Coalesce","qualname":"::adaptors::Coalesce","value":"Coalesce {  }","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282}],"decl_id":null,"docs":" An iterator adaptor that may join together adjacent elements.","sig":null,"attributes":[{"value":"/ An iterator adaptor that may join together adjacent elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":91000,"byte_end":91065,"line_start":701,"line_end":701,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":91066,"byte_end":91069,"line_start":702,"line_end":702,"column_start":1,"column_end":4}},{"value":"/ See [`.coalesce()`](../trait.Itertools.html#method.coalesce) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":91070,"byte_end":91156,"line_start":703,"line_end":703,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":91157,"byte_end":91230,"line_start":704,"line_end":704,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":299},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":92481,"byte_end":92486,"line_start":760,"line_end":760,"column_start":12,"column_end":17},"name":"Dedup","qualname":"::adaptors::Dedup","value":"Dedup {  }","parent":null,"children":[{"krate":0,"index":301}],"decl_id":null,"docs":" An iterator adaptor that removes repeated duplicates.","sig":null,"attributes":[{"value":"/ An iterator adaptor that removes repeated duplicates.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":92253,"byte_end":92310,"line_start":756,"line_end":756,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":92311,"byte_end":92314,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ See [`.dedup()`](../trait.Itertools.html#method.dedup) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":92315,"byte_end":92395,"line_start":758,"line_end":758,"column_start":1,"column_end":81}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":92396,"byte_end":92469,"line_start":759,"line_end":759,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":319},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":94197,"byte_end":94209,"line_start":833,"line_end":833,"column_start":12,"column_end":24},"name":"TakeWhileRef","qualname":"::adaptors::TakeWhileRef","value":"TakeWhileRef {  }","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"decl_id":null,"docs":" An iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate returns `true`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that borrows from a `Clone`-able iterator","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":93877,"byte_end":93942,"line_start":828,"line_end":828,"column_start":1,"column_end":66}},{"value":"/ to only pick off elements while the predicate returns `true`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":93943,"byte_end":94008,"line_start":829,"line_end":829,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":94009,"byte_end":94012,"line_start":830,"line_end":830,"column_start":1,"column_end":4}},{"value":"/ See [`.take_while_ref()`](../trait.Itertools.html#method.take_while_ref) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":94013,"byte_end":94111,"line_start":831,"line_end":831,"column_start":1,"column_end":99}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":94112,"byte_end":94185,"line_start":832,"line_end":832,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1542},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":95582,"byte_end":95591,"line_start":884,"line_end":884,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::adaptors::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":1544}],"decl_id":null,"docs":" An iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[{"value":"/ An iterator adaptor that filters `Option<A>` iterator elements","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":95250,"byte_end":95316,"line_start":878,"line_end":878,"column_start":1,"column_end":67}},{"value":"/ and produces `A`. Stops on the first `None` encountered.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":95317,"byte_end":95377,"line_start":879,"line_end":879,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":95378,"byte_end":95381,"line_start":880,"line_end":880,"column_start":1,"column_end":4}},{"value":"/ See [`.while_some()`](../trait.Itertools.html#method.while_some) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":95382,"byte_end":95472,"line_start":881,"line_end":881,"column_start":1,"column_end":91}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":95497,"byte_end":95570,"line_start":883,"line_end":883,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1551},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":96442,"byte_end":96459,"line_start":918,"line_end":918,"column_start":12,"column_end":29},"name":"TupleCombinations","qualname":"::adaptors::TupleCombinations","value":"TupleCombinations {  }","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"decl_id":null,"docs":" An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples\n of a specific size.","sig":null,"attributes":[{"value":"/ An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":96101,"byte_end":96200,"line_start":911,"line_end":911,"column_start":1,"column_end":100}},{"value":"/ of a specific size.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":96201,"byte_end":96224,"line_start":912,"line_end":912,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":96225,"byte_end":96228,"line_start":913,"line_end":913,"column_start":1,"column_end":4}},{"value":"/ See [`.tuple_combinations()`](../trait.Itertools.html#method.tuple_combinations) for more","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":96229,"byte_end":96322,"line_start":914,"line_end":914,"column_start":1,"column_end":94}},{"value":"/ information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":96323,"byte_end":96339,"line_start":915,"line_end":915,"column_start":1,"column_end":17}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":96357,"byte_end":96430,"line_start":917,"line_end":917,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":347},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":96610,"byte_end":96624,"line_start":927,"line_end":927,"column_start":11,"column_end":25},"name":"HasCombination","qualname":"::adaptors::HasCombination","value":"HasCombination<I>: Sized","parent":null,"children":[{"krate":0,"index":349}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":349},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":96646,"byte_end":96657,"line_start":928,"line_end":928,"column_start":10,"column_end":21},"name":"Combination","qualname":"::adaptors::HasCombination::Combination","value":"type Combination: From<I> + Iterator<Item = Self>;","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1561},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":97278,"byte_end":97295,"line_start":956,"line_end":956,"column_start":12,"column_end":29},"name":"Tuple1Combination","qualname":"::adaptors::Tuple1Combination","value":"Tuple1Combination {  }","parent":null,"children":[{"krate":0,"index":1563}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1584},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":99516,"byte_end":99533,"line_start":1037,"line_end":1037,"column_start":25,"column_end":42},"name":"Tuple2Combination","qualname":"::adaptors::Tuple2Combination","value":"Tuple2Combination {  }","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1609},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":99592,"byte_end":99609,"line_start":1038,"line_end":1038,"column_start":25,"column_end":42},"name":"Tuple3Combination","qualname":"::adaptors::Tuple3Combination","value":"Tuple3Combination {  }","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1634},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":99673,"byte_end":99690,"line_start":1039,"line_end":1039,"column_start":25,"column_end":42},"name":"Tuple4Combination","qualname":"::adaptors::Tuple4Combination","value":"Tuple4Combination {  }","parent":null,"children":[{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":99979,"byte_end":99986,"line_start":1045,"line_end":1045,"column_start":12,"column_end":19},"name":"MapInto","qualname":"::adaptors::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374}],"decl_id":null,"docs":" An iterator adapter to apply `Into` conversion to each element.","sig":null,"attributes":[{"value":"/ An iterator adapter to apply `Into` conversion to each element.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":99735,"byte_end":99802,"line_start":1041,"line_end":1041,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":99803,"byte_end":99806,"line_start":1042,"line_end":1042,"column_start":1,"column_end":4}},{"value":"/ See [`.map_into()`](../trait.Itertools.html#method.map_into) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":99807,"byte_end":99893,"line_start":1043,"line_end":1043,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":99894,"byte_end":99967,"line_start":1044,"line_end":1044,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":397},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":101347,"byte_end":101357,"line_start":1102,"line_end":1102,"column_start":12,"column_end":22},"name":"MapResults","qualname":"::adaptors::MapResults","value":"MapResults {  }","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"decl_id":null,"docs":" An iterator adapter to apply a transformation within a nested `Result`.","sig":null,"attributes":[{"value":"/ An iterator adapter to apply a transformation within a nested `Result`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":101089,"byte_end":101164,"line_start":1098,"line_end":1098,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":101165,"byte_end":101168,"line_start":1099,"line_end":1099,"column_start":1,"column_end":4}},{"value":"/ See [`.map_results()`](../trait.Itertools.html#method.map_results) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":101169,"byte_end":101261,"line_start":1100,"line_end":1100,"column_start":1,"column_end":93}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":101262,"byte_end":101335,"line_start":1101,"line_end":1101,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":425},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":102648,"byte_end":102657,"line_start":1151,"line_end":1151,"column_start":12,"column_end":21},"name":"Positions","qualname":"::adaptors::Positions","value":"Positions {  }","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"decl_id":null,"docs":" An iterator adapter to get the positions of each element that matches a predicate.","sig":null,"attributes":[{"value":"/ An iterator adapter to get the positions of each element that matches a predicate.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":102383,"byte_end":102469,"line_start":1147,"line_end":1147,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":102470,"byte_end":102473,"line_start":1148,"line_end":1148,"column_start":1,"column_end":4}},{"value":"/ See [`.positions()`](../trait.Itertools.html#method.positions) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":102474,"byte_end":102562,"line_start":1149,"line_end":1149,"column_start":1,"column_end":89}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":102563,"byte_end":102636,"line_start":1150,"line_end":1150,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":104073,"byte_end":104079,"line_start":1209,"line_end":1209,"column_start":12,"column_end":18},"name":"Update","qualname":"::adaptors::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448}],"decl_id":null,"docs":" An iterator adapter to apply a mutating function to each element before yielding it.","sig":null,"attributes":[{"value":"/ An iterator adapter to apply a mutating function to each element before yielding it.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":103812,"byte_end":103900,"line_start":1205,"line_end":1205,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":103901,"byte_end":103904,"line_start":1206,"line_end":1206,"column_start":1,"column_end":4}},{"value":"/ See [`.update()`](../trait.Itertools.html#method.update) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":103905,"byte_end":103987,"line_start":1207,"line_end":1207,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":103988,"byte_end":104061,"line_start":1208,"line_end":1208,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1645},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112007,"byte_end":112011,"line_start":7,"line_end":7,"column_start":5,"column_end":9},"name":"Both","qualname":"::either_or_both::EitherOrBoth::Both","value":"EitherOrBoth::Both(A, B)","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Both values are present.\n","sig":null,"attributes":[{"value":"/ Both values are present.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":111974,"byte_end":112002,"line_start":6,"line_end":6,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1649},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112075,"byte_end":112079,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Left","qualname":"::either_or_both::EitherOrBoth::Left","value":"EitherOrBoth::Left(A)","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Only the left value of type `A` is present.\n","sig":null,"attributes":[{"value":"/ Only the left value of type `A` is present.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112023,"byte_end":112070,"line_start":8,"line_end":8,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1652},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112141,"byte_end":112146,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Right","qualname":"::either_or_both::EitherOrBoth::Right","value":"EitherOrBoth::Right(B)","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Only the right value of type `B` is present.\n","sig":null,"attributes":[{"value":"/ Only the right value of type `B` is present.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112088,"byte_end":112136,"line_start":10,"line_end":10,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":1642},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":111949,"byte_end":111961,"line_start":5,"line_end":5,"column_start":10,"column_end":22},"name":"EitherOrBoth","qualname":"::either_or_both::EitherOrBoth","value":"pub enum EitherOrBoth<A, B> {\n\n    /// Both values are present.\n    Both(A, B),\n\n    /// Only the left value of type `A` is present.\n    Left(A),\n\n    /// Only the right value of type `B` is present.\n    Right(B),\n}","parent":null,"children":[{"krate":0,"index":1645},{"krate":0,"index":1649},{"krate":0,"index":1652}],"decl_id":null,"docs":" Value that either holds a single A or B, or both.\n","sig":null,"attributes":[{"value":"/ Value that either holds a single A or B, or both.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":111847,"byte_end":111900,"line_start":3,"line_end":3,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112265,"byte_end":112273,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"has_left","qualname":"<EitherOrBoth<A, B>>::has_left","value":"pub fn has_left(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If `Left`, or `Both`, return true, otherwise, return false.\n","sig":null,"attributes":[{"value":"/ If `Left`, or `Both`, return true, otherwise, return false.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112190,"byte_end":112253,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112417,"byte_end":112426,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"has_right","qualname":"<EitherOrBoth<A, B>>::has_right","value":"pub fn has_right(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If `Right`, or `Both`, return true, otherwise, return false.\n","sig":null,"attributes":[{"value":"/ If `Right`, or `Both`, return true, otherwise, return false.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112341,"byte_end":112405,"line_start":20,"line_end":20,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112593,"byte_end":112597,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"left","qualname":"<EitherOrBoth<A, B>>::left","value":"pub fn left(Self) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" If `Left`, or `Both`, return `Some` with the left value, otherwise, return `None`.\n","sig":null,"attributes":[{"value":"/ If `Left`, or `Both`, return `Some` with the left value, otherwise, return `None`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112495,"byte_end":112581,"line_start":25,"line_end":25,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112837,"byte_end":112842,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"right","qualname":"<EitherOrBoth<A, B>>::right","value":"pub fn right(Self) -> Option<B>","parent":null,"children":[],"decl_id":null,"docs":" If `Right`, or `Both`, return `Some` with the right value, otherwise, return `None`.\n","sig":null,"attributes":[{"value":"/ If `Right`, or `Both`, return `Some` with the right value, otherwise, return `None`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112737,"byte_end":112825,"line_start":33,"line_end":33,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":113064,"byte_end":113070,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<EitherOrBoth<A, B>>::as_ref","value":"pub fn as_ref(&Self) -> EitherOrBoth<&A, &B>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A, &B>`.\n","sig":null,"attributes":[{"value":"/ Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A, &B>`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112986,"byte_end":113052,"line_start":41,"line_end":41,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":113385,"byte_end":113391,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<EitherOrBoth<A, B>>::as_mut","value":"pub fn as_mut(&mut Self) -> EitherOrBoth<&mut A, &mut B>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&mut EitherOrBoth<A, B>` to `EitherOrBoth<&mut A, &mut B>`.\n","sig":null,"attributes":[{"value":"/ Converts from `&mut EitherOrBoth<A, B>` to `EitherOrBoth<&mut A, &mut B>`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":113295,"byte_end":113373,"line_start":50,"line_end":50,"column_start":5,"column_end":83}}]},{"kind":"Mod","id":{"krate":0,"index":484},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"free","qualname":"::free","value":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":516},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532}],"decl_id":null,"docs":" Free functions that create iterator adaptors or call iterator methods.","sig":null,"attributes":[{"value":"/ Free functions that create iterator adaptors or call iterator methods.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":113642,"byte_end":113716,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":113717,"byte_end":113720,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The benefit of free functions is that they accept any `IntoIterator` as","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":113721,"byte_end":113796,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ argument, so the resulting code may be easier to read.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":113797,"byte_end":113855,"line_start":4,"line_end":4,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114665,"byte_end":114674,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::free::enumerate","value":"pub fn enumerate<I>(I) -> iter::Enumerate<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` with a running index.","sig":null,"attributes":[{"value":"/ Iterate `iterable` with a running index.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114427,"byte_end":114471,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114472,"byte_end":114475,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `.enumerate()`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114476,"byte_end":114529,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114530,"byte_end":114533,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114534,"byte_end":114541,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use itertools::enumerate;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114542,"byte_end":114571,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114572,"byte_end":114575,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ for (i, elt) in enumerate(&[1, 2, 3]) {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114576,"byte_end":114619,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/     /* loop body */","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114620,"byte_end":114643,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114644,"byte_end":114649,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114650,"byte_end":114657,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":504},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114996,"byte_end":114999,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"rev","qualname":"::free::rev","value":"pub fn rev<I>(I) -> iter::Rev<I::IntoIter> where I: IntoIterator,\nI::IntoIter: DoubleEndedIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` in reverse.","sig":null,"attributes":[{"value":"/ Iterate `iterable` in reverse.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114791,"byte_end":114825,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114826,"byte_end":114829,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `.rev()`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114830,"byte_end":114877,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114878,"byte_end":114881,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114882,"byte_end":114889,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ use itertools::rev;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114890,"byte_end":114913,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114914,"byte_end":114917,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ for elt in rev(&[1, 2, 3]) {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114918,"byte_end":114950,"line_start":55,"line_end":55,"column_start":1,"column_end":33}},{"value":"/     /* loop body */","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114951,"byte_end":114974,"line_start":56,"line_end":56,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114975,"byte_end":114980,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":114981,"byte_end":114988,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":506},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115400,"byte_end":115403,"line_start":78,"line_end":78,"column_start":8,"column_end":11},"name":"zip","qualname":"::free::zip","value":"pub fn zip<I, J>(I, J) -> Zip<I::IntoIter, J::IntoIter> where I: IntoIterator,\nJ: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[{"value":"/ Iterate `i` and `j` in lock step.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115148,"byte_end":115185,"line_start":66,"line_end":66,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115186,"byte_end":115189,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.zip(j)`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115190,"byte_end":115239,"line_start":68,"line_end":68,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115240,"byte_end":115243,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115244,"byte_end":115251,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use itertools::zip;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115252,"byte_end":115275,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115276,"byte_end":115279,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let data = [1, 2, 3, 4, 5];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115280,"byte_end":115311,"line_start":73,"line_end":73,"column_start":1,"column_end":32}},{"value":"/ for (a, b) in zip(&data, &data[1..]) {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115312,"byte_end":115354,"line_start":74,"line_end":74,"column_start":1,"column_end":43}},{"value":"/     /* loop body */","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115355,"byte_end":115378,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115379,"byte_end":115384,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115385,"byte_end":115392,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":509},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115783,"byte_end":115788,"line_start":96,"line_end":96,"column_start":8,"column_end":13},"name":"chain","qualname":"::free::chain","value":"pub fn chain<I, J>(I, J)\n-> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>\nwhere I: IntoIterator, J: IntoIterator<Item = I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that first iterates `i` and then `j`.","sig":null,"attributes":[{"value":"/ Create an iterator that first iterates `i` and then `j`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115538,"byte_end":115598,"line_start":85,"line_end":85,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115599,"byte_end":115602,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.chain(j)`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115603,"byte_end":115654,"line_start":87,"line_end":87,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115655,"byte_end":115658,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115659,"byte_end":115666,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ use itertools::chain;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115667,"byte_end":115692,"line_start":90,"line_end":90,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115693,"byte_end":115696,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ for elt in chain(&[1, 2, 3], &[4]) {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115697,"byte_end":115737,"line_start":92,"line_end":92,"column_start":1,"column_end":41}},{"value":"/     /* loop body */","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115738,"byte_end":115761,"line_start":93,"line_end":93,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115762,"byte_end":115767,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115768,"byte_end":115775,"line_start":95,"line_end":95,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":512},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116211,"byte_end":116217,"line_start":112,"line_end":112,"column_start":8,"column_end":14},"name":"cloned","qualname":"::free::cloned","value":"pub fn cloned<'a, I, T: 'a>(I) -> iter::Cloned<I::IntoIter> where\nI: IntoIterator<Item = &'a T>, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that clones each element from &T to T","sig":null,"attributes":[{"value":"/ Create an iterator that clones each element from &T to T","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":115985,"byte_end":116045,"line_start":103,"line_end":103,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116046,"byte_end":116049,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.cloned()`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116050,"byte_end":116101,"line_start":105,"line_end":105,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116102,"byte_end":116105,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116106,"byte_end":116113,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use itertools::cloned;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116114,"byte_end":116140,"line_start":108,"line_end":108,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116141,"byte_end":116144,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(cloned(b\"abc\").next(), Some(b'a'));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116145,"byte_end":116195,"line_start":110,"line_end":110,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116196,"byte_end":116203,"line_start":111,"line_end":111,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":516},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116605,"byte_end":116609,"line_start":128,"line_end":128,"column_start":8,"column_end":12},"name":"fold","qualname":"::free::fold","value":"pub fn fold<I, B, F>(I, B, F) -> B where I: IntoIterator, F: FnMut(B, I::Item)\n-> B","parent":null,"children":[],"decl_id":null,"docs":" Perform a fold operation over the iterable.","sig":null,"attributes":[{"value":"/ Perform a fold operation over the iterable.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116372,"byte_end":116419,"line_start":119,"line_end":119,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116420,"byte_end":116423,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.fold(init, f)`","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116424,"byte_end":116479,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116480,"byte_end":116483,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116484,"byte_end":116491,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/ use itertools::fold;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116492,"byte_end":116516,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116517,"byte_end":116520,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fold(&[1., 2., 3.], 0., |a, &b| f32::max(a, b)), 3.);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116521,"byte_end":116589,"line_start":126,"line_end":126,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116590,"byte_end":116597,"line_start":127,"line_end":127,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":520},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116984,"byte_end":116987,"line_start":144,"line_end":144,"column_start":8,"column_end":11},"name":"all","qualname":"::free::all","value":"pub fn all<I, F>(I, F) -> bool where I: IntoIterator, F: FnMut(I::Item) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for all elements in the iterable.","sig":null,"attributes":[{"value":"/ Test whether the predicate holds for all elements in the iterable.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116759,"byte_end":116829,"line_start":135,"line_end":135,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116830,"byte_end":116833,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.all(f)`","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116834,"byte_end":116882,"line_start":137,"line_end":137,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116883,"byte_end":116886,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116887,"byte_end":116894,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ use itertools::all;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116895,"byte_end":116918,"line_start":140,"line_end":140,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116919,"byte_end":116922,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ assert!(all(&[1, 2, 3], |elt| *elt > 0));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116923,"byte_end":116968,"line_start":142,"line_end":142,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":116969,"byte_end":116976,"line_start":143,"line_end":143,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":523},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117347,"byte_end":117350,"line_start":160,"line_end":160,"column_start":8,"column_end":11},"name":"any","qualname":"::free::any","value":"pub fn any<I, F>(I, F) -> bool where I: IntoIterator, F: FnMut(I::Item) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for any elements in the iterable.","sig":null,"attributes":[{"value":"/ Test whether the predicate holds for any elements in the iterable.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117121,"byte_end":117191,"line_start":151,"line_end":151,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117192,"byte_end":117195,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.any(f)`","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117196,"byte_end":117244,"line_start":153,"line_end":153,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117245,"byte_end":117248,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117249,"byte_end":117256,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"/ use itertools::any;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117257,"byte_end":117280,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117281,"byte_end":117284,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ assert!(any(&[0, -1, 2], |elt| *elt > 0));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117285,"byte_end":117331,"line_start":158,"line_end":158,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117332,"byte_end":117339,"line_start":159,"line_end":159,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":526},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117675,"byte_end":117678,"line_start":176,"line_end":176,"column_start":8,"column_end":11},"name":"max","qualname":"::free::max","value":"pub fn max<I>(I) -> Option<I::Item> where I: IntoIterator, I::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum value of the iterable.","sig":null,"attributes":[{"value":"/ Return the maximum value of the iterable.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117484,"byte_end":117529,"line_start":167,"line_end":167,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117530,"byte_end":117533,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.max()`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117534,"byte_end":117582,"line_start":169,"line_end":169,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117583,"byte_end":117586,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117587,"byte_end":117594,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/ use itertools::max;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117595,"byte_end":117618,"line_start":172,"line_end":172,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117619,"byte_end":117622,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(max(0..10), Some(9));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117623,"byte_end":117659,"line_start":174,"line_end":174,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117660,"byte_end":117667,"line_start":175,"line_end":175,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":528},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117991,"byte_end":117994,"line_start":192,"line_end":192,"column_start":8,"column_end":11},"name":"min","qualname":"::free::min","value":"pub fn min<I>(I) -> Option<I::Item> where I: IntoIterator, I::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum value of the iterable.","sig":null,"attributes":[{"value":"/ Return the minimum value of the iterable.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117800,"byte_end":117845,"line_start":183,"line_end":183,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117846,"byte_end":117849,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.min()`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117850,"byte_end":117898,"line_start":185,"line_end":185,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117899,"byte_end":117902,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117903,"byte_end":117910,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ use itertools::min;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117911,"byte_end":117934,"line_start":188,"line_end":188,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117935,"byte_end":117938,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(min(0..10), Some(0));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117939,"byte_end":117975,"line_start":190,"line_end":190,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":117976,"byte_end":117983,"line_start":191,"line_end":191,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":530},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118387,"byte_end":118391,"line_start":210,"line_end":210,"column_start":8,"column_end":12},"name":"join","qualname":"::free::join","value":"pub fn join<I>(I, &str) -> String where I: IntoIterator, I::Item: Display","parent":null,"children":[],"decl_id":null,"docs":" Combine all iterator elements into one String, seperated by `sep`.","sig":null,"attributes":[{"value":"/ Combine all iterator elements into one String, seperated by `sep`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118117,"byte_end":118187,"line_start":200,"line_end":200,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118188,"byte_end":118191,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `iterable.join(sep)`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118192,"byte_end":118251,"line_start":202,"line_end":202,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118252,"byte_end":118255,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118256,"byte_end":118263,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/ use itertools::join;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118264,"byte_end":118288,"line_start":205,"line_end":205,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118289,"byte_end":118292,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join(&[1, 2, 3], \", \"), \"1, 2, 3\");","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118293,"byte_end":118343,"line_start":207,"line_end":207,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118344,"byte_end":118351,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118352,"byte_end":118379,"line_start":209,"line_end":209,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":532},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118887,"byte_end":118893,"line_start":230,"line_end":230,"column_start":8,"column_end":14},"name":"sorted","qualname":"::free::sorted","value":"pub fn sorted<I>(I) -> VecIntoIter<I::Item> where I: IntoIterator,\nI::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"/ Sort all iterator elements into a new iterator in ascending order.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118523,"byte_end":118593,"line_start":217,"line_end":217,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118594,"byte_end":118597,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of [`iterable.sorted()`][1].","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118598,"byte_end":118661,"line_start":219,"line_end":219,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118662,"byte_end":118665,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ [1]: trait.Itertools.html#method.sorted","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118666,"byte_end":118709,"line_start":221,"line_end":221,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118710,"byte_end":118713,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118714,"byte_end":118721,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/ use itertools::sorted;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118722,"byte_end":118748,"line_start":224,"line_end":224,"column_start":1,"column_end":27}},{"value":"/ use itertools::assert_equal;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118749,"byte_end":118781,"line_start":225,"line_end":225,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118782,"byte_end":118785,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ assert_equal(sorted(\"rust\".chars()), \"rstu\".chars());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118786,"byte_end":118843,"line_start":227,"line_end":227,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118844,"byte_end":118851,"line_start":228,"line_end":228,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs","byte_start":118852,"byte_end":118879,"line_start":229,"line_end":229,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":537},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs","byte_start":119526,"byte_end":119532,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"concat","qualname":"::concat_impl::concat","value":"pub fn concat<I>(I) -> I::Item where I: IntoIterator,\nI::Item: Extend<<<I as IntoIterator>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":null,"children":[],"decl_id":null,"docs":" Combine all an iterator's elements into one element by using `Extend`.","sig":null,"attributes":[{"value":"/ Combine all an iterator's elements into one element by using `Extend`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs","byte_start":119040,"byte_end":119114,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs","byte_start":119115,"byte_end":119118,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator`-enabled version of `.concat()`","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs","byte_start":119119,"byte_end":119168,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs","byte_start":119169,"byte_end":119172,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This combinator will extend the first item with each of the rest of the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs","byte_start":119173,"byte_end":119248,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ items of the iterator. If the iterator is empty, the default value of","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs","byte_start":119249,"byte_end":119322,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ `I::Item` is returned.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs","byte_start":119323,"byte_end":119349,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs","byte_start":119350,"byte_end":119353,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs","byte_start":119354,"byte_end":119365,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ use itertools::concat;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs","byte_start":119366,"byte_end":119392,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/ ","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs","byte_start":119393,"byte_end":119397,"line_start":13,"line_end":13,"column_start":1,"column_end":5}},{"value":"/ let input = vec![vec![1], vec![2, 3], vec![4, 5, 6]];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs","byte_start":119398,"byte_end":119455,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(concat(input), vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs","byte_start":119456,"byte_end":119510,"line_start":15,"line_end":15,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs","byte_start":119511,"byte_end":119518,"line_start":16,"line_end":16,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1828},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs","byte_start":121308,"byte_end":121318,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"ConsTuples","qualname":"::cons_tuples_impl::ConsTuples","value":"ConsTuples {  }","parent":null,"children":[{"krate":0,"index":1831}],"decl_id":null,"docs":" An iterator that maps an iterator of tuples like\n `((A, B), C)` to an iterator of `(A, B, C)`.","sig":null,"attributes":[{"value":"/ An iterator that maps an iterator of tuples like","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs","byte_start":121063,"byte_end":121115,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ `((A, B), C)` to an iterator of `(A, B, C)`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs","byte_start":121116,"byte_end":121164,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs","byte_start":121165,"byte_end":121168,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Used by the `iproduct!()` macro.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs","byte_start":121169,"byte_end":121205,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs","byte_start":121206,"byte_end":121279,"line_start":44,"line_end":44,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":547},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs","byte_start":121659,"byte_end":121670,"line_start":64,"line_end":64,"column_start":8,"column_end":19},"name":"cons_tuples","qualname":"::cons_tuples_impl::cons_tuples","value":"pub fn cons_tuples<I, J>(I) -> ConsTuples<I, J> where I: Iterator<Item = J>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that maps for example iterators of\n `((A, B), C)` to `(A, B, C)`.\n","sig":null,"attributes":[{"value":"/ Create an iterator that maps for example iterators of","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs","byte_start":121560,"byte_end":121617,"line_start":62,"line_end":62,"column_start":1,"column_end":58}},{"value":"/ `((A, B), C)` to `(A, B, C)`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs","byte_start":121618,"byte_end":121651,"line_start":63,"line_end":63,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":553},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs","byte_start":122095,"byte_end":122107,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"Combinations","qualname":"::combinations::Combinations","value":"Combinations {  }","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558}],"decl_id":null,"docs":" An iterator to iterate through all the `n`-length combinations in an iterator.","sig":null,"attributes":[{"value":"/ An iterator to iterate through all the `n`-length combinations in an iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs","byte_start":121828,"byte_end":121910,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs","byte_start":121911,"byte_end":121914,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`.combinations()`](../trait.Itertools.html#method.combinations) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs","byte_start":121915,"byte_end":122009,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs","byte_start":122010,"byte_end":122083,"line_start":8,"line_end":8,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":584},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":126548,"byte_end":126561,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"FirstMismatch","qualname":"::diff::Diff::FirstMismatch","value":"Diff::FirstMismatch(usize, PutBack<I>, PutBack<J>)","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" The index of the first non-matching element along with both iterator's remaining elements\n starting with the first mis-match.\n","sig":null,"attributes":[{"value":"/ The index of the first non-matching element along with both iterator's remaining elements","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":126407,"byte_end":126500,"line_start":19,"line_end":19,"column_start":5,"column_end":98}},{"value":"/ starting with the first mis-match.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":126505,"byte_end":126543,"line_start":20,"line_end":20,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":589},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":126694,"byte_end":126701,"line_start":23,"line_end":23,"column_start":5,"column_end":12},"name":"Shorter","qualname":"::diff::Diff::Shorter","value":"Diff::Shorter(usize, PutBack<I>)","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" The total number of elements that were in `J` along with the remaining elements of `I`.\n","sig":null,"attributes":[{"value":"/ The total number of elements that were in `J` along with the remaining elements of `I`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":126598,"byte_end":126689,"line_start":22,"line_end":22,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":593},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":126822,"byte_end":126828,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Longer","qualname":"::diff::Diff::Longer","value":"Diff::Longer(usize, PutBack<J>)","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" The total number of elements that were in `I` along with the remaining elements of `J`.\n","sig":null,"attributes":[{"value":"/ The total number of elements that were in `I` along with the remaining elements of `J`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":126726,"byte_end":126817,"line_start":24,"line_end":24,"column_start":5,"column_end":96}}]},{"kind":"Enum","id":{"krate":0,"index":581},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":126345,"byte_end":126349,"line_start":15,"line_end":15,"column_start":10,"column_end":14},"name":"Diff","qualname":"::diff::Diff","value":"pub enum Diff<I, J> where I: Iterator, J: Iterator {\n\n    /// The index of the first non-matching element along with both iterator's remaining elements\n    /// starting with the first mis-match.\n    FirstMismatch(usize, PutBack<I>, PutBack<J>),\n\n    /// The total number of elements that were in `J` along with the remaining elements of `I`.\n    Shorter(usize, PutBack<I>),\n\n    /// The total number of elements that were in `I` along with the remaining elements of `J`.\n    Longer(usize, PutBack<J>),\n}","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":589},{"krate":0,"index":593}],"decl_id":null,"docs":" A type returned by the [`diff_with`](./fn.diff_with.html) function.","sig":null,"attributes":[{"value":"/ A type returned by the [`diff_with`](./fn.diff_with.html) function.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":126147,"byte_end":126218,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":126219,"byte_end":126222,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Diff` represents the way in which the elements yielded by the iterator `I` differ to some","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":126223,"byte_end":126317,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ iterator `J`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":126318,"byte_end":126335,"line_start":14,"line_end":14,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":597},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":127577,"byte_end":127586,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"diff_with","qualname":"::diff::diff_with","value":"pub fn diff_with<I, J, F>(I, J, F) -> Option<Diff<I::IntoIter, J::IntoIter>>\nwhere I: IntoIterator, J: IntoIterator, F: Fn(&I::Item, &J::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares every element yielded by both `i` and `j` with the given function in lock-step and\n returns a `Diff` which describes how `j` differs from `i`.","sig":null,"attributes":[{"value":"/ Compares every element yielded by both `i` and `j` with the given function in lock-step and","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":126852,"byte_end":126947,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"/ returns a `Diff` which describes how `j` differs from `i`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":126948,"byte_end":127010,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":127011,"byte_end":127014,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the number of elements yielded by `j` is less than the number of elements yielded by `i`,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":127015,"byte_end":127111,"line_start":31,"line_end":31,"column_start":1,"column_end":97}},{"value":"/ the number of `j` elements yielded will be returned along with `i`'s remaining elements as","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":127112,"byte_end":127206,"line_start":32,"line_end":32,"column_start":1,"column_end":95}},{"value":"/ `Diff::Shorter`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":127207,"byte_end":127227,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":127228,"byte_end":127231,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ If the two elements of a step differ, the index of those elements along with the remaining","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":127232,"byte_end":127326,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ elements of both `i` and `j` are returned as `Diff::FirstMismatch`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":127327,"byte_end":127398,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":127399,"byte_end":127402,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If `i` becomes exhausted before `j` becomes exhausted, the number of elements in `i` along with","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":127403,"byte_end":127502,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"/ the remaining `j` elements will be returned as `Diff::Longer`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs","byte_start":127503,"byte_end":127569,"line_start":39,"line_end":39,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":605},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":128706,"byte_end":128716,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"FormatWith","qualname":"::format::FormatWith","value":"FormatWith {  }","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements lazily, separated by `sep`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":128442,"byte_end":128502,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":128503,"byte_end":128506,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The format value can only be formatted once, after that the iterator is","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":128507,"byte_end":128582,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ exhausted.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":128583,"byte_end":128597,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":128598,"byte_end":128601,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.format_with()`](../trait.Itertools.html#method.format_with) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":128602,"byte_end":128694,"line_start":9,"line_end":9,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":1845},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":129139,"byte_end":129145,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Format","qualname":"::format::Format","value":"Format {  }","parent":null,"children":[{"krate":0,"index":1848},{"krate":0,"index":1849}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements lazily, separated by `sep`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":128864,"byte_end":128924,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":128925,"byte_end":128928,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The format value can only be formatted once, after that the iterator is","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":128929,"byte_end":129004,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ exhausted.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":129005,"byte_end":129019,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":129020,"byte_end":129023,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ See [`.format()`](../trait.Itertools.html#method.format)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":129024,"byte_end":129084,"line_start":21,"line_end":21,"column_start":1,"column_end":61}},{"value":"/ for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":129085,"byte_end":129110,"line_start":22,"line_end":22,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":644},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":132422,"byte_end":132425,"line_start":6,"line_end":6,"column_start":10,"column_end":13},"name":"Key","qualname":"::groupbylazy::KeyFunction::Key","value":"type Key;","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":694},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":141891,"byte_end":141898,"line_start":289,"line_end":289,"column_start":12,"column_end":19},"name":"GroupBy","qualname":"::groupbylazy::GroupBy","value":"GroupBy {  }","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699}],"decl_id":null,"docs":" `GroupBy` is the storage for the lazy grouping operation.","sig":null,"attributes":[{"value":"/ `GroupBy` is the storage for the lazy grouping operation.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":141190,"byte_end":141251,"line_start":275,"line_end":275,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":141252,"byte_end":141255,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ If the groups are consumed in their original order, or if each","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":141256,"byte_end":141322,"line_start":277,"line_end":277,"column_start":1,"column_end":67}},{"value":"/ group is dropped without keeping it around, then `GroupBy` uses","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":141323,"byte_end":141390,"line_start":278,"line_end":278,"column_start":1,"column_end":68}},{"value":"/ no allocations. It needs allocations only if several group iterators","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":141391,"byte_end":141463,"line_start":279,"line_end":279,"column_start":1,"column_end":73}},{"value":"/ are alive at the same time.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":141464,"byte_end":141495,"line_start":280,"line_end":280,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":141496,"byte_end":141499,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ This type implements `IntoIterator` (it is **not** an iterator","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":141500,"byte_end":141566,"line_start":282,"line_end":282,"column_start":1,"column_end":67}},{"value":"/ itself), because the group iterators need to borrow from this","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":141567,"byte_end":141632,"line_start":283,"line_end":283,"column_start":1,"column_end":66}},{"value":"/ value. It should be stored in a local variable or temporary and","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":141633,"byte_end":141700,"line_start":284,"line_end":284,"column_start":1,"column_end":68}},{"value":"/ iterated.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":141701,"byte_end":141714,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":141715,"byte_end":141718,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ See [`.group_by()`](../trait.Itertools.html#method.group_by) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":141719,"byte_end":141805,"line_start":287,"line_end":287,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":141806,"byte_end":141879,"line_start":288,"line_end":288,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":718},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":143765,"byte_end":143771,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"Groups","qualname":"::groupbylazy::Groups","value":"Groups {  }","parent":null,"children":[{"krate":0,"index":723}],"decl_id":null,"docs":" An iterator that yields the Group iterators.","sig":null,"attributes":[{"value":"/ An iterator that yields the Group iterators.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":143443,"byte_end":143491,"line_start":352,"line_end":352,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":143492,"byte_end":143495,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `(K, Group)`:","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":143496,"byte_end":143538,"line_start":354,"line_end":354,"column_start":1,"column_end":43}},{"value":"/ the group's key `K` and the group's iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":143539,"byte_end":143588,"line_start":355,"line_end":355,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":143589,"byte_end":143592,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ See [`.group_by()`](../trait.Itertools.html#method.group_by) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":143593,"byte_end":143679,"line_start":357,"line_end":357,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":143680,"byte_end":143753,"line_start":358,"line_end":358,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":732},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":144639,"byte_end":144644,"line_start":393,"line_end":393,"column_start":12,"column_end":17},"name":"Group","qualname":"::groupbylazy::Group","value":"Group {  }","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739}],"decl_id":null,"docs":" An iterator for the elements in a single group.","sig":null,"attributes":[{"value":"/ An iterator for the elements in a single group.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":144532,"byte_end":144583,"line_start":390,"line_end":390,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":144584,"byte_end":144587,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":144588,"byte_end":144627,"line_start":392,"line_end":392,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":755},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":146579,"byte_end":146589,"line_start":465,"line_end":465,"column_start":12,"column_end":22},"name":"IntoChunks","qualname":"::groupbylazy::IntoChunks","value":"IntoChunks {  }","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758}],"decl_id":null,"docs":" `ChunkLazy` is the storage for a lazy chunking operation.","sig":null,"attributes":[{"value":"/ `ChunkLazy` is the storage for a lazy chunking operation.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":145916,"byte_end":145977,"line_start":451,"line_end":451,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":145978,"byte_end":145981,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ `IntoChunks` behaves just like `GroupBy`: it is iterable, and","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":145982,"byte_end":146047,"line_start":453,"line_end":453,"column_start":1,"column_end":66}},{"value":"/ it only buffers if several chunk iterators are alive at the same time.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":146048,"byte_end":146122,"line_start":454,"line_end":454,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":146123,"byte_end":146126,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ This type implements `IntoIterator` (it is **not** an iterator","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":146127,"byte_end":146193,"line_start":456,"line_end":456,"column_start":1,"column_end":67}},{"value":"/ itself), because the chunk iterators need to borrow from this","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":146194,"byte_end":146259,"line_start":457,"line_end":457,"column_start":1,"column_end":66}},{"value":"/ value. It should be stored in a local variable or temporary and","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":146260,"byte_end":146327,"line_start":458,"line_end":458,"column_start":1,"column_end":68}},{"value":"/ iterated.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":146328,"byte_end":146341,"line_start":459,"line_end":459,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":146342,"byte_end":146345,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Chunk`, each chunk's iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":146346,"byte_end":146406,"line_start":461,"line_end":461,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":146407,"byte_end":146410,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ See [`.chunks()`](../trait.Itertools.html#method.chunks) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":146411,"byte_end":146493,"line_start":463,"line_end":463,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":146494,"byte_end":146567,"line_start":464,"line_end":464,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":769},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":147712,"byte_end":147718,"line_start":510,"line_end":510,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::groupbylazy::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":772}],"decl_id":null,"docs":" An iterator that yields the Chunk iterators.","sig":null,"attributes":[{"value":"/ An iterator that yields the Chunk iterators.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":147449,"byte_end":147497,"line_start":504,"line_end":504,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":147498,"byte_end":147501,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Chunk`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":147502,"byte_end":147539,"line_start":506,"line_end":506,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":147540,"byte_end":147543,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ See [`.chunks()`](../trait.Itertools.html#method.chunks) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":147544,"byte_end":147626,"line_start":508,"line_end":508,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":147627,"byte_end":147700,"line_start":509,"line_end":509,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":779},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":148436,"byte_end":148441,"line_start":541,"line_end":541,"column_start":12,"column_end":17},"name":"Chunk","qualname":"::groupbylazy::Chunk","value":"Chunk {  }","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"decl_id":null,"docs":" An iterator for the elements in a single chunk.","sig":null,"attributes":[{"value":"/ An iterator for the elements in a single chunk.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":148329,"byte_end":148380,"line_start":538,"line_end":538,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":148381,"byte_end":148384,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":148385,"byte_end":148424,"line_start":540,"line_end":540,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1898},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs","byte_start":149485,"byte_end":149496,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902}],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor to insert a particular value","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs","byte_start":149106,"byte_end":149158,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/ between each element of the adapted iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs","byte_start":149159,"byte_end":149208,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs","byte_start":149209,"byte_end":149212,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs","byte_start":149213,"byte_end":149251,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs","byte_start":149252,"byte_end":149255,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs","byte_start":149256,"byte_end":149285,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs","byte_start":149286,"byte_end":149289,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`.intersperse()`](../trait.Itertools.html#method.intersperse) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs","byte_start":149290,"byte_end":149382,"line_start":12,"line_end":12,"column_start":1,"column_end":93}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs","byte_start":149383,"byte_end":149456,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":825},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":153697,"byte_end":153703,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"KMerge","qualname":"::kmerge_impl::KMerge","value":"KMerge {  }","parent":null,"children":[{"krate":0,"index":827}],"decl_id":null,"docs":" An iterator adaptor that merges an abitrary number of base iterators in ascending order.\n If all base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges an abitrary number of base iterators in ascending order.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":153316,"byte_end":153408,"line_start":108,"line_end":108,"column_start":1,"column_end":93}},{"value":"/ If all base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":153409,"byte_end":153480,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":153481,"byte_end":153484,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":153485,"byte_end":153524,"line_start":111,"line_end":111,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":153525,"byte_end":153528,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ See [`.kmerge()`](../trait.Itertools.html#method.kmerge) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":153529,"byte_end":153611,"line_start":113,"line_end":113,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":153612,"byte_end":153685,"line_start":114,"line_end":114,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":830},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":154223,"byte_end":154229,"line_start":140,"line_end":140,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::kmerge_impl::kmerge","value":"pub fn kmerge<I>(I) -> KMerge<<I::Item as IntoIterator>::IntoIter> where\nI: IntoIterator, I::Item: IntoIterator,\n<<I as IntoIterator>::Item as IntoIterator>::Item: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements of the contained iterators using\n the ordering function.","sig":null,"attributes":[{"value":"/ Create an iterator that merges elements of the contained iterators using","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":153904,"byte_end":153980,"line_start":128,"line_end":128,"column_start":1,"column_end":77}},{"value":"/ the ordering function.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":153981,"byte_end":154007,"line_start":129,"line_end":129,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":154008,"byte_end":154011,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `iterable.into_iter().kmerge()`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":154012,"byte_end":154062,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":154063,"byte_end":154066,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":154067,"byte_end":154074,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use itertools::kmerge;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":154075,"byte_end":154101,"line_start":134,"line_end":134,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":154102,"byte_end":154105,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ for elt in kmerge(vec![vec![0, 2, 4], vec![1, 3, 5], vec![6, 7]]) {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":154106,"byte_end":154177,"line_start":136,"line_end":136,"column_start":1,"column_end":72}},{"value":"/     /* loop body */","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":154178,"byte_end":154201,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":154202,"byte_end":154207,"line_start":138,"line_end":138,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":154208,"byte_end":154215,"line_start":139,"line_end":139,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":844},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":155883,"byte_end":155891,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"KMergeBy","qualname":"::kmerge_impl::KMergeBy","value":"KMergeBy {  }","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848}],"decl_id":null,"docs":" An iterator adaptor that merges an abitrary number of base iterators\n according to an ordering function.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges an abitrary number of base iterators","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":155545,"byte_end":155617,"line_start":189,"line_end":189,"column_start":1,"column_end":73}},{"value":"/ according to an ordering function.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":155618,"byte_end":155656,"line_start":190,"line_end":190,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":155657,"byte_end":155660,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":155661,"byte_end":155700,"line_start":192,"line_end":192,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":155701,"byte_end":155704,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ See [`.kmerge_by()`](../trait.Itertools.html#method.kmerge_by) for more","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":155705,"byte_end":155780,"line_start":194,"line_end":194,"column_start":1,"column_end":76}},{"value":"/ information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":155781,"byte_end":155797,"line_start":195,"line_end":195,"column_start":1,"column_end":17}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":155798,"byte_end":155871,"line_start":196,"line_end":196,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":852},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":156270,"byte_end":156279,"line_start":214,"line_end":214,"column_start":8,"column_end":17},"name":"kmerge_by","qualname":"::kmerge_impl::kmerge_by","value":"pub fn kmerge_by<I, F>(I, F)\n-> KMergeBy<<I::Item as IntoIterator>::IntoIter, F> where I: IntoIterator,\nI::Item: IntoIterator,\nF: FnMut(&<<I as IntoIterator>::Item as IntoIterator>::Item,\n         &<<I as IntoIterator>::Item as IntoIterator>::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements of the contained iterators.","sig":null,"attributes":[{"value":"/ Create an iterator that merges elements of the contained iterators.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":156124,"byte_end":156195,"line_start":211,"line_end":211,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":156196,"byte_end":156199,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `iterable.into_iter().kmerge_by(less_than)`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":156200,"byte_end":156262,"line_start":213,"line_end":213,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":873},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs","byte_start":158002,"byte_end":158015,"line_start":11,"line_end":11,"column_start":8,"column_end":21},"name":"merge_join_by","qualname":"::merge_join::merge_join_by","value":"pub fn merge_join_by<I, J, F>(I, J, F)\n-> MergeJoinBy<I::IntoIter, J::IntoIter, F> where I: IntoIterator,\nJ: IntoIterator, F: FnMut(&I::Item, &J::Item) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs","byte_start":157795,"byte_end":157896,"line_start":8,"line_end":8,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs","byte_start":157897,"byte_end":157900,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See [`.merge_join_by()`](trait.Itertools.html#method.merge_join_by) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs","byte_start":157901,"byte_end":157994,"line_start":10,"line_end":10,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":877},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs","byte_start":158641,"byte_end":158652,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"MergeJoinBy","qualname":"::merge_join::MergeJoinBy","value":"MergeJoinBy {  }","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883}],"decl_id":null,"docs":" An iterator adaptor that merge-joins items from the two base iterators in ascending order.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merge-joins items from the two base iterators in ascending order.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs","byte_start":158360,"byte_end":158454,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs","byte_start":158455,"byte_end":158458,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ See [`.merge_join_by()`](../trait.Itertools.html#method.merge_join_by) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs","byte_start":158459,"byte_end":158555,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs","byte_start":158556,"byte_end":158629,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1921},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":160661,"byte_end":160671,"line_start":7,"line_end":7,"column_start":5,"column_end":15},"name":"NoElements","qualname":"::minmax::MinMaxResult::NoElements","value":"MinMaxResult::NoElements","parent":{"krate":0,"index":1919},"children":[],"decl_id":null,"docs":" Empty iterator\n","sig":null,"attributes":[{"value":"/ Empty iterator","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":160638,"byte_end":160656,"line_start":6,"line_end":6,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1923},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":160753,"byte_end":160763,"line_start":10,"line_end":10,"column_start":5,"column_end":15},"name":"OneElement","qualname":"::minmax::MinMaxResult::OneElement","value":"MinMaxResult::OneElement(T)","parent":{"krate":0,"index":1919},"children":[],"decl_id":null,"docs":" Iterator with one element, so the minimum and maximum are the same\n","sig":null,"attributes":[{"value":"/ Iterator with one element, so the minimum and maximum are the same","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":160678,"byte_end":160748,"line_start":9,"line_end":9,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1926},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":160876,"byte_end":160882,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"MinMax","qualname":"::minmax::MinMaxResult::MinMax","value":"MinMaxResult::MinMax(T, T)","parent":{"krate":0,"index":1919},"children":[],"decl_id":null,"docs":" More than one element in the iterator, the first element is not larger\n than the second\n","sig":null,"attributes":[{"value":"/ More than one element in the iterator, the first element is not larger","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":160773,"byte_end":160847,"line_start":12,"line_end":12,"column_start":5,"column_end":79}},{"value":"/ than the second","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":160852,"byte_end":160871,"line_start":13,"line_end":13,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":1919},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":160616,"byte_end":160628,"line_start":5,"line_end":5,"column_start":10,"column_end":22},"name":"MinMaxResult","qualname":"::minmax::MinMaxResult","value":"pub enum MinMaxResult<T> {\n\n    /// Empty iterator\n    NoElements,\n\n    /// Iterator with one element, so the minimum and maximum are the same\n    OneElement(T),\n\n    /// More than one element in the iterator, the first element is not larger\n    /// than the second\n    MinMax(T, T),\n}","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1926}],"decl_id":null,"docs":" `MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for\n more detail.\n","sig":null,"attributes":[{"value":"/ `MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":160467,"byte_end":160548,"line_start":2,"line_end":2,"column_start":1,"column_end":82}},{"value":"/ more detail.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":160549,"byte_end":160565,"line_start":3,"line_end":3,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161700,"byte_end":161711,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"into_option","qualname":"<MinMaxResult<T>>::into_option","value":"pub fn into_option(Self) -> Option<(T, T)>","parent":null,"children":[],"decl_id":null,"docs":" `into_option` creates an `Option` of type `(T, T)`. The returned `Option`\n has variant `None` if and only if the `MinMaxResult` has variant\n `NoElements`. Otherwise `Some((x, y))` is returned where `x <= y`.\n If the `MinMaxResult` has variant `OneElement(x)`, performing this\n operation will make one clone of `x`.","sig":null,"attributes":[{"value":"/ `into_option` creates an `Option` of type `(T, T)`. The returned `Option`","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":160929,"byte_end":161006,"line_start":18,"line_end":18,"column_start":5,"column_end":82}},{"value":"/ has variant `None` if and only if the `MinMaxResult` has variant","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161011,"byte_end":161079,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/ `NoElements`. Otherwise `Some((x, y))` is returned where `x <= y`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161084,"byte_end":161154,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ If the `MinMaxResult` has variant `OneElement(x)`, performing this","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161159,"byte_end":161229,"line_start":21,"line_end":21,"column_start":5,"column_end":75}},{"value":"/ operation will make one clone of `x`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161234,"byte_end":161275,"line_start":22,"line_end":22,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161280,"byte_end":161283,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161288,"byte_end":161302,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161307,"byte_end":161310,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161315,"byte_end":161322,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use itertools::MinMaxResult::{self, NoElements, OneElement, MinMax};","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161327,"byte_end":161399,"line_start":27,"line_end":27,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161404,"byte_end":161407,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let r: MinMaxResult<i32> = NoElements;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161412,"byte_end":161454,"line_start":29,"line_end":29,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(r.into_option(), None);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161459,"byte_end":161497,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161502,"byte_end":161505,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ let r = OneElement(1);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161510,"byte_end":161536,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(r.into_option(), Some((1, 1)));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161541,"byte_end":161587,"line_start":33,"line_end":33,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161592,"byte_end":161595,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let r = MinMax(1, 2);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161600,"byte_end":161625,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(r.into_option(), Some((1, 2)));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161630,"byte_end":161676,"line_start":36,"line_end":36,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":161681,"byte_end":161688,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1944},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":164511,"byte_end":164520,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"MultiPeek","qualname":"::multipeek_impl::MultiPeek","value":"MultiPeek {  }","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948}],"decl_id":null,"docs":" See [`multipeek()`](../fn.multipeek.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`multipeek()`](../fn.multipeek.html) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":164408,"byte_end":164475,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":909},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":164746,"byte_end":164755,"line_start":20,"line_end":20,"column_start":8,"column_end":17},"name":"multipeek","qualname":"::multipeek_impl::multipeek","value":"pub fn multipeek<I>(I) -> MultiPeek<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that allows the user to peek at multiple `.next()`\n values without advancing the base iterator.\n","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows the user to peek at multiple `.next()`","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":164616,"byte_end":164690,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ values without advancing the base iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":164691,"byte_end":164738,"line_start":19,"line_end":19,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":165037,"byte_end":165047,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"reset_peek","qualname":"<MultiPeek<I>>::reset_peek","value":"pub fn reset_peek(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the peeking “cursor”\n","sig":null,"attributes":[{"value":"/ Reset the peeking “cursor”","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":164991,"byte_end":165025,"line_start":33,"line_end":33,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":165311,"byte_end":165315,"line_start":43,"line_end":43,"column_start":12,"column_end":16},"name":"peek","qualname":"<MultiPeek<I>>::peek","value":"pub fn peek(&mut Self) -> Option<&I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Works exactly like `.next()` with the only difference that it doesn't\n advance itself. `.peek()` can be called multiple times, to peek\n further ahead.\n","sig":null,"attributes":[{"value":"/ Works exactly like `.next()` with the only difference that it doesn't","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":165131,"byte_end":165204,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ advance itself. `.peek()` can be called multiple times, to peek","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":165209,"byte_end":165276,"line_start":41,"line_end":41,"column_start":5,"column_end":72}},{"value":"/ further ahead.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":165281,"byte_end":165299,"line_start":42,"line_end":42,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1955},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs","byte_start":167114,"byte_end":167122,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"PadUsing","qualname":"::pad_tail::PadUsing","value":"PadUsing {  }","parent":null,"children":[{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961}],"decl_id":null,"docs":" An iterator adaptor that pads a sequence to a minimum length by filling\n missing elements using a closure.","sig":null,"attributes":[{"value":"/ An iterator adaptor that pads a sequence to a minimum length by filling","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs","byte_start":166761,"byte_end":166836,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ missing elements using a closure.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs","byte_start":166837,"byte_end":166874,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs","byte_start":166875,"byte_end":166878,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs","byte_start":166879,"byte_end":166918,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs","byte_start":166919,"byte_end":166922,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.pad_using()`](../trait.Itertools.html#method.pad_using) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs","byte_start":166923,"byte_end":167011,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs","byte_start":167029,"byte_end":167102,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":951},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":169320,"byte_end":169331,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"name":"PeekingNext","qualname":"::peeking_take_while::PeekingNext","value":"PeekingNext: Iterator","parent":null,"children":[{"krate":0,"index":952}],"decl_id":null,"docs":" An iterator that allows peeking at an element before deciding to accept it.","sig":null,"attributes":[{"value":"/ An iterator that allows peeking at an element before deciding to accept it.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":168914,"byte_end":168993,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":168994,"byte_end":168997,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.peeking_take_while()`](trait.Itertools.html#method.peeking_take_while)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":168998,"byte_end":169079,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/ for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":169080,"byte_end":169105,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":169106,"byte_end":169109,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is implemented by peeking adaptors like peekable and put back,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":169110,"byte_end":169181,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ but also by a few iterators that can be peeked natively, like the slice’s","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":169182,"byte_end":169261,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ by reference iterator (`std::slice::Iter`).","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":169262,"byte_end":169309,"line_start":14,"line_end":14,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":169515,"byte_end":169527,"line_start":19,"line_end":19,"column_start":8,"column_end":20},"name":"peeking_next","qualname":"::peeking_take_while::PeekingNext::peeking_next","value":"pub fn peeking_next<F>(&mut Self, F) -> Option<Self::Item> where\nF: FnOnce(&Self::Item) -> bool","parent":{"krate":0,"index":951},"children":[],"decl_id":null,"docs":" Pass a reference to the next iterator element to the closure `accept`;\n if `accept` returns true, return it as the next element,\n else None.\n","sig":null,"attributes":[{"value":"/ Pass a reference to the next iterator element to the closure `accept`;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":169349,"byte_end":169423,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ if `accept` returns true, return it as the next element,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":169428,"byte_end":169488,"line_start":17,"line_end":17,"column_start":5,"column_end":65}},{"value":"/ else None.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":169493,"byte_end":169507,"line_start":18,"line_end":18,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":966},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":171046,"byte_end":171062,"line_start":80,"line_end":80,"column_start":12,"column_end":28},"name":"PeekingTakeWhile","qualname":"::peeking_take_while::PeekingTakeWhile","value":"PeekingTakeWhile {  }","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971}],"decl_id":null,"docs":" An iterator adaptor that takes items while a closure returns `true`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that takes items while a closure returns `true`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":170773,"byte_end":170845,"line_start":75,"line_end":75,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":170846,"byte_end":170849,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ See [`.peeking_take_while()`](../trait.Itertools.html#method.peeking_take_while)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":170850,"byte_end":170934,"line_start":77,"line_end":77,"column_start":1,"column_end":85}},{"value":"/ for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":170935,"byte_end":170960,"line_start":78,"line_end":78,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":170961,"byte_end":171034,"line_start":79,"line_end":79,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2011},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":173548,"byte_end":173562,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"ProcessResults","qualname":"::process_results_impl::ProcessResults","value":"ProcessResults {  }","parent":null,"children":[{"krate":0,"index":2015},{"krate":0,"index":2016}],"decl_id":null,"docs":" An iterator that produces only the `T` values as long as the\n inner iterator produces `Ok(T)`.","sig":null,"attributes":[{"value":"/ An iterator that produces only the `T` values as long as the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":173240,"byte_end":173304,"line_start":2,"line_end":2,"column_start":1,"column_end":65}},{"value":"/ inner iterator produces `Ok(T)`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":173305,"byte_end":173341,"line_start":3,"line_end":3,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":173342,"byte_end":173345,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Used by [`process_results`](../fn.process_results.html), see its docs","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":173346,"byte_end":173419,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":173420,"byte_end":173445,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":173446,"byte_end":173519,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":992},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":175467,"byte_end":175482,"line_start":71,"line_end":71,"column_start":8,"column_end":23},"name":"process_results","qualname":"::process_results_impl::process_results","value":"pub fn process_results<I, F, T, E, R>(I, F) -> Result<R, E> where\nI: IntoIterator<Item = Result<T, E>>,\nF: FnOnce(ProcessResults<, I::IntoIter, E>) -> R","parent":null,"children":[],"decl_id":null,"docs":" “Lift” a function of the values of an iterator so that it can process\n an iterator of `Result` values instead.","sig":null,"attributes":[{"value":"/ “Lift” a function of the values of an iterator so that it can process","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174134,"byte_end":174211,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ an iterator of `Result` values instead.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174212,"byte_end":174255,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174256,"byte_end":174259,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ `iterable` is an iterator or iterable with `Result<T, E>` elements, where","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174260,"byte_end":174337,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ `T` is the value type and `E` the error type.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174338,"byte_end":174387,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174388,"byte_end":174391,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ `processor` is a closure that receives an adapted version of the iterable","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174392,"byte_end":174469,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ as the only argument — the adapted iterator produces elements of type `T`,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174470,"byte_end":174550,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ as long as the original iterator produces `Ok` values.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174551,"byte_end":174609,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174610,"byte_end":174613,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ If the original iterable produces an error at any point, the adapted","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174614,"byte_end":174686,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/ iterator ends and the `process_results` function will return the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174687,"byte_end":174755,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/ error iself.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174756,"byte_end":174772,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174773,"byte_end":174776,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Otherwise, the return value from the closure is returned wrapped","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174777,"byte_end":174845,"line_start":50,"line_end":50,"column_start":1,"column_end":69}},{"value":"/ inside `Ok`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174846,"byte_end":174862,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174863,"byte_end":174866,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174867,"byte_end":174880,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174881,"byte_end":174884,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174885,"byte_end":174892,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use itertools::process_results;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174893,"byte_end":174928,"line_start":56,"line_end":56,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174929,"byte_end":174932,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ type R = Result<i32, &'static str>;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174933,"byte_end":174972,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174973,"byte_end":174976,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let first_values: Vec<R> = vec![Ok(1), Ok(0), Ok(3)];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":174977,"byte_end":175034,"line_start":60,"line_end":60,"column_start":1,"column_end":58}},{"value":"/ let second_values: Vec<R> = vec![Ok(2), Ok(1), Err(\"overflow\")];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":175035,"byte_end":175103,"line_start":61,"line_end":61,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":175104,"byte_end":175107,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // “Lift” the iterator .max() method to work on the values in Results using process_results","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":175108,"byte_end":175207,"line_start":63,"line_end":63,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":175208,"byte_end":175211,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let first_max = process_results(first_values, |iter| iter.max().unwrap_or(0));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":175212,"byte_end":175294,"line_start":65,"line_end":65,"column_start":1,"column_end":83}},{"value":"/ let second_max = process_results(second_values, |iter| iter.max().unwrap_or(0));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":175295,"byte_end":175379,"line_start":66,"line_end":66,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":175380,"byte_end":175383,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(first_max, Ok(3));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":175384,"byte_end":175417,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"/ assert!(second_max.is_err());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":175418,"byte_end":175451,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":175452,"byte_end":175459,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2022},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176006,"byte_end":176014,"line_start":8,"line_end":8,"column_start":12,"column_end":20},"name":"PutBackN","qualname":"::put_back_n_impl::PutBackN","value":"PutBackN {  }","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2025}],"decl_id":null,"docs":" An iterator adaptor that allows putting multiple\n items in front of the iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows putting multiple","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":175838,"byte_end":175890,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"/ items in front of the iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":175891,"byte_end":175926,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":175927,"byte_end":175930,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":175931,"byte_end":175970,"line_start":6,"line_end":6,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1001},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176217,"byte_end":176227,"line_start":17,"line_end":17,"column_start":8,"column_end":18},"name":"put_back_n","qualname":"::put_back_n_impl::put_back_n","value":"pub fn put_back_n<I>(I) -> PutBackN<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator where you can put back multiple values to the front\n of the iteration.","sig":null,"attributes":[{"value":"/ Create an iterator where you can put back multiple values to the front","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176069,"byte_end":176143,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ of the iteration.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176144,"byte_end":176165,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176166,"byte_end":176169,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176170,"byte_end":176209,"line_start":16,"line_end":16,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176810,"byte_end":176818,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBackN<I>>::put_back","value":"pub fn put_back(&mut Self, I::Item)","parent":null,"children":[],"decl_id":null,"docs":" Puts x in front of the iterator.\n The values are yielded in order of the most recently put back\n values first.","sig":null,"attributes":[{"value":"/ Puts x in front of the iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176418,"byte_end":176454,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"/ The values are yielded in order of the most recently put back","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176459,"byte_end":176524,"line_start":28,"line_end":28,"column_start":5,"column_end":70}},{"value":"/ values first.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176529,"byte_end":176546,"line_start":29,"line_end":29,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176551,"byte_end":176554,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176559,"byte_end":176570,"line_start":31,"line_end":31,"column_start":5,"column_end":16}},{"value":"/ use itertools::put_back_n;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176575,"byte_end":176605,"line_start":32,"line_end":32,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176610,"byte_end":176613,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let mut it = put_back_n(1..5);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176618,"byte_end":176652,"line_start":34,"line_end":34,"column_start":5,"column_end":39}},{"value":"/ it.next();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176657,"byte_end":176671,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/ it.put_back(1);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176676,"byte_end":176695,"line_start":36,"line_end":36,"column_start":5,"column_end":24}},{"value":"/ it.put_back(0);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176700,"byte_end":176719,"line_start":37,"line_end":37,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176724,"byte_end":176727,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ assert!(itertools::equal(it, 0..5));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176732,"byte_end":176772,"line_start":39,"line_end":39,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176777,"byte_end":176784,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176789,"byte_end":176798,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2032},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177449,"byte_end":177455,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"RcIter","qualname":"::rciter_impl::RcIter","value":"RcIter { rciter }","parent":null,"children":[{"krate":0,"index":2034}],"decl_id":null,"docs":" A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.\n","sig":null,"attributes":[{"value":"/ A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177347,"byte_end":177420,"line_start":6,"line_end":6,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":2034},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177497,"byte_end":177503,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"rciter","qualname":"::rciter_impl::RcIter::rciter","value":"std::rc::Rc<std::cell::RefCell<I>>","parent":{"krate":0,"index":2032},"children":[],"decl_id":null,"docs":" The boxed iterator.\n","sig":null,"attributes":[{"value":"/ The boxed iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177465,"byte_end":177488,"line_start":9,"line_end":9,"column_start":5,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1015},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178772,"byte_end":178778,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"rciter","qualname":"::rciter_impl::rciter","value":"pub fn rciter<I>(I) -> RcIter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator inside a `Rc<RefCell<_>>` wrapper.","sig":null,"attributes":[{"value":"/ Return an iterator inside a `Rc<RefCell<_>>` wrapper.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177524,"byte_end":177581,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177582,"byte_end":177585,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned `RcIter` can be cloned, and each clone will refer back to the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177586,"byte_end":177664,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ same original iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177665,"byte_end":177692,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177693,"byte_end":177696,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `RcIter` allows doing interesting things like using `.zip()` on an iterator with","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177697,"byte_end":177781,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ itself, at the cost of runtime borrow checking which may have a performance","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177782,"byte_end":177861,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ penalty.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177862,"byte_end":177874,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177875,"byte_end":177878,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177879,"byte_end":177921,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177922,"byte_end":177925,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177926,"byte_end":177933,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use itertools::rciter;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177934,"byte_end":177960,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ use itertools::zip;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177961,"byte_end":177984,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177985,"byte_end":177988,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // In this example a range iterator is created and we iterate it using","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":177989,"byte_end":178063,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ // three separate handles (two of them given to zip).","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178064,"byte_end":178121,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/ // We also use the IntoIterator implementation for `&RcIter`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178122,"byte_end":178187,"line_start":30,"line_end":30,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178188,"byte_end":178191,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut iter = rciter(0..9);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178192,"byte_end":178224,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ let mut z = zip(&iter, &iter);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178225,"byte_end":178259,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178260,"byte_end":178263,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(z.next(), Some((0, 1)));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178264,"byte_end":178303,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(z.next(), Some((2, 3)));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178304,"byte_end":178343,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(z.next(), Some((4, 5)));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178344,"byte_end":178383,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(iter.next(), Some(6));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178384,"byte_end":178421,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(z.next(), Some((7, 8)));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178422,"byte_end":178461,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(z.next(), None);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178462,"byte_end":178493,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178494,"byte_end":178501,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178502,"byte_end":178505,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ **Panics** in iterator methods if a borrow error is encountered in the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178506,"byte_end":178580,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ iterator methods. It can only happen if the `RcIter` is reentered in","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178581,"byte_end":178653,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/ `.next()`, i.e. if it somehow participates in an “iterator knot”","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178654,"byte_end":178726,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ where it is an adaptor of itself.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178727,"byte_end":178764,"line_start":46,"line_end":46,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2038},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs","byte_start":180285,"byte_end":180292,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::repeatn::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":2040},{"krate":0,"index":2041}],"decl_id":null,"docs":" An iterator that produces *n* repetitions of an element.","sig":null,"attributes":[{"value":"/ An iterator that produces *n* repetitions of an element.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs","byte_start":180060,"byte_end":180120,"line_start":2,"line_end":2,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs","byte_start":180121,"byte_end":180124,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ See [`repeat_n()`](../fn.repeat_n.html) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs","byte_start":180125,"byte_end":180190,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs","byte_start":180191,"byte_end":180256,"line_start":5,"line_end":5,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1036},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs","byte_start":180409,"byte_end":180417,"line_start":13,"line_end":13,"column_start":8,"column_end":16},"name":"repeat_n","qualname":"::repeatn::repeat_n","value":"pub fn repeat_n<A>(A, usize) -> RepeatN<A> where A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that produces `n` repetitions of `element`.\n","sig":null,"attributes":[{"value":"/ Create an iterator that produces `n` repetitions of `element`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs","byte_start":180335,"byte_end":180401,"line_start":12,"line_end":12,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1065},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184115,"byte_end":184125,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"RepeatCall","qualname":"::sources::RepeatCall","value":"RepeatCall {  }","parent":null,"children":[{"krate":0,"index":1067}],"decl_id":null,"docs":" See [`repeat_call`](../fn.repeat_call.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`repeat_call`](../fn.repeat_call.html) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":183969,"byte_end":184038,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"deprecated(note = \"Use std repeat_with() instead\", since = \"0.8\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184039,"byte_end":184103,"line_start":9,"line_end":9,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":1070},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184882,"byte_end":184893,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"repeat_call","qualname":"::sources::repeat_call","value":"pub fn repeat_call<F, A>(F) -> RepeatCall<F> where F: FnMut() -> A","parent":null,"children":[],"decl_id":null,"docs":" An iterator source that produces elements indefinitely by calling\n a given closure.","sig":null,"attributes":[{"value":"/ An iterator source that produces elements indefinitely by calling","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184223,"byte_end":184292,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ a given closure.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184293,"byte_end":184313,"line_start":20,"line_end":20,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184314,"byte_end":184317,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is the return type of the closure.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184318,"byte_end":184378,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184379,"byte_end":184382,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184383,"byte_end":184390,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use itertools::repeat_call;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184391,"byte_end":184422,"line_start":25,"line_end":25,"column_start":1,"column_end":32}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184423,"byte_end":184452,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/ use std::collections::BinaryHeap;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184453,"byte_end":184490,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184491,"byte_end":184494,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let mut heap = BinaryHeap::from(vec![2, 5, 3, 7, 8]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184495,"byte_end":184552,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184553,"byte_end":184556,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // extract each element in sorted order","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184557,"byte_end":184600,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/ for element in repeat_call(|| heap.pop()).while_some() {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184601,"byte_end":184661,"line_start":32,"line_end":32,"column_start":1,"column_end":61}},{"value":"/     print!(\"{}\", element);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184662,"byte_end":184692,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184693,"byte_end":184698,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184699,"byte_end":184702,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ itertools::assert_equal(","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184703,"byte_end":184731,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/     repeat_call(|| 1).take(5),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184732,"byte_end":184766,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/     vec![1, 1, 1, 1, 1]","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184767,"byte_end":184794,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184795,"byte_end":184801,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184802,"byte_end":184809,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"deprecated(note = \"Use std repeat_with() instead\", since = \"0.8\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184810,"byte_end":184874,"line_start":41,"line_end":41,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":1079},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186500,"byte_end":186506,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sources::unfold","value":"pub fn unfold<A, St, F>(St, F) -> Unfold<St, F> where F: FnMut(&mut St) ->\nOption<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unfold source with the specified closure as the \"iterator\n function\" and an initial state to eventually pass to the closure","sig":null,"attributes":[{"value":"/ Creates a new unfold source with the specified closure as the \"iterator","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185258,"byte_end":185333,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ function\" and an initial state to eventually pass to the closure","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185334,"byte_end":185402,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185403,"byte_end":185406,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ `unfold` is a general iterator builder: it has a mutable state value,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185407,"byte_end":185480,"line_start":66,"line_end":66,"column_start":1,"column_end":74}},{"value":"/ and a closure with access to the state that produces the next value.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185481,"byte_end":185553,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185554,"byte_end":185557,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ This more or less equivalent to a regular struct with an `Iterator`","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185558,"byte_end":185629,"line_start":69,"line_end":69,"column_start":1,"column_end":72}},{"value":"/ implementation, and is useful for one-off iterators.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185630,"byte_end":185686,"line_start":70,"line_end":70,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185687,"byte_end":185690,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185691,"byte_end":185698,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ // an iterator that yields sequential Fibonacci numbers,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185699,"byte_end":185759,"line_start":73,"line_end":73,"column_start":1,"column_end":61}},{"value":"/ // and stops at the maximum representable value.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185760,"byte_end":185812,"line_start":74,"line_end":74,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185813,"byte_end":185816,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ use itertools::unfold;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185817,"byte_end":185843,"line_start":76,"line_end":76,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185844,"byte_end":185847,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ let (mut x1, mut x2) = (1u32, 1u32);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185848,"byte_end":185888,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/ let mut fibonacci = unfold((), move |_| {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185889,"byte_end":185934,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/     // Attempt to get the next Fibonacci number","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185935,"byte_end":185986,"line_start":80,"line_end":80,"column_start":1,"column_end":52}},{"value":"/     let next = x1.saturating_add(x2);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185987,"byte_end":186028,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186029,"byte_end":186032,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Shift left: ret <- x1 <- x2 <- next","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186033,"byte_end":186079,"line_start":83,"line_end":83,"column_start":1,"column_end":47}},{"value":"/     let ret = x1;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186080,"byte_end":186101,"line_start":84,"line_end":84,"column_start":1,"column_end":22}},{"value":"/     x1 = x2;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186102,"byte_end":186118,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/     x2 = next;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186119,"byte_end":186137,"line_start":86,"line_end":86,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186138,"byte_end":186141,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/     // If addition has saturated at the maximum, we are finished","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186142,"byte_end":186210,"line_start":88,"line_end":88,"column_start":1,"column_end":69}},{"value":"/     if ret == x1 && ret > 1 {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186211,"byte_end":186244,"line_start":89,"line_end":89,"column_start":1,"column_end":34}},{"value":"/         return None;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186245,"byte_end":186269,"line_start":90,"line_end":90,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186270,"byte_end":186279,"line_start":91,"line_end":91,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186280,"byte_end":186283,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     Some(ret)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186284,"byte_end":186301,"line_start":93,"line_end":93,"column_start":1,"column_end":18}},{"value":"/ });","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186302,"byte_end":186309,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186310,"byte_end":186313,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ itertools::assert_equal(fibonacci.by_ref().take(8),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186314,"byte_end":186369,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/                         vec![1, 1, 2, 3, 5, 8, 13, 21]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186370,"byte_end":186430,"line_start":97,"line_end":97,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(fibonacci.last(), Some(2_971_215_073))","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186431,"byte_end":186484,"line_start":98,"line_end":98,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186485,"byte_end":186492,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2047},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186932,"byte_end":186938,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::sources::Unfold","value":"Unfold { state }","parent":null,"children":[{"krate":0,"index":2050},{"krate":0,"index":2051}],"decl_id":null,"docs":" See [`unfold`](../fn.unfold.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`unfold`](../fn.unfold.html) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186778,"byte_end":186837,"line_start":115,"line_end":115,"column_start":1,"column_end":60}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186855,"byte_end":186920,"line_start":117,"line_end":117,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2051},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":187046,"byte_end":187051,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"name":"state","qualname":"::sources::Unfold::state","value":"St","parent":{"krate":0,"index":2047},"children":[],"decl_id":null,"docs":" Internal state that will be passed to the closure on the next iteration\n","sig":null,"attributes":[{"value":"/ Internal state that will be passed to the closure on the next iteration","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186962,"byte_end":187037,"line_start":120,"line_end":120,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":2056},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":187711,"byte_end":187718,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"Iterate","qualname":"::sources::Iterate","value":"Iterate {  }","parent":null,"children":[{"krate":0,"index":2059},{"krate":0,"index":2060}],"decl_id":null,"docs":" An iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[{"value":"/ An iterator that infinitely applies function to value and yields results.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":187401,"byte_end":187478,"line_start":141,"line_end":141,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":187479,"byte_end":187482,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iterate()`] function. See its documentation for more.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":187483,"byte_end":187574,"line_start":143,"line_end":143,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":187575,"byte_end":187578,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ [`iterate()`]: ../fn.iterate.html","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":187579,"byte_end":187616,"line_start":145,"line_end":145,"column_start":1,"column_end":38}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":187634,"byte_end":187699,"line_start":147,"line_end":147,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1102},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":188475,"byte_end":188482,"line_start":183,"line_end":183,"column_start":8,"column_end":15},"name":"iterate","qualname":"::sources::iterate","value":"pub fn iterate<St, F>(St, F) -> Iterate<St, F> where F: FnMut(&St) -> St","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[{"value":"/ Creates a new iterator that infinitely applies function to value and yields results.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":188243,"byte_end":188331,"line_start":176,"line_end":176,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":188332,"byte_end":188335,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":188336,"byte_end":188343,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/ use itertools::iterate;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":188344,"byte_end":188371,"line_start":179,"line_end":179,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":188372,"byte_end":188375,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ itertools::assert_equal(iterate(1, |&i| i * 3).take(5), vec![1, 3, 9, 27, 81]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":188376,"byte_end":188459,"line_start":181,"line_end":181,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":188460,"byte_end":188467,"line_start":182,"line_end":182,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2076},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tee.rs","byte_start":189203,"byte_end":189206,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"Tee","qualname":"::tee::Tee","value":"Tee {  }","parent":null,"children":[{"krate":0,"index":2078},{"krate":0,"index":2079}],"decl_id":null,"docs":" One half of an iterator pair where both return the same elements.","sig":null,"attributes":[{"value":"/ One half of an iterator pair where both return the same elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tee.rs","byte_start":188950,"byte_end":189019,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tee.rs","byte_start":189020,"byte_end":189023,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See [`.tee()`](../trait.Itertools.html#method.tee) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tee.rs","byte_start":189024,"byte_end":189100,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tee.rs","byte_start":189101,"byte_end":189174,"line_start":19,"line_end":19,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2083},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":191052,"byte_end":191063,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"name":"TupleBuffer","qualname":"::tuple_impl::TupleBuffer","value":"TupleBuffer {  }","parent":null,"children":[{"krate":0,"index":2085},{"krate":0,"index":2086}],"decl_id":null,"docs":" An iterator over a incomplete tuple.","sig":null,"attributes":[{"value":"/ An iterator over a incomplete tuple.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":190844,"byte_end":190884,"line_start":5,"line_end":5,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":190885,"byte_end":190888,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`.tuples()`](../trait.Itertools.html#method.tuples) and","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":190889,"byte_end":190953,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/ [`Tuples::into_buffer()`](struct.Tuples.html#method.into_buffer).","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":190954,"byte_end":191023,"line_start":8,"line_end":8,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1132},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":192289,"byte_end":192295,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"Tuples","qualname":"::tuple_impl::Tuples","value":"Tuples {  }","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136}],"decl_id":null,"docs":" An iterator that groups the items in tuples of a specific size.","sig":null,"attributes":[{"value":"/ An iterator that groups the items in tuples of a specific size.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":192049,"byte_end":192116,"line_start":61,"line_end":61,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":192117,"byte_end":192120,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ See [`.tuples()`](../trait.Itertools.html#method.tuples) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":192121,"byte_end":192203,"line_start":63,"line_end":63,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":192204,"byte_end":192277,"line_start":64,"line_end":64,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193334,"byte_end":193345,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Tuples<I, T>>::into_buffer","value":"pub fn into_buffer(Self) -> TupleBuffer<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a buffer with the produced items that was not enough to be grouped in a tuple.","sig":null,"attributes":[{"value":"/ Return a buffer with the produced items that was not enough to be grouped in a tuple.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":192965,"byte_end":193054,"line_start":99,"line_end":99,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193059,"byte_end":193062,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193067,"byte_end":193074,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193079,"byte_end":193108,"line_start":102,"line_end":102,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193113,"byte_end":193116,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ let mut iter = (0..5).tuples();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193121,"byte_end":193156,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Some((0, 1, 2)), iter.next());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193161,"byte_end":193206,"line_start":105,"line_end":105,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193211,"byte_end":193245,"line_start":106,"line_end":106,"column_start":5,"column_end":39}},{"value":"/ itertools::assert_equal(vec![3, 4], iter.into_buffer());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193250,"byte_end":193310,"line_start":107,"line_end":107,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193315,"byte_end":193322,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2090},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193709,"byte_end":193721,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"name":"TupleWindows","qualname":"::tuple_impl::TupleWindows","value":"TupleWindows {  }","parent":null,"children":[{"krate":0,"index":2093},{"krate":0,"index":2094}],"decl_id":null,"docs":" An iterator over all contiguous windows that produces tuples of a specific size.","sig":null,"attributes":[{"value":"/ An iterator over all contiguous windows that produces tuples of a specific size.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193417,"byte_end":193501,"line_start":115,"line_end":115,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193502,"byte_end":193505,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ See [`.tuple_windows()`](../trait.Itertools.html#method.tuple_windows) for more","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193506,"byte_end":193589,"line_start":117,"line_end":117,"column_start":1,"column_end":84}},{"value":"/ information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193590,"byte_end":193606,"line_start":118,"line_end":118,"column_start":1,"column_end":17}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":193607,"byte_end":193680,"line_start":119,"line_end":119,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1158},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":195018,"byte_end":195030,"line_start":174,"line_end":174,"column_start":11,"column_end":23},"name":"TupleCollect","qualname":"::tuple_impl::TupleCollect","value":"TupleCollect: Sized","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1166}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1159},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":195049,"byte_end":195053,"line_start":175,"line_end":175,"column_start":10,"column_end":14},"name":"Item","qualname":"::tuple_impl::TupleCollect::Item","value":"type Item;","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1160},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":195064,"byte_end":195070,"line_start":176,"line_end":176,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::tuple_impl::TupleCollect::Buffer","value":"type Buffer: Default + AsRef<[Option<Self::Item>]> + AsMut<[Option<Self::Item>]>;","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":195149,"byte_end":195166,"line_start":178,"line_end":178,"column_start":8,"column_end":25},"name":"collect_from_iter","qualname":"::tuple_impl::TupleCollect::collect_from_iter","value":"pub fn collect_from_iter<I>(I, &mut Self::Buffer) -> Option<Self> where\nI: IntoIterator<Item = Self::Item>","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":195277,"byte_end":195301,"line_start":181,"line_end":181,"column_start":8,"column_end":32},"name":"collect_from_iter_no_buf","qualname":"::tuple_impl::TupleCollect::collect_from_iter_no_buf","value":"pub fn collect_from_iter_no_buf<I>(I) -> Option<Self> where\nI: IntoIterator<Item = Self::Item>","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":195388,"byte_end":195397,"line_start":184,"line_end":184,"column_start":8,"column_end":17},"name":"num_items","qualname":"::tuple_impl::TupleCollect::num_items","value":"pub fn num_items() -> usize","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":195418,"byte_end":195433,"line_start":186,"line_end":186,"column_start":8,"column_end":23},"name":"left_shift_push","qualname":"::tuple_impl::TupleCollect::left_shift_push","value":"pub fn left_shift_push(&mut Self, Self::Item)","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2147},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":198160,"byte_end":198168,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"UniqueBy","qualname":"::unique_impl::UniqueBy","value":"UniqueBy {  }","parent":null,"children":[{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[{"value":"/ An iterator adapter to filter out duplicate elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":197910,"byte_end":197967,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":197968,"byte_end":197971,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.unique_by()`](../trait.Itertools.html#method.unique) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":197972,"byte_end":198057,"line_start":9,"line_end":9,"column_start":1,"column_end":86}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":198075,"byte_end":198148,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2160},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":200790,"byte_end":200796,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"Unique","qualname":"::unique_impl::Unique","value":"Unique {  }","parent":null,"children":[{"krate":0,"index":2162}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[{"value":"/ An iterator adapter to filter out duplicate elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":200543,"byte_end":200600,"line_start":107,"line_end":107,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":200601,"byte_end":200604,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ See [`.unique()`](../trait.Itertools.html#method.unique) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":200605,"byte_end":200687,"line_start":109,"line_end":109,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":200705,"byte_end":200778,"line_start":111,"line_end":111,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1209},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":201597,"byte_end":201609,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"WithPosition","qualname":"::with_position::WithPosition","value":"WithPosition {  }","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212}],"decl_id":null,"docs":" An iterator adaptor that wraps each element in an [`Position`](../enum.Position.html).","sig":null,"attributes":[{"value":"/ An iterator adaptor that wraps each element in an [`Position`](../enum.Position.html).","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":201266,"byte_end":201356,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":201357,"byte_end":201360,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Position<I::Item>`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":201361,"byte_end":201410,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":201411,"byte_end":201414,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`.with_position()`](../trait.Itertools.html#method.with_position) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":201415,"byte_end":201511,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":201512,"byte_end":201585,"line_start":8,"line_end":8,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2169},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202226,"byte_end":202231,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"name":"First","qualname":"::with_position::Position::First","value":"Position::First(T)","parent":{"krate":0,"index":2167},"children":[],"decl_id":null,"docs":" This is the first element.\n","sig":null,"attributes":[{"value":"/ This is the first element.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202191,"byte_end":202221,"line_start":32,"line_end":32,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2172},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202296,"byte_end":202302,"line_start":35,"line_end":35,"column_start":5,"column_end":11},"name":"Middle","qualname":"::with_position::Position::Middle","value":"Position::Middle(T)","parent":{"krate":0,"index":2167},"children":[],"decl_id":null,"docs":" This is neither the first nor the last element.\n","sig":null,"attributes":[{"value":"/ This is neither the first nor the last element.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202240,"byte_end":202291,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2175},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202345,"byte_end":202349,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Last","qualname":"::with_position::Position::Last","value":"Position::Last(T)","parent":{"krate":0,"index":2167},"children":[],"decl_id":null,"docs":" This is the last element.\n","sig":null,"attributes":[{"value":"/ This is the last element.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202311,"byte_end":202340,"line_start":36,"line_end":36,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2178},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202392,"byte_end":202396,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"Only","qualname":"::with_position::Position::Only","value":"Position::Only(T)","parent":{"krate":0,"index":2167},"children":[],"decl_id":null,"docs":" This is the only element.\n","sig":null,"attributes":[{"value":"/ This is the only element.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202358,"byte_end":202387,"line_start":38,"line_end":38,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":2167},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202173,"byte_end":202181,"line_start":31,"line_end":31,"column_start":10,"column_end":18},"name":"Position","qualname":"::with_position::Position","value":"pub enum Position<T> {\n\n    /// This is the first element.\n    First(T),\n\n    /// This is neither the first nor the last element.\n    Middle(T),\n\n    /// This is the last element.\n    Last(T),\n\n    /// This is the only element.\n    Only(T),\n}","parent":null,"children":[{"krate":0,"index":2169},{"krate":0,"index":2172},{"krate":0,"index":2175},{"krate":0,"index":2178}],"decl_id":null,"docs":" A value yielded by `WithPosition`.\n Indicates the position of this element in the iterator results.","sig":null,"attributes":[{"value":"/ A value yielded by `WithPosition`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":201918,"byte_end":201956,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/ Indicates the position of this element in the iterator results.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":201957,"byte_end":202024,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202025,"byte_end":202028,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ See [`.with_position()`](trait.Itertools.html#method.with_position) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202029,"byte_end":202122,"line_start":29,"line_end":29,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202469,"byte_end":202479,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Position<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value.\n","sig":null,"attributes":[{"value":"/ Return the inner value.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202430,"byte_end":202457,"line_start":43,"line_end":43,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2195},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204285,"byte_end":204290,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::zip_eq_impl::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2199}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"/ An iterator which iterates two other iterators simultaneously","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204023,"byte_end":204088,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204089,"byte_end":204092,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ See [`.zip_eq()`](../trait.Itertools.html#method.zip_eq) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204093,"byte_end":204175,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204200,"byte_end":204273,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1227},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204665,"byte_end":204671,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::zip_eq_impl::zip_eq","value":"pub fn zip_eq<I, J>(I, J) -> ZipEq<I::IntoIter, J::IntoIter> where\nI: IntoIterator, J: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[{"value":"/ Iterate `i` and `j` in lock step.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204322,"byte_end":204359,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204360,"byte_end":204363,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the iterators are not of the same length.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204364,"byte_end":204423,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204424,"byte_end":204427,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.zip_eq(j)`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204428,"byte_end":204480,"line_start":17,"line_end":17,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204481,"byte_end":204484,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204485,"byte_end":204492,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use itertools::zip_eq;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204493,"byte_end":204519,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204520,"byte_end":204523,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let data = [1, 2, 3, 4, 5];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204524,"byte_end":204555,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/ for (a, b) in zip_eq(&data[..data.len() - 1], &data[1..]) {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204556,"byte_end":204619,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/     /* loop body */","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204620,"byte_end":204643,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204644,"byte_end":204649,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204650,"byte_end":204657,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2208},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs","byte_start":206096,"byte_end":206106,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"ZipLongest","qualname":"::zip_longest::ZipLongest","value":"ZipLongest {  }","parent":null,"children":[{"krate":0,"index":2211},{"krate":0,"index":2212}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"/ An iterator which iterates two other iterators simultaneously","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs","byte_start":205790,"byte_end":205855,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs","byte_start":205856,"byte_end":205859,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs","byte_start":205860,"byte_end":205889,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs","byte_start":205890,"byte_end":205893,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See [`.zip_longest()`](../trait.Itertools.html#method.zip_longest) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs","byte_start":205894,"byte_end":205986,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs","byte_start":206011,"byte_end":206084,"line_start":16,"line_end":16,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2221},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208130,"byte_end":208133,"line_start":6,"line_end":6,"column_start":12,"column_end":15},"name":"Zip","qualname":"::ziptuple::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":2223}],"decl_id":null,"docs":" See [`multizip`](../fn.multizip.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`multizip`](../fn.multizip.html) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":207957,"byte_end":208020,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208045,"byte_end":208118,"line_start":5,"line_end":5,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1265},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":209297,"byte_end":209305,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"multizip","qualname":"::ziptuple::multizip","value":"pub fn multizip<T, U>(U) -> Zip<T> where Zip<T>: From<U>, Zip<T>: Iterator","parent":null,"children":[],"decl_id":null,"docs":" An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.","sig":null,"attributes":[{"value":"/ An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208152,"byte_end":208244,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208245,"byte_end":208248,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The iterator `Zip<(I, J, ..., M)>` is formed from a tuple of iterators (or values that","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208249,"byte_end":208339,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/ implement `IntoIterator`) and yields elements","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208340,"byte_end":208389,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ until any of the subiterators yields `None`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208390,"byte_end":208438,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208439,"byte_end":208442,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The iterator element type is a tuple like like `(A, B, ..., E)` where `A` to `E` are the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208443,"byte_end":208535,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ element types of the subiterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208536,"byte_end":208573,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208574,"byte_end":208577,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ **Note:** The result of this macro is a value of a named type (`Zip<(I, J,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208578,"byte_end":208656,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ ..)>` of each component iterator `I, J, ...`) if each component iterator is","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208657,"byte_end":208736,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ nameable.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208737,"byte_end":208750,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208751,"byte_end":208754,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Prefer [`izip!()`] over `multizip` for the performance benefits of using the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208755,"byte_end":208835,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ standard library `.zip()`. Prefer `multizip` if a nameable type is needed.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208836,"byte_end":208914,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208915,"byte_end":208918,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`izip!()`]: macro.izip.html","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208919,"byte_end":208951,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208952,"byte_end":208955,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208956,"byte_end":208963,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use itertools::multizip;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208964,"byte_end":208992,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208993,"byte_end":208996,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // iterate over three sequences side-by-side","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":208997,"byte_end":209045,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/ let mut results = [0, 0, 0, 0];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":209046,"byte_end":209081,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/ let inputs = [3, 7, 9, 6];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":209082,"byte_end":209112,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":209113,"byte_end":209116,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ for (r, index, input) in multizip((&mut results, 0..10, &inputs)) {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":209117,"byte_end":209188,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/     *r = index * 10 + input;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":209189,"byte_end":209221,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":209222,"byte_end":209227,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":209228,"byte_end":209231,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(results, [0 + 3, 10 + 7, 29, 36]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":209232,"byte_end":209281,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs","byte_start":209282,"byte_end":209289,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":1271},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9397,"byte_end":9406,"line_start":331,"line_end":331,"column_start":11,"column_end":20},"name":"Itertools","qualname":"::Itertools","value":"Itertools: Iterator","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1284},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1301},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1364},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1392},{"krate":0,"index":1398},{"krate":0,"index":1401},{"krate":0,"index":1404},{"krate":0,"index":1408}],"decl_id":null,"docs":" An [`Iterator`] blanket implementation that provides extra adaptors and\n methods.","sig":null,"attributes":[{"value":"/ An [`Iterator`] blanket implementation that provides extra adaptors and","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":8706,"byte_end":8781,"line_start":316,"line_end":316,"column_start":1,"column_end":76}},{"value":"/ methods.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":8782,"byte_end":8794,"line_start":317,"line_end":317,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":8795,"byte_end":8798,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ This trait defines a number of methods. They are divided into two groups:","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":8799,"byte_end":8876,"line_start":319,"line_end":319,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":8877,"byte_end":8880,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ * *Adaptors* take an iterator and parameter as input, and return","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":8881,"byte_end":8949,"line_start":321,"line_end":321,"column_start":1,"column_end":69}},{"value":"/ a new iterator value. These are listed first in the trait. An example","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":8950,"byte_end":9023,"line_start":322,"line_end":322,"column_start":1,"column_end":74}},{"value":"/ of an adaptor is [`.interleave()`](#method.interleave)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9024,"byte_end":9082,"line_start":323,"line_end":323,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9083,"byte_end":9086,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ * *Regular methods* are those that don't return iterators and instead","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9087,"byte_end":9160,"line_start":325,"line_end":325,"column_start":1,"column_end":74}},{"value":"/ return a regular value of some other kind.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9161,"byte_end":9207,"line_start":326,"line_end":326,"column_start":1,"column_end":47}},{"value":"/ [`.next_tuple()`](#method.next_tuple) is an example and the first regular","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9208,"byte_end":9285,"line_start":327,"line_end":327,"column_start":1,"column_end":78}},{"value":"/ method in the list.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9286,"byte_end":9309,"line_start":328,"line_end":328,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9310,"byte_end":9313,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ [`Iterator`]: https://doc.rust-lang.org/std/iter/trait.Iterator.html","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9314,"byte_end":9386,"line_start":330,"line_end":330,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9805,"byte_end":9815,"line_start":346,"line_end":346,"column_start":8,"column_end":18},"name":"interleave","qualname":"::Itertools::interleave","value":"pub fn interleave<J>(Self, J) -> Interleave<Self, J::IntoIter> where\nJ: IntoIterator<Item = Self::Item>, Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until both have run out.","sig":null,"attributes":[{"value":"/ Alternate elements from two iterators until both have run out.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9441,"byte_end":9507,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9512,"byte_end":9515,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9520,"byte_end":9562,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9567,"byte_end":9570,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9575,"byte_end":9604,"line_start":338,"line_end":338,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9609,"byte_end":9612,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9617,"byte_end":9624,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9629,"byte_end":9658,"line_start":341,"line_end":341,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9663,"byte_end":9666,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let it = (1..7).interleave(vec![-1, -2]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9671,"byte_end":9716,"line_start":343,"line_end":343,"column_start":5,"column_end":50}},{"value":"/ itertools::assert_equal(it, vec![1, -1, 2, -2, 3, 4, 5, 6]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9721,"byte_end":9785,"line_start":344,"line_end":344,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9790,"byte_end":9797,"line_start":345,"line_end":345,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10338,"byte_end":10357,"line_start":364,"line_end":364,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::Itertools::interleave_shortest","value":"pub fn interleave_shortest<J>(Self, J)\n-> InterleaveShortest<Self, J::IntoIter> where J: IntoIterator<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until at least one of them has run\n out.","sig":null,"attributes":[{"value":"/ Alternate elements from two iterators until at least one of them has run","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9993,"byte_end":10069,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ out.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10074,"byte_end":10082,"line_start":354,"line_end":354,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10087,"byte_end":10090,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10095,"byte_end":10137,"line_start":356,"line_end":356,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10142,"byte_end":10145,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10150,"byte_end":10157,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10162,"byte_end":10191,"line_start":359,"line_end":359,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10196,"byte_end":10199,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ let it = (1..7).interleave_shortest(vec![-1, -2]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10204,"byte_end":10258,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/ itertools::assert_equal(it, vec![1, -1, 2, -2, 3]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10263,"byte_end":10318,"line_start":362,"line_end":362,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10323,"byte_end":10330,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10936,"byte_end":10947,"line_start":383,"line_end":383,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::Itertools::intersperse","value":"pub fn intersperse(Self, Self::Item) -> Intersperse<Self> where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor to insert a particular value","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10574,"byte_end":10626,"line_start":371,"line_end":371,"column_start":5,"column_end":57}},{"value":"/ between each element of the adapted iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10631,"byte_end":10680,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10685,"byte_end":10688,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10693,"byte_end":10735,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10740,"byte_end":10743,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10748,"byte_end":10777,"line_start":376,"line_end":376,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10782,"byte_end":10785,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10790,"byte_end":10797,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10802,"byte_end":10831,"line_start":379,"line_end":379,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10836,"byte_end":10839,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal((0..3).intersperse(8), vec![0, 8, 1, 8, 2]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10844,"byte_end":10916,"line_start":381,"line_end":381,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":10921,"byte_end":10928,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12190,"byte_end":12201,"line_start":417,"line_end":417,"column_start":8,"column_end":19},"name":"zip_longest","qualname":"::Itertools::zip_longest","value":"pub fn zip_longest<J>(Self, J) -> ZipLongest<Self, J::IntoIter> where\nJ: IntoIterator, Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of two optional elements.","sig":null,"attributes":[{"value":"/ Create an iterator which iterates over both this and the specified","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11120,"byte_end":11190,"line_start":390,"line_end":390,"column_start":5,"column_end":75}},{"value":"/ iterator simultaneously, yielding pairs of two optional elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11195,"byte_end":11264,"line_start":391,"line_end":391,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11269,"byte_end":11272,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11277,"byte_end":11306,"line_start":393,"line_end":393,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11311,"byte_end":11314,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ As long as neither input iterator is exhausted yet, it yields two values","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11319,"byte_end":11395,"line_start":395,"line_end":395,"column_start":5,"column_end":81}},{"value":"/ via `EitherOrBoth::Both`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11400,"byte_end":11429,"line_start":396,"line_end":396,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11434,"byte_end":11437,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ When the parameter iterator is exhausted, it only yields a value from the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11442,"byte_end":11519,"line_start":398,"line_end":398,"column_start":5,"column_end":82}},{"value":"/ `self` iterator via `EitherOrBoth::Left`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11524,"byte_end":11569,"line_start":399,"line_end":399,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11574,"byte_end":11577,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ When the `self` iterator is exhausted, it only yields a value from the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11582,"byte_end":11656,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ parameter iterator via `EitherOrBoth::Right`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11661,"byte_end":11710,"line_start":402,"line_end":402,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11715,"byte_end":11718,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ When both iterators return `None`, all further invocations of `.next()`","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11723,"byte_end":11798,"line_start":404,"line_end":404,"column_start":5,"column_end":80}},{"value":"/ will return `None`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11803,"byte_end":11826,"line_start":405,"line_end":405,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11831,"byte_end":11834,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11839,"byte_end":11867,"line_start":407,"line_end":407,"column_start":5,"column_end":33}},{"value":"/ [`EitherOrBoth<Self::Item, J::Item>`](enum.EitherOrBoth.html).","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11872,"byte_end":11938,"line_start":408,"line_end":408,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11943,"byte_end":11946,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11951,"byte_end":11962,"line_start":410,"line_end":410,"column_start":5,"column_end":16}},{"value":"/ use itertools::EitherOrBoth::{Both, Right};","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":11967,"byte_end":12014,"line_start":411,"line_end":411,"column_start":5,"column_end":52}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12019,"byte_end":12048,"line_start":412,"line_end":412,"column_start":5,"column_end":34}},{"value":"/ let it = (0..1).zip_longest(1..3);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12053,"byte_end":12091,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/ itertools::assert_equal(it, vec![Both(0, 1), Right(2)]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12096,"byte_end":12156,"line_start":414,"line_end":414,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12161,"byte_end":12168,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12173,"byte_end":12182,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12639,"byte_end":12645,"line_start":430,"line_end":430,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::Itertools::zip_eq","value":"pub fn zip_eq<J>(Self, J) -> ZipEq<Self, J::IntoIter> where J: IntoIterator,\nSelf: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of elements.","sig":null,"attributes":[{"value":"/ Create an iterator which iterates over both this and the specified","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12386,"byte_end":12456,"line_start":424,"line_end":424,"column_start":5,"column_end":75}},{"value":"/ iterator simultaneously, yielding pairs of elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12461,"byte_end":12517,"line_start":425,"line_end":425,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12522,"byte_end":12525,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the iterators reach an end and they are not of equal","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12530,"byte_end":12600,"line_start":427,"line_end":427,"column_start":5,"column_end":75}},{"value":"/ lengths.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12605,"byte_end":12617,"line_start":428,"line_end":428,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12622,"byte_end":12631,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13561,"byte_end":13569,"line_start":460,"line_end":460,"column_start":8,"column_end":16},"name":"batching","qualname":"::Itertools::batching","value":"pub fn batching<B, F>(Self, F) -> Batching<Self, F> where F: FnMut(&mut Self)\n-> Option<B>, Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure receives a reference to the\n iterator and may pick off as many elements as it likes, to produce the\n next iterator element.","sig":null,"attributes":[{"value":"/ A “meta iterator adaptor”. Its closure receives a reference to the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12795,"byte_end":12869,"line_start":437,"line_end":437,"column_start":5,"column_end":75}},{"value":"/ iterator and may pick off as many elements as it likes, to produce the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12874,"byte_end":12948,"line_start":438,"line_end":438,"column_start":5,"column_end":79}},{"value":"/ next iterator element.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12953,"byte_end":12979,"line_start":439,"line_end":439,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12984,"byte_end":12987,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `B`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":12992,"byte_end":13025,"line_start":441,"line_end":441,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13030,"byte_end":13033,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13038,"byte_end":13045,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13050,"byte_end":13079,"line_start":444,"line_end":444,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13084,"byte_end":13087,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ // An adaptor that gathers elements in pairs","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13092,"byte_end":13140,"line_start":446,"line_end":446,"column_start":5,"column_end":53}},{"value":"/ let pit = (0..4).batching(|it| {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13145,"byte_end":13181,"line_start":447,"line_end":447,"column_start":5,"column_end":41}},{"value":"/            match it.next() {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13186,"byte_end":13218,"line_start":448,"line_end":448,"column_start":5,"column_end":37}},{"value":"/                None => None,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13223,"byte_end":13255,"line_start":449,"line_end":449,"column_start":5,"column_end":37}},{"value":"/                Some(x) => match it.next() {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13260,"byte_end":13307,"line_start":450,"line_end":450,"column_start":5,"column_end":52}},{"value":"/                    None => None,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13312,"byte_end":13348,"line_start":451,"line_end":451,"column_start":5,"column_end":41}},{"value":"/                    Some(y) => Some((x, y)),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13353,"byte_end":13400,"line_start":452,"line_end":452,"column_start":5,"column_end":52}},{"value":"/                }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13405,"byte_end":13425,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/            }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13430,"byte_end":13446,"line_start":454,"line_end":454,"column_start":5,"column_end":21}},{"value":"/        });","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13451,"byte_end":13465,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13470,"byte_end":13473,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(pit, vec![(0, 1), (2, 3)]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13478,"byte_end":13533,"line_start":457,"line_end":457,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13538,"byte_end":13545,"line_start":458,"line_end":458,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13550,"byte_end":13553,"line_start":459,"line_end":459,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15200,"byte_end":15208,"line_start":501,"line_end":501,"column_start":8,"column_end":16},"name":"group_by","qualname":"::Itertools::group_by","value":"pub fn group_by<K, F>(Self, F) -> GroupBy<K, Self, F> where Self: Sized,\nF: FnMut(&Self::Item) -> K, K: PartialEq","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an *iterable* that can group iterator elements.\n Consecutive elements that map to the same key (“runs”), are assigned\n to the same group.","sig":null,"attributes":[{"value":"/ Return an *iterable* that can group iterator elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13736,"byte_end":13794,"line_start":467,"line_end":467,"column_start":5,"column_end":63}},{"value":"/ Consecutive elements that map to the same key (“runs”), are assigned","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13799,"byte_end":13875,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ to the same group.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13880,"byte_end":13902,"line_start":469,"line_end":469,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13907,"byte_end":13910,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ `GroupBy` is the storage for the lazy grouping operation.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13915,"byte_end":13976,"line_start":471,"line_end":471,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13981,"byte_end":13984,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ If the groups are consumed in order, or if each group's iterator is","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":13989,"byte_end":14060,"line_start":473,"line_end":473,"column_start":5,"column_end":76}},{"value":"/ dropped without keeping it around, then `GroupBy` uses no","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14065,"byte_end":14126,"line_start":474,"line_end":474,"column_start":5,"column_end":66}},{"value":"/ allocations.  It needs allocations only if several group iterators","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14131,"byte_end":14201,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/ are alive at the same time.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14206,"byte_end":14237,"line_start":476,"line_end":476,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14242,"byte_end":14245,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This type implements `IntoIterator` (it is **not** an iterator","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14250,"byte_end":14316,"line_start":478,"line_end":478,"column_start":5,"column_end":71}},{"value":"/ itself), because the group iterators need to borrow from this","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14321,"byte_end":14386,"line_start":479,"line_end":479,"column_start":5,"column_end":70}},{"value":"/ value. It should be stored in a local variable or temporary and","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14391,"byte_end":14458,"line_start":480,"line_end":480,"column_start":5,"column_end":72}},{"value":"/ iterated.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14463,"byte_end":14476,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14481,"byte_end":14484,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(K, Group)`: the group's key and the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14489,"byte_end":14555,"line_start":483,"line_end":483,"column_start":5,"column_end":71}},{"value":"/ group iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14560,"byte_end":14579,"line_start":484,"line_end":484,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14584,"byte_end":14587,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14592,"byte_end":14599,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14604,"byte_end":14633,"line_start":487,"line_end":487,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14638,"byte_end":14641,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ // group data into runs of larger than zero or not.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14646,"byte_end":14701,"line_start":489,"line_end":489,"column_start":5,"column_end":60}},{"value":"/ let data = vec![1, 3, -2, -2, 1, 0, 1, 2];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14706,"byte_end":14752,"line_start":490,"line_end":490,"column_start":5,"column_end":51}},{"value":"/ // groups:     |---->|------>|--------->|","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14757,"byte_end":14802,"line_start":491,"line_end":491,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14807,"byte_end":14810,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ // Note: The `&` is significant here, `GroupBy` is iterable","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14815,"byte_end":14878,"line_start":493,"line_end":493,"column_start":5,"column_end":68}},{"value":"/ // only by reference. You can also call `.into_iter()` explicitly.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14883,"byte_end":14953,"line_start":494,"line_end":494,"column_start":5,"column_end":75}},{"value":"/ for (key, group) in &data.into_iter().group_by(|elt| *elt >= 0) {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":14958,"byte_end":15027,"line_start":495,"line_end":495,"column_start":5,"column_end":74}},{"value":"/     // Check that the sum of each group is +/- 4.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15032,"byte_end":15085,"line_start":496,"line_end":496,"column_start":5,"column_end":58}},{"value":"/     assert_eq!(4, group.sum::<i32>().abs());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15090,"byte_end":15138,"line_start":497,"line_end":497,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15143,"byte_end":15148,"line_start":498,"line_end":498,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15153,"byte_end":15160,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15165,"byte_end":15192,"line_start":500,"line_end":500,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16487,"byte_end":16493,"line_start":537,"line_end":537,"column_start":8,"column_end":14},"name":"chunks","qualname":"::Itertools::chunks","value":"pub fn chunks(Self, usize) -> IntoChunks<Self> where Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an *iterable* that can chunk the iterator.","sig":null,"attributes":[{"value":"/ Return an *iterable* that can chunk the iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15402,"byte_end":15455,"line_start":509,"line_end":509,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15460,"byte_end":15463,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Yield subiterators (chunks) that each yield a fixed number elements,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15468,"byte_end":15540,"line_start":511,"line_end":511,"column_start":5,"column_end":77}},{"value":"/ determined by `size`. The last chunk will be shorter if there aren't","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15545,"byte_end":15617,"line_start":512,"line_end":512,"column_start":5,"column_end":77}},{"value":"/ enough elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15622,"byte_end":15642,"line_start":513,"line_end":513,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15647,"byte_end":15650,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ `IntoChunks` is based on `GroupBy`: it is iterable (implements","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15655,"byte_end":15721,"line_start":515,"line_end":515,"column_start":5,"column_end":71}},{"value":"/ `IntoIterator`, **not** `Iterator`), and it only buffers if several","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15726,"byte_end":15797,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/ chunk iterators are alive at the same time.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15802,"byte_end":15849,"line_start":517,"line_end":517,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15854,"byte_end":15857,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Chunk`, each chunk's iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15862,"byte_end":15922,"line_start":519,"line_end":519,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15927,"byte_end":15930,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `size` is 0.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15935,"byte_end":15965,"line_start":521,"line_end":521,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15970,"byte_end":15973,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15978,"byte_end":15985,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":15990,"byte_end":16019,"line_start":524,"line_end":524,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16024,"byte_end":16027,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1, 1, 2, -2, 6, 0, 3, 1];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16032,"byte_end":16077,"line_start":526,"line_end":526,"column_start":5,"column_end":50}},{"value":"/ //chunk size=3 |------->|-------->|--->|","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16082,"byte_end":16126,"line_start":527,"line_end":527,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16131,"byte_end":16134,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ // Note: The `&` is significant here, `IntoChunks` is iterable","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16139,"byte_end":16205,"line_start":529,"line_end":529,"column_start":5,"column_end":71}},{"value":"/ // only by reference. You can also call `.into_iter()` explicitly.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16210,"byte_end":16280,"line_start":530,"line_end":530,"column_start":5,"column_end":75}},{"value":"/ for chunk in &data.into_iter().chunks(3) {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16285,"byte_end":16331,"line_start":531,"line_end":531,"column_start":5,"column_end":51}},{"value":"/     // Check that the sum of each chunk is 4.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16336,"byte_end":16385,"line_start":532,"line_end":532,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(4, chunk.sum());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16390,"byte_end":16425,"line_start":533,"line_end":533,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16430,"byte_end":16435,"line_start":534,"line_end":534,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16440,"byte_end":16447,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16452,"byte_end":16479,"line_start":536,"line_end":536,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17849,"byte_end":17862,"line_start":575,"line_end":575,"column_start":8,"column_end":21},"name":"tuple_windows","qualname":"::Itertools::tuple_windows","value":"pub fn tuple_windows<T>(Self) -> TupleWindows<Self, T> where Self: Sized +\nIterator<Item = T::Item>, T: tuple_impl::TupleCollect, T::Item: Clone","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator over all contiguous windows producing tuples of\n a specific size (up to 4).","sig":null,"attributes":[{"value":"/ Return an iterator over all contiguous windows producing tuples of","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16649,"byte_end":16719,"line_start":544,"line_end":544,"column_start":5,"column_end":75}},{"value":"/ a specific size (up to 4).","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16724,"byte_end":16754,"line_start":545,"line_end":545,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16759,"byte_end":16762,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ `tuple_windows` clones the iterator elements so that they can be","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16767,"byte_end":16835,"line_start":547,"line_end":547,"column_start":5,"column_end":73}},{"value":"/ part of successive windows, this makes it most suited for iterators","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16840,"byte_end":16911,"line_start":548,"line_end":548,"column_start":5,"column_end":76}},{"value":"/ of references and other values that are cheap to copy.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16916,"byte_end":16974,"line_start":549,"line_end":549,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16979,"byte_end":16982,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16987,"byte_end":16994,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":16999,"byte_end":17028,"line_start":552,"line_end":552,"column_start":5,"column_end":34}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17033,"byte_end":17060,"line_start":553,"line_end":553,"column_start":5,"column_end":32}},{"value":"/ for (a, b) in (1..5).tuple_windows() {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17065,"byte_end":17107,"line_start":554,"line_end":554,"column_start":5,"column_end":47}},{"value":"/     v.push((a, b));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17112,"byte_end":17135,"line_start":555,"line_end":555,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17140,"byte_end":17145,"line_start":556,"line_end":556,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(v, vec![(1, 2), (2, 3), (3, 4)]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17150,"byte_end":17198,"line_start":557,"line_end":557,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17203,"byte_end":17206,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ let mut it = (1..5).tuple_windows();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17211,"byte_end":17251,"line_start":559,"line_end":559,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Some((1, 2, 3)), it.next());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17256,"byte_end":17299,"line_start":560,"line_end":560,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((2, 3, 4)), it.next());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17304,"byte_end":17347,"line_start":561,"line_end":561,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(None, it.next());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17352,"byte_end":17384,"line_start":562,"line_end":562,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17389,"byte_end":17392,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // this requires a type hint","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17397,"byte_end":17429,"line_start":564,"line_end":564,"column_start":5,"column_end":37}},{"value":"/ let it = (1..5).tuple_windows::<(_, _, _)>();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17434,"byte_end":17483,"line_start":565,"line_end":565,"column_start":5,"column_end":54}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (2, 3, 4)]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17488,"byte_end":17548,"line_start":566,"line_end":566,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17553,"byte_end":17556,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ // you can also specify the complete type","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17561,"byte_end":17606,"line_start":568,"line_end":568,"column_start":5,"column_end":50}},{"value":"/ use itertools::TupleWindows;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17611,"byte_end":17643,"line_start":569,"line_end":569,"column_start":5,"column_end":37}},{"value":"/ use std::ops::Range;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17648,"byte_end":17672,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17677,"byte_end":17680,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ let it: TupleWindows<Range<u32>, (u32, u32, u32)> = (1..5).tuple_windows();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17685,"byte_end":17764,"line_start":572,"line_end":572,"column_start":5,"column_end":84}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (2, 3, 4)]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17769,"byte_end":17829,"line_start":573,"line_end":573,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":17834,"byte_end":17841,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19171,"byte_end":19177,"line_start":614,"line_end":614,"column_start":8,"column_end":14},"name":"tuples","qualname":"::Itertools::tuples","value":"pub fn tuples<T>(Self) -> Tuples<Self, T> where Self: Sized + Iterator<Item =\nT::Item>, T: tuple_impl::TupleCollect","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator that groups the items in tuples of a specific size\n (up to 4).","sig":null,"attributes":[{"value":"/ Return an iterator that groups the items in tuples of a specific size","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18080,"byte_end":18153,"line_start":583,"line_end":583,"column_start":5,"column_end":78}},{"value":"/ (up to 4).","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18158,"byte_end":18172,"line_start":584,"line_end":584,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18177,"byte_end":18180,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ See also the method [`.next_tuple()`](#method.next_tuple).","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18185,"byte_end":18247,"line_start":586,"line_end":586,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18252,"byte_end":18255,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18260,"byte_end":18267,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18272,"byte_end":18301,"line_start":589,"line_end":589,"column_start":5,"column_end":34}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18306,"byte_end":18333,"line_start":590,"line_end":590,"column_start":5,"column_end":32}},{"value":"/ for (a, b) in (1..5).tuples() {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18338,"byte_end":18373,"line_start":591,"line_end":591,"column_start":5,"column_end":40}},{"value":"/     v.push((a, b));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18378,"byte_end":18401,"line_start":592,"line_end":592,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18406,"byte_end":18411,"line_start":593,"line_end":593,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(v, vec![(1, 2), (3, 4)]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18416,"byte_end":18456,"line_start":594,"line_end":594,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18461,"byte_end":18464,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let mut it = (1..7).tuples();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18469,"byte_end":18502,"line_start":596,"line_end":596,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Some((1, 2, 3)), it.next());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18507,"byte_end":18550,"line_start":597,"line_end":597,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((4, 5, 6)), it.next());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18555,"byte_end":18598,"line_start":598,"line_end":598,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(None, it.next());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18603,"byte_end":18635,"line_start":599,"line_end":599,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18640,"byte_end":18643,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ // this requires a type hint","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18648,"byte_end":18680,"line_start":601,"line_end":601,"column_start":5,"column_end":37}},{"value":"/ let it = (1..7).tuples::<(_, _, _)>();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18685,"byte_end":18727,"line_start":602,"line_end":602,"column_start":5,"column_end":47}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (4, 5, 6)]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18732,"byte_end":18792,"line_start":603,"line_end":603,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18797,"byte_end":18800,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ // you can also specify the complete type","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18805,"byte_end":18850,"line_start":605,"line_end":605,"column_start":5,"column_end":50}},{"value":"/ use itertools::Tuples;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18855,"byte_end":18881,"line_start":606,"line_end":606,"column_start":5,"column_end":31}},{"value":"/ use std::ops::Range;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18886,"byte_end":18910,"line_start":607,"line_end":607,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18915,"byte_end":18918,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ let it: Tuples<Range<u32>, (u32, u32, u32)> = (1..7).tuples();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18923,"byte_end":18989,"line_start":609,"line_end":609,"column_start":5,"column_end":71}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (4, 5, 6)]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":18994,"byte_end":19054,"line_start":610,"line_end":610,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19059,"byte_end":19066,"line_start":611,"line_end":611,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19071,"byte_end":19074,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ See also [`Tuples::into_buffer`](structs/struct.Tuples.html#method.into_buffer).","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19079,"byte_end":19163,"line_start":613,"line_end":613,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19986,"byte_end":19989,"line_start":639,"line_end":639,"column_start":8,"column_end":11},"name":"tee","qualname":"::Itertools::tee","value":"pub fn tee(Self) -> (Tee<Self>, Tee<Self>) where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Split into an iterator pair that both yield all elements from\n the original iterator.","sig":null,"attributes":[{"value":"/ Split into an iterator pair that both yield all elements from","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19352,"byte_end":19417,"line_start":621,"line_end":621,"column_start":5,"column_end":70}},{"value":"/ the original iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19422,"byte_end":19448,"line_start":622,"line_end":622,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19453,"byte_end":19456,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ **Note:** If the iterator is clonable, prefer using that instead","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19461,"byte_end":19529,"line_start":624,"line_end":624,"column_start":5,"column_end":73}},{"value":"/ of using this method. It is likely to be more efficient.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19534,"byte_end":19594,"line_start":625,"line_end":625,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19599,"byte_end":19602,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19607,"byte_end":19649,"line_start":627,"line_end":627,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19654,"byte_end":19657,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19662,"byte_end":19669,"line_start":629,"line_end":629,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19674,"byte_end":19703,"line_start":630,"line_end":630,"column_start":5,"column_end":34}},{"value":"/ let xs = vec![0, 1, 2, 3];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19708,"byte_end":19738,"line_start":631,"line_end":631,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19743,"byte_end":19746,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ let (mut t1, t2) = xs.into_iter().tee();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19751,"byte_end":19795,"line_start":633,"line_end":633,"column_start":5,"column_end":49}},{"value":"/ itertools::assert_equal(t1.next(), Some(0));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19800,"byte_end":19848,"line_start":634,"line_end":634,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(t2, 0..4);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19853,"byte_end":19891,"line_start":635,"line_end":635,"column_start":5,"column_end":43}},{"value":"/ itertools::assert_equal(t1, 1..4);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19896,"byte_end":19934,"line_start":636,"line_end":636,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19939,"byte_end":19946,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":19951,"byte_end":19978,"line_start":638,"line_end":638,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20718,"byte_end":20722,"line_start":664,"line_end":664,"column_start":8,"column_end":12},"name":"step","qualname":"::Itertools::step","value":"pub fn step(Self, usize) -> Step<Self> where Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that steps `n` elements in the base iterator\n for each iteration.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that steps `n` elements in the base iterator","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20121,"byte_end":20196,"line_start":646,"line_end":646,"column_start":5,"column_end":80}},{"value":"/ for each iteration.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20201,"byte_end":20224,"line_start":647,"line_end":647,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20229,"byte_end":20232,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ The iterator steps by yielding the next element from the base iterator,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20237,"byte_end":20312,"line_start":649,"line_end":649,"column_start":5,"column_end":80}},{"value":"/ then skipping forward `n - 1` elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20317,"byte_end":20360,"line_start":650,"line_end":650,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20365,"byte_end":20368,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20373,"byte_end":20415,"line_start":652,"line_end":652,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20420,"byte_end":20423,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the step is 0.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20428,"byte_end":20460,"line_start":654,"line_end":654,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20465,"byte_end":20468,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20473,"byte_end":20480,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20485,"byte_end":20514,"line_start":657,"line_end":657,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20519,"byte_end":20522,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ let it = (0..8).step(3);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20527,"byte_end":20555,"line_start":659,"line_end":659,"column_start":5,"column_end":33}},{"value":"/ itertools::assert_equal(it, vec![0, 3, 6]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20560,"byte_end":20607,"line_start":660,"line_end":660,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20612,"byte_end":20619,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"deprecated(note = \"Use std .step_by() instead\", since = \"0.8\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20624,"byte_end":20685,"line_start":662,"line_end":662,"column_start":5,"column_end":66}},{"value":"allow(deprecated)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20690,"byte_end":20710,"line_start":663,"line_end":663,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21030,"byte_end":21038,"line_start":677,"line_end":677,"column_start":8,"column_end":16},"name":"map_into","qualname":"::Itertools::map_into","value":"pub fn map_into<R>(Self) -> MapInto<Self, R> where Self: Sized,\nSelf::Item: Into<R>","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Convert each item of the iterator using the `Into` trait.","sig":null,"attributes":[{"value":"/ Convert each item of the iterator using the `Into` trait.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20828,"byte_end":20889,"line_start":670,"line_end":670,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20894,"byte_end":20897,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20902,"byte_end":20913,"line_start":672,"line_end":672,"column_start":5,"column_end":16}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20918,"byte_end":20947,"line_start":673,"line_end":673,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20952,"byte_end":20955,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ (1i32..42i32).map_into::<f64>().collect_vec();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":20960,"byte_end":21010,"line_start":675,"line_end":675,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21015,"byte_end":21022,"line_start":676,"line_end":676,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21591,"byte_end":21602,"line_start":695,"line_end":695,"column_start":8,"column_end":19},"name":"map_results","qualname":"::Itertools::map_results","value":"pub fn map_results<F, T, U, E>(Self, F) -> MapResults<Self, F> where\nSelf: Iterator<Item = Result<T, E>> + Sized, F: FnMut(T) -> U","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that applies the provided closure\n to every `Result::Ok` value. `Result::Err` values are\n unchanged.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that applies the provided closure","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21180,"byte_end":21244,"line_start":684,"line_end":684,"column_start":5,"column_end":69}},{"value":"/ to every `Result::Ok` value. `Result::Err` values are","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21249,"byte_end":21306,"line_start":685,"line_end":685,"column_start":5,"column_end":62}},{"value":"/ unchanged.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21311,"byte_end":21325,"line_start":686,"line_end":686,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21330,"byte_end":21333,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21338,"byte_end":21345,"line_start":688,"line_end":688,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21350,"byte_end":21379,"line_start":689,"line_end":689,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21384,"byte_end":21387,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ let input = vec![Ok(41), Err(false), Ok(11)];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21392,"byte_end":21441,"line_start":691,"line_end":691,"column_start":5,"column_end":54}},{"value":"/ let it = input.into_iter().map_results(|i| i + 1);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21446,"byte_end":21500,"line_start":692,"line_end":692,"column_start":5,"column_end":59}},{"value":"/ itertools::assert_equal(it, vec![Ok(42), Err(false), Ok(12)]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21505,"byte_end":21571,"line_start":693,"line_end":693,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21576,"byte_end":21583,"line_start":694,"line_end":694,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22265,"byte_end":22270,"line_start":716,"line_end":716,"column_start":8,"column_end":13},"name":"merge","qualname":"::Itertools::merge","value":"pub fn merge<J>(Self, J) -> Merge<Self, J::IntoIter> where Self: Sized,\nSelf::Item: PartialOrd, J: IntoIterator<Item = Self::Item>","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in\n ascending order.  If both base iterators are sorted (ascending), the\n result is sorted.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that merges the two base iterators in","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21797,"byte_end":21865,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/ ascending order.  If both base iterators are sorted (ascending), the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21870,"byte_end":21942,"line_start":703,"line_end":703,"column_start":5,"column_end":77}},{"value":"/ result is sorted.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21947,"byte_end":21968,"line_start":704,"line_end":704,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21973,"byte_end":21976,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":21981,"byte_end":22023,"line_start":706,"line_end":706,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22028,"byte_end":22031,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22036,"byte_end":22043,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22048,"byte_end":22077,"line_start":709,"line_end":709,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22082,"byte_end":22085,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let a = (0..11).step(3);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22090,"byte_end":22118,"line_start":711,"line_end":711,"column_start":5,"column_end":33}},{"value":"/ let b = (0..11).step(5);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22123,"byte_end":22151,"line_start":712,"line_end":712,"column_start":5,"column_end":33}},{"value":"/ let it = a.merge(b);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22156,"byte_end":22180,"line_start":713,"line_end":713,"column_start":5,"column_end":29}},{"value":"/ itertools::assert_equal(it, vec![0, 0, 3, 5, 6, 9, 10]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22185,"byte_end":22245,"line_start":714,"line_end":714,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22250,"byte_end":22257,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23047,"byte_end":23055,"line_start":740,"line_end":740,"column_start":8,"column_end":16},"name":"merge_by","qualname":"::Itertools::merge_by","value":"pub fn merge_by<J, F>(Self, J, F) -> MergeBy<Self, J::IntoIter, F> where\nSelf: Sized, J: IntoIterator<Item = Self::Item>,\nF: FnMut(&Self::Item, &Self::Item) -> bool","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in order.\n This is much like `.merge()` but allows for a custom ordering.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that merges the two base iterators in order.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22476,"byte_end":22551,"line_start":724,"line_end":724,"column_start":5,"column_end":80}},{"value":"/ This is much like `.merge()` but allows for a custom ordering.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22556,"byte_end":22622,"line_start":725,"line_end":725,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22627,"byte_end":22630,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ This can be especially useful for sequences of tuples.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22635,"byte_end":22693,"line_start":727,"line_end":727,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22698,"byte_end":22701,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22706,"byte_end":22748,"line_start":729,"line_end":729,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22753,"byte_end":22756,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22761,"byte_end":22768,"line_start":731,"line_end":731,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22773,"byte_end":22802,"line_start":732,"line_end":732,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22807,"byte_end":22810,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ let a = (0..).zip(\"bc\".chars());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22815,"byte_end":22851,"line_start":734,"line_end":734,"column_start":5,"column_end":41}},{"value":"/ let b = (0..).zip(\"ad\".chars());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22856,"byte_end":22892,"line_start":735,"line_end":735,"column_start":5,"column_end":41}},{"value":"/ let it = a.merge_by(b, |x, y| x.1 <= y.1);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22897,"byte_end":22943,"line_start":736,"line_end":736,"column_start":5,"column_end":51}},{"value":"/ itertools::assert_equal(it, vec![(0, 'a'), (0, 'b'), (1, 'c'), (1, 'd')]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":22948,"byte_end":23026,"line_start":737,"line_end":737,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23031,"byte_end":23038,"line_start":738,"line_end":738,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24645,"byte_end":24658,"line_start":780,"line_end":780,"column_start":8,"column_end":21},"name":"merge_join_by","qualname":"::Itertools::merge_join_by","value":"pub fn merge_join_by<J, F>(Self, J, F) -> MergeJoinBy<Self, J::IntoIter, F>\nwhere J: IntoIterator, F: FnMut(&Self::Item, &J::Item) -> std::cmp::Ordering,\nSelf: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Create an iterator that merges items from both this and the specified\n iterator in ascending order.","sig":null,"attributes":[{"value":"/ Create an iterator that merges items from both this and the specified","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23341,"byte_end":23414,"line_start":748,"line_end":748,"column_start":5,"column_end":78}},{"value":"/ iterator in ascending order.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23419,"byte_end":23451,"line_start":749,"line_end":749,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23456,"byte_end":23459,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ It chooses whether to pair elements based on the `Ordering` returned by the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23464,"byte_end":23543,"line_start":751,"line_end":751,"column_start":5,"column_end":84}},{"value":"/ specified compare function. At any point, inspecting the tip of the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23548,"byte_end":23619,"line_start":752,"line_end":752,"column_start":5,"column_end":76}},{"value":"/ iterators `I` and `J` as items `i` of type `I::Item` and `j` of type","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23624,"byte_end":23696,"line_start":753,"line_end":753,"column_start":5,"column_end":77}},{"value":"/ `J::Item` respectively, the resulting iterator will:","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23701,"byte_end":23757,"line_start":754,"line_end":754,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23762,"byte_end":23765,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ - Emit `EitherOrBoth::Left(i)` when `i < j`,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23770,"byte_end":23818,"line_start":756,"line_end":756,"column_start":5,"column_end":53}},{"value":"/   and remove `i` from its source iterator","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23823,"byte_end":23868,"line_start":757,"line_end":757,"column_start":5,"column_end":50}},{"value":"/ - Emit `EitherOrBoth::Right(j)` when `i > j`,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23873,"byte_end":23922,"line_start":758,"line_end":758,"column_start":5,"column_end":54}},{"value":"/   and remove `j` from its source iterator","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23927,"byte_end":23972,"line_start":759,"line_end":759,"column_start":5,"column_end":50}},{"value":"/ - Emit `EitherOrBoth::Both(i, j)` when  `i == j`,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":23977,"byte_end":24030,"line_start":760,"line_end":760,"column_start":5,"column_end":58}},{"value":"/   and remove both `i` and `j` from their respective source iterators","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24035,"byte_end":24107,"line_start":761,"line_end":761,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24112,"byte_end":24115,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24120,"byte_end":24127,"line_start":763,"line_end":763,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24132,"byte_end":24161,"line_start":764,"line_end":764,"column_start":5,"column_end":34}},{"value":"/ use itertools::EitherOrBoth::{Left, Right, Both};","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24166,"byte_end":24219,"line_start":765,"line_end":765,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24224,"byte_end":24227,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ let ki = (0..10).step(3);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24232,"byte_end":24261,"line_start":767,"line_end":767,"column_start":5,"column_end":34}},{"value":"/ let ku = (0..10).step(5);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24266,"byte_end":24295,"line_start":768,"line_end":768,"column_start":5,"column_end":34}},{"value":"/ let ki_ku = ki.merge_join_by(ku, |i, j| i.cmp(j)).map(|either| {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24300,"byte_end":24368,"line_start":769,"line_end":769,"column_start":5,"column_end":73}},{"value":"/     match either {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24373,"byte_end":24395,"line_start":770,"line_end":770,"column_start":5,"column_end":27}},{"value":"/         Left(_) => \"Ki\",","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24400,"byte_end":24428,"line_start":771,"line_end":771,"column_start":5,"column_end":33}},{"value":"/         Right(_) => \"Ku\",","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24433,"byte_end":24462,"line_start":772,"line_end":772,"column_start":5,"column_end":34}},{"value":"/         Both(_, _) => \"KiKu\"","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24467,"byte_end":24499,"line_start":773,"line_end":773,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24504,"byte_end":24513,"line_start":774,"line_end":774,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24518,"byte_end":24525,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24530,"byte_end":24533,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(ki_ku, vec![\"KiKu\", \"Ki\", \"Ku\", \"Ki\", \"Ki\"]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24538,"byte_end":24611,"line_start":777,"line_end":777,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24616,"byte_end":24623,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24628,"byte_end":24637,"line_start":779,"line_end":779,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25492,"byte_end":25498,"line_start":806,"line_end":806,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::Itertools::kmerge","value":"pub fn kmerge(Self) -> KMerge<<Self::Item as IntoIterator>::IntoIter> where\nSelf: Sized, Self::Item: IntoIterator,\n<Self::Item as IntoIterator>::Item: PartialOrd","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that flattens an iterator of iterators by\n merging them in ascending order.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that flattens an iterator of iterators by","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24916,"byte_end":24988,"line_start":789,"line_end":789,"column_start":5,"column_end":77}},{"value":"/ merging them in ascending order.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":24993,"byte_end":25029,"line_start":790,"line_end":790,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25034,"byte_end":25037,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ If all base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25042,"byte_end":25113,"line_start":792,"line_end":792,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25118,"byte_end":25121,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25126,"byte_end":25168,"line_start":794,"line_end":794,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25173,"byte_end":25176,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25181,"byte_end":25188,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25193,"byte_end":25222,"line_start":797,"line_end":797,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25227,"byte_end":25230,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ let a = (0..6).step(3);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25235,"byte_end":25262,"line_start":799,"line_end":799,"column_start":5,"column_end":32}},{"value":"/ let b = (1..6).step(3);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25267,"byte_end":25294,"line_start":800,"line_end":800,"column_start":5,"column_end":32}},{"value":"/ let c = (2..6).step(3);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25299,"byte_end":25326,"line_start":801,"line_end":801,"column_start":5,"column_end":32}},{"value":"/ let it = vec![a, b, c].into_iter().kmerge();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25331,"byte_end":25379,"line_start":802,"line_end":802,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(it, vec![0, 1, 2, 3, 4, 5]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25384,"byte_end":25440,"line_start":803,"line_end":803,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25445,"byte_end":25452,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25457,"byte_end":25484,"line_start":805,"line_end":805,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26503,"byte_end":26512,"line_start":835,"line_end":835,"column_start":8,"column_end":17},"name":"kmerge_by","qualname":"::Itertools::kmerge_by","value":"pub fn kmerge_by<F>(Self, F)\n-> KMergeBy<<Self::Item as IntoIterator>::IntoIter, F> where Self: Sized,\nSelf::Item: IntoIterator,\nF: FnMut(&<Self::Item as IntoIterator>::Item,\n         &<Self::Item as IntoIterator>::Item) -> bool","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that flattens an iterator of iterators by\n merging them according to the given closure.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that flattens an iterator of iterators by","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25722,"byte_end":25794,"line_start":814,"line_end":814,"column_start":5,"column_end":77}},{"value":"/ merging them according to the given closure.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25799,"byte_end":25847,"line_start":815,"line_end":815,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25852,"byte_end":25855,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ The closure `first` is called with two elements *a*, *b* and should","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25860,"byte_end":25931,"line_start":817,"line_end":817,"column_start":5,"column_end":76}},{"value":"/ return `true` if *a* is ordered before *b*.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25936,"byte_end":25983,"line_start":818,"line_end":818,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25988,"byte_end":25991,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ If all base iterators are sorted according to `first`, the result is","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":25996,"byte_end":26068,"line_start":820,"line_end":820,"column_start":5,"column_end":77}},{"value":"/ sorted.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26073,"byte_end":26084,"line_start":821,"line_end":821,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26089,"byte_end":26092,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26097,"byte_end":26139,"line_start":823,"line_end":823,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26144,"byte_end":26147,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26152,"byte_end":26159,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26164,"byte_end":26193,"line_start":826,"line_end":826,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26198,"byte_end":26201,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ let a = vec![-1f64, 2., 3., -5., 6., -7.];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26206,"byte_end":26252,"line_start":828,"line_end":828,"column_start":5,"column_end":51}},{"value":"/ let b = vec![0., 2., -4.];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26257,"byte_end":26287,"line_start":829,"line_end":829,"column_start":5,"column_end":35}},{"value":"/ let mut it = vec![a, b].into_iter().kmerge_by(|a, b| a.abs() < b.abs());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26292,"byte_end":26368,"line_start":830,"line_end":830,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(it.next(), Some(0.));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26373,"byte_end":26409,"line_start":831,"line_end":831,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(it.last(), Some(-7.));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26414,"byte_end":26451,"line_start":832,"line_end":832,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26456,"byte_end":26463,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26468,"byte_end":26495,"line_start":834,"line_end":834,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27264,"byte_end":27281,"line_start":856,"line_end":856,"column_start":8,"column_end":25},"name":"cartesian_product","qualname":"::Itertools::cartesian_product","value":"pub fn cartesian_product<J>(Self, J) -> Product<Self, J::IntoIter> where\nSelf: Sized, Self::Item: Clone, J: IntoIterator, J::IntoIter: Clone","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `self` and `J`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26838,"byte_end":26912,"line_start":845,"line_end":845,"column_start":5,"column_end":79}},{"value":"/ the element sets of two iterators `self` and `J`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26917,"byte_end":26970,"line_start":846,"line_end":846,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26975,"byte_end":26978,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(Self::Item, J::Item)`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":26983,"byte_end":27036,"line_start":848,"line_end":848,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27041,"byte_end":27044,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27049,"byte_end":27056,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27061,"byte_end":27090,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27095,"byte_end":27098,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ let it = (0..2).cartesian_product(\"αβ\".chars());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27103,"byte_end":27157,"line_start":853,"line_end":853,"column_start":5,"column_end":57}},{"value":"/ itertools::assert_equal(it, vec![(0, 'α'), (0, 'β'), (1, 'α'), (1, 'β')]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27162,"byte_end":27244,"line_start":854,"line_end":854,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27249,"byte_end":27256,"line_start":855,"line_end":855,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28736,"byte_end":28759,"line_start":891,"line_end":891,"column_start":8,"column_end":31},"name":"multi_cartesian_product","qualname":"::Itertools::multi_cartesian_product","value":"pub fn multi_cartesian_product(Self)\n-> MultiProduct<<Self::Item as IntoIterator>::IntoIter> where Self: Iterator +\nSized, Self::Item: IntoIterator,\n<Self::Item as IntoIterator>::IntoIter: Clone,\n<Self::Item as IntoIterator>::Item: Clone","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the cartesian product of\n all subiterators returned by meta-iterator `self`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27533,"byte_end":27607,"line_start":865,"line_end":865,"column_start":5,"column_end":79}},{"value":"/ all subiterators returned by meta-iterator `self`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27612,"byte_end":27666,"line_start":866,"line_end":866,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27671,"byte_end":27674,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ All provided iterators must yield the same `Item` type. To generate","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27679,"byte_end":27750,"line_start":868,"line_end":868,"column_start":5,"column_end":76}},{"value":"/ the product of iterators yielding multiple types, use the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27755,"byte_end":27816,"line_start":869,"line_end":869,"column_start":5,"column_end":66}},{"value":"/ [`iproduct`](macro.iproduct.html) macro instead.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27821,"byte_end":27873,"line_start":870,"line_end":870,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27878,"byte_end":27881,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27886,"byte_end":27889,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is `Vec<T>`, where `T` is the iterator element","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27894,"byte_end":27970,"line_start":873,"line_end":873,"column_start":5,"column_end":81}},{"value":"/ of the subiterators.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":27975,"byte_end":27999,"line_start":874,"line_end":874,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28004,"byte_end":28007,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28012,"byte_end":28019,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28024,"byte_end":28053,"line_start":877,"line_end":877,"column_start":5,"column_end":34}},{"value":"/ let mut multi_prod = (0..3).map(|i| (i * 2)..(i * 2 + 2))","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28058,"byte_end":28119,"line_start":878,"line_end":878,"column_start":5,"column_end":66}},{"value":"/     .multi_cartesian_product();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28124,"byte_end":28159,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 2, 4]));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28164,"byte_end":28219,"line_start":880,"line_end":880,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 2, 5]));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28224,"byte_end":28279,"line_start":881,"line_end":881,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 3, 4]));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28284,"byte_end":28339,"line_start":882,"line_end":882,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 3, 5]));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28344,"byte_end":28399,"line_start":883,"line_end":883,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 2, 4]));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28404,"byte_end":28459,"line_start":884,"line_end":884,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 2, 5]));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28464,"byte_end":28519,"line_start":885,"line_end":885,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 3, 4]));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28524,"byte_end":28579,"line_start":886,"line_end":886,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 3, 5]));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28584,"byte_end":28639,"line_start":887,"line_end":887,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), None);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28644,"byte_end":28684,"line_start":888,"line_end":888,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28689,"byte_end":28696,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":28701,"byte_end":28728,"line_start":890,"line_end":890,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30252,"byte_end":30260,"line_start":928,"line_end":928,"column_start":8,"column_end":16},"name":"coalesce","qualname":"::Itertools::coalesce","value":"pub fn coalesce<F>(Self, F) -> Coalesce<Self, F> where Self: Sized,\nF: FnMut(Self::Item, Self::Item) ->\nResult<Self::Item, (Self::Item, Self::Item)>","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that uses the passed-in closure to\n optionally merge together consecutive elements.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that uses the passed-in closure to","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29082,"byte_end":29147,"line_start":900,"line_end":900,"column_start":5,"column_end":70}},{"value":"/ optionally merge together consecutive elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29152,"byte_end":29203,"line_start":901,"line_end":901,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29208,"byte_end":29211,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is passed two elements, `previous` and `current` and may","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29216,"byte_end":29292,"line_start":903,"line_end":903,"column_start":5,"column_end":81}},{"value":"/ return either (1) `Ok(combined)` to merge the two values or","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29297,"byte_end":29360,"line_start":904,"line_end":904,"column_start":5,"column_end":68}},{"value":"/ (2) `Err((previous', current'))` to indicate they can't be merged.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29365,"byte_end":29435,"line_start":905,"line_end":905,"column_start":5,"column_end":75}},{"value":"/ In (2), the value `previous'` is emitted by the iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29440,"byte_end":29501,"line_start":906,"line_end":906,"column_start":5,"column_end":66}},{"value":"/ Either (1) `combined` or (2) `current'` becomes the previous value","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29506,"byte_end":29576,"line_start":907,"line_end":907,"column_start":5,"column_end":75}},{"value":"/ when coalesce continues with the next pair of elements to merge. The","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29581,"byte_end":29653,"line_start":908,"line_end":908,"column_start":5,"column_end":77}},{"value":"/ value that remains at the end is also emitted by the iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29658,"byte_end":29724,"line_start":909,"line_end":909,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29729,"byte_end":29732,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29737,"byte_end":29779,"line_start":911,"line_end":911,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29784,"byte_end":29787,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29792,"byte_end":29821,"line_start":913,"line_end":913,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29826,"byte_end":29829,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29834,"byte_end":29841,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29846,"byte_end":29875,"line_start":916,"line_end":916,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29880,"byte_end":29883,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ // sum same-sign runs together","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29888,"byte_end":29922,"line_start":918,"line_end":918,"column_start":5,"column_end":39}},{"value":"/ let data = vec![-1., -2., -3., 3., 1., 0., -1.];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29927,"byte_end":29979,"line_start":919,"line_end":919,"column_start":5,"column_end":57}},{"value":"/ itertools::assert_equal(data.into_iter().coalesce(|x, y|","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":29984,"byte_end":30044,"line_start":920,"line_end":920,"column_start":5,"column_end":65}},{"value":"/         if (x >= 0.) == (y >= 0.) {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30049,"byte_end":30088,"line_start":921,"line_end":921,"column_start":5,"column_end":44}},{"value":"/             Ok(x + y)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30093,"byte_end":30118,"line_start":922,"line_end":922,"column_start":5,"column_end":30}},{"value":"/         } else {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30123,"byte_end":30143,"line_start":923,"line_end":923,"column_start":5,"column_end":25}},{"value":"/             Err((x, y))","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30148,"byte_end":30175,"line_start":924,"line_end":924,"column_start":5,"column_end":32}},{"value":"/         }),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30180,"byte_end":30195,"line_start":925,"line_end":925,"column_start":5,"column_end":20}},{"value":"/         vec![-6., 4., -1.]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30200,"byte_end":30232,"line_start":926,"line_end":926,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30237,"byte_end":30244,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30974,"byte_end":30979,"line_start":950,"line_end":950,"column_start":8,"column_end":13},"name":"dedup","qualname":"::Itertools::dedup","value":"pub fn dedup(Self) -> Dedup<Self> where Self: Sized, Self::Item: PartialEq","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Remove duplicates from sections of consecutive identical elements.\n If the iterator is sorted, all elements will be unique.","sig":null,"attributes":[{"value":"/ Remove duplicates from sections of consecutive identical elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30495,"byte_end":30565,"line_start":936,"line_end":936,"column_start":5,"column_end":75}},{"value":"/ If the iterator is sorted, all elements will be unique.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30570,"byte_end":30629,"line_start":937,"line_end":937,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30634,"byte_end":30637,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30642,"byte_end":30684,"line_start":939,"line_end":939,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30689,"byte_end":30692,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30697,"byte_end":30726,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30731,"byte_end":30734,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30739,"byte_end":30746,"line_start":943,"line_end":943,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30751,"byte_end":30780,"line_start":944,"line_end":944,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30785,"byte_end":30788,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1., 1., 2., 3., 3., 2., 2.];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30793,"byte_end":30841,"line_start":946,"line_end":946,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(data.into_iter().dedup(),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30846,"byte_end":30899,"line_start":947,"line_end":947,"column_start":5,"column_end":58}},{"value":"/                         vec![1., 2., 3., 2.]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30904,"byte_end":30954,"line_start":948,"line_end":948,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":30959,"byte_end":30966,"line_start":949,"line_end":949,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31670,"byte_end":31676,"line_start":972,"line_end":972,"column_start":8,"column_end":14},"name":"unique","qualname":"::Itertools::unique","value":"pub fn unique(Self) -> Unique<Self> where Self: Sized, Self::Item: Clone +\nEq + Hash","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters out elements that have\n already been produced once during the iteration. Duplicates\n are detected using hash and equality.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters out elements that have","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31112,"byte_end":31178,"line_start":957,"line_end":957,"column_start":5,"column_end":71}},{"value":"/ already been produced once during the iteration. Duplicates","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31183,"byte_end":31246,"line_start":958,"line_end":958,"column_start":5,"column_end":68}},{"value":"/ are detected using hash and equality.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31251,"byte_end":31292,"line_start":959,"line_end":959,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31297,"byte_end":31300,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ Clones of visited elements are stored in a hash set in the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31305,"byte_end":31367,"line_start":961,"line_end":961,"column_start":5,"column_end":67}},{"value":"/ iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31372,"byte_end":31385,"line_start":962,"line_end":962,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31390,"byte_end":31393,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31398,"byte_end":31405,"line_start":964,"line_end":964,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31410,"byte_end":31439,"line_start":965,"line_end":965,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31444,"byte_end":31447,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ let data = vec![10, 20, 30, 20, 40, 10, 50];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31452,"byte_end":31500,"line_start":967,"line_end":967,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(data.into_iter().unique(),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31505,"byte_end":31559,"line_start":968,"line_end":968,"column_start":5,"column_end":59}},{"value":"/                         vec![10, 20, 30, 40, 50]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31564,"byte_end":31618,"line_start":969,"line_end":969,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31623,"byte_end":31630,"line_start":970,"line_end":970,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31635,"byte_end":31662,"line_start":971,"line_end":971,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32433,"byte_end":32442,"line_start":994,"line_end":994,"column_start":8,"column_end":17},"name":"unique_by","qualname":"::Itertools::unique_by","value":"pub fn unique_by<V, F>(Self, F) -> UniqueBy<Self, V, F> where Self: Sized,\nV: Eq + Hash, F: FnMut(&Self::Item) -> V","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters out elements that have\n already been produced once during the iteration.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters out elements that have","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31821,"byte_end":31887,"line_start":979,"line_end":979,"column_start":5,"column_end":71}},{"value":"/ already been produced once during the iteration.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31892,"byte_end":31944,"line_start":980,"line_end":980,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31949,"byte_end":31952,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ Duplicates are detected by comparing the key they map to","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":31957,"byte_end":32017,"line_start":982,"line_end":982,"column_start":5,"column_end":65}},{"value":"/ with the keying function `f` by hash and equality.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32022,"byte_end":32076,"line_start":983,"line_end":983,"column_start":5,"column_end":59}},{"value":"/ The keys are stored in a hash set in the iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32081,"byte_end":32135,"line_start":984,"line_end":984,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32140,"byte_end":32143,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32148,"byte_end":32155,"line_start":986,"line_end":986,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32160,"byte_end":32189,"line_start":987,"line_end":987,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32194,"byte_end":32197,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ let data = vec![\"a\", \"bb\", \"aa\", \"c\", \"ccc\"];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32202,"byte_end":32251,"line_start":989,"line_end":989,"column_start":5,"column_end":54}},{"value":"/ itertools::assert_equal(data.into_iter().unique_by(|s| s.len()),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32256,"byte_end":32324,"line_start":990,"line_end":990,"column_start":5,"column_end":73}},{"value":"/                         vec![\"a\", \"bb\", \"ccc\"]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32329,"byte_end":32381,"line_start":991,"line_end":991,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32386,"byte_end":32393,"line_start":992,"line_end":992,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32398,"byte_end":32425,"line_start":993,"line_end":993,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33179,"byte_end":33197,"line_start":1014,"line_end":1014,"column_start":8,"column_end":26},"name":"peeking_take_while","qualname":"::Itertools::peeking_take_while","value":"pub fn peeking_take_while<F>(&mut Self, F) -> PeekingTakeWhile<, Self, F>\nwhere Self: Sized + PeekingNext, F: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that borrows from this iterator and\n takes items while the closure `accept` returns `true`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that borrows from this iterator and","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32638,"byte_end":32704,"line_start":1002,"line_end":1002,"column_start":5,"column_end":71}},{"value":"/ takes items while the closure `accept` returns `true`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32709,"byte_end":32767,"line_start":1003,"line_end":1003,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32772,"byte_end":32775,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ This adaptor can only be used on iterators that implement `PeekingNext`","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32780,"byte_end":32855,"line_start":1005,"line_end":1005,"column_start":5,"column_end":80}},{"value":"/ like `.peekable()`, `put_back` and a few other collection iterators.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32860,"byte_end":32932,"line_start":1006,"line_end":1006,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32937,"byte_end":32940,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ The last and rejected element (first `false`) is still available when","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":32945,"byte_end":33018,"line_start":1008,"line_end":1008,"column_start":5,"column_end":78}},{"value":"/ `peeking_take_while` is done.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33023,"byte_end":33056,"line_start":1009,"line_end":1009,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33061,"byte_end":33064,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33069,"byte_end":33072,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ See also [`.take_while_ref()`](#method.take_while_ref)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33077,"byte_end":33135,"line_start":1012,"line_end":1012,"column_start":5,"column_end":63}},{"value":"/ which is a similar adaptor.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33140,"byte_end":33171,"line_start":1013,"line_end":1013,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34143,"byte_end":34157,"line_start":1039,"line_end":1039,"column_start":8,"column_end":22},"name":"take_while_ref","qualname":"::Itertools::take_while_ref","value":"pub fn take_while_ref<F>(&mut Self, F) -> TakeWhileRef<, Self, F> where\nSelf: Clone, F: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate `accept` returns `true`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that borrows from a `Clone`-able iterator","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33416,"byte_end":33488,"line_start":1021,"line_end":1021,"column_start":5,"column_end":77}},{"value":"/ to only pick off elements while the predicate `accept` returns `true`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33493,"byte_end":33567,"line_start":1022,"line_end":1022,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33572,"byte_end":33575,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ It uses the `Clone` trait to restore the original iterator so that the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33580,"byte_end":33654,"line_start":1024,"line_end":1024,"column_start":5,"column_end":79}},{"value":"/ last and rejected element (first `false`) is still available when","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33659,"byte_end":33728,"line_start":1025,"line_end":1025,"column_start":5,"column_end":74}},{"value":"/ `take_while_ref` is done.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33733,"byte_end":33762,"line_start":1026,"line_end":1026,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33767,"byte_end":33770,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33775,"byte_end":33782,"line_start":1028,"line_end":1028,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33787,"byte_end":33816,"line_start":1029,"line_end":1029,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33821,"byte_end":33824,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ let mut hexadecimals = \"0123456789abcdef\".chars();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33829,"byte_end":33883,"line_start":1031,"line_end":1031,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33888,"byte_end":33891,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ let decimals = hexadecimals.take_while_ref(|c| c.is_numeric())","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33896,"byte_end":33962,"line_start":1033,"line_end":1033,"column_start":5,"column_end":71}},{"value":"/                            .collect::<String>();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":33967,"byte_end":34019,"line_start":1034,"line_end":1034,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(decimals, \"0123456789\");","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34024,"byte_end":34063,"line_start":1035,"line_end":1035,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(hexadecimals.next(), Some('a'));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34068,"byte_end":34115,"line_start":1036,"line_end":1036,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34120,"byte_end":34123,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34128,"byte_end":34135,"line_start":1038,"line_end":1038,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34823,"byte_end":34833,"line_start":1060,"line_end":1060,"column_start":8,"column_end":18},"name":"while_some","qualname":"::Itertools::while_some","value":"pub fn while_some<A>(Self) -> WhileSome<Self> where Self: Sized +\nIterator<Item = Option<A>>","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters `Option<A>` iterator elements","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34343,"byte_end":34416,"line_start":1046,"line_end":1046,"column_start":5,"column_end":78}},{"value":"/ and produces `A`. Stops on the first `None` encountered.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34421,"byte_end":34481,"line_start":1047,"line_end":1047,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34486,"byte_end":34489,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `A`, the unwrapped element.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34494,"byte_end":34550,"line_start":1049,"line_end":1049,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34555,"byte_end":34558,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34563,"byte_end":34570,"line_start":1051,"line_end":1051,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34575,"byte_end":34604,"line_start":1052,"line_end":1052,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34609,"byte_end":34612,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ // List all hexadecimal digits","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34617,"byte_end":34651,"line_start":1054,"line_end":1054,"column_start":5,"column_end":39}},{"value":"/ itertools::assert_equal(","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34656,"byte_end":34684,"line_start":1055,"line_end":1055,"column_start":5,"column_end":33}},{"value":"/     (0..).map(|i| std::char::from_digit(i, 16)).while_some(),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34689,"byte_end":34754,"line_start":1056,"line_end":1056,"column_start":5,"column_end":70}},{"value":"/     \"0123456789abcdef\".chars());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34759,"byte_end":34795,"line_start":1057,"line_end":1057,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34800,"byte_end":34803,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34808,"byte_end":34815,"line_start":1059,"line_end":1059,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36264,"byte_end":36282,"line_start":1099,"line_end":1099,"column_start":8,"column_end":26},"name":"tuple_combinations","qualname":"::Itertools::tuple_combinations","value":"pub fn tuple_combinations<T>(Self) -> TupleCombinations<Self, T> where\nSelf: Sized + Clone, Self::Item: Clone, T: adaptors::HasCombination<Self>","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the combinations of the\n elements from an iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the combinations of the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":34969,"byte_end":35042,"line_start":1066,"line_end":1066,"column_start":5,"column_end":78}},{"value":"/ elements from an iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35047,"byte_end":35077,"line_start":1067,"line_end":1067,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35082,"byte_end":35085,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ Iterator element can be any homogeneous tuple of type `Self::Item` with","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35090,"byte_end":35165,"line_start":1069,"line_end":1069,"column_start":5,"column_end":80}},{"value":"/ size up to 4.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35170,"byte_end":35187,"line_start":1070,"line_end":1070,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35192,"byte_end":35195,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35200,"byte_end":35207,"line_start":1072,"line_end":1072,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35212,"byte_end":35241,"line_start":1073,"line_end":1073,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35246,"byte_end":35249,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35254,"byte_end":35281,"line_start":1075,"line_end":1075,"column_start":5,"column_end":32}},{"value":"/ for (a, b) in (1..5).tuple_combinations() {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35286,"byte_end":35333,"line_start":1076,"line_end":1076,"column_start":5,"column_end":52}},{"value":"/     v.push((a, b));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35338,"byte_end":35361,"line_start":1077,"line_end":1077,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35366,"byte_end":35371,"line_start":1078,"line_end":1078,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(v, vec![(1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35376,"byte_end":35448,"line_start":1079,"line_end":1079,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35453,"byte_end":35456,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ let mut it = (1..5).tuple_combinations();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35461,"byte_end":35506,"line_start":1081,"line_end":1081,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some((1, 2, 3)), it.next());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35511,"byte_end":35554,"line_start":1082,"line_end":1082,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((1, 2, 4)), it.next());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35559,"byte_end":35602,"line_start":1083,"line_end":1083,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((1, 3, 4)), it.next());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35607,"byte_end":35650,"line_start":1084,"line_end":1084,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((2, 3, 4)), it.next());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35655,"byte_end":35698,"line_start":1085,"line_end":1085,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(None, it.next());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35703,"byte_end":35735,"line_start":1086,"line_end":1086,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35740,"byte_end":35743,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ // this requires a type hint","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35748,"byte_end":35780,"line_start":1088,"line_end":1088,"column_start":5,"column_end":37}},{"value":"/ let it = (1..5).tuple_combinations::<(_, _, _)>();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35785,"byte_end":35839,"line_start":1089,"line_end":1089,"column_start":5,"column_end":59}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35844,"byte_end":35926,"line_start":1090,"line_end":1090,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35931,"byte_end":35934,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ // you can also specify the complete type","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35939,"byte_end":35984,"line_start":1092,"line_end":1092,"column_start":5,"column_end":50}},{"value":"/ use itertools::TupleCombinations;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":35989,"byte_end":36026,"line_start":1093,"line_end":1093,"column_start":5,"column_end":42}},{"value":"/ use std::ops::Range;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36031,"byte_end":36055,"line_start":1094,"line_end":1094,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36060,"byte_end":36063,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ let it: TupleCombinations<Range<u32>, (u32, u32, u32)> = (1..5).tuple_combinations();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36068,"byte_end":36157,"line_start":1096,"line_end":1096,"column_start":5,"column_end":94}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36162,"byte_end":36244,"line_start":1097,"line_end":1097,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36249,"byte_end":36256,"line_start":1098,"line_end":1098,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37088,"byte_end":37100,"line_start":1125,"line_end":1125,"column_start":8,"column_end":20},"name":"combinations","qualname":"::Itertools::combinations","value":"pub fn combinations(Self, usize) -> Combinations<Self> where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the `n`-length combinations of\n the elements from an iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the `n`-length combinations of","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36499,"byte_end":36579,"line_start":1107,"line_end":1107,"column_start":5,"column_end":85}},{"value":"/ the elements from an iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36584,"byte_end":36618,"line_start":1108,"line_end":1108,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36623,"byte_end":36626,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Vec<Self::Item>`. The iterator produces a new Vec per iteration,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36631,"byte_end":36725,"line_start":1110,"line_end":1110,"column_start":5,"column_end":99}},{"value":"/ and clones the iterator elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36730,"byte_end":36767,"line_start":1111,"line_end":1111,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36772,"byte_end":36775,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36780,"byte_end":36787,"line_start":1113,"line_end":1113,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36792,"byte_end":36821,"line_start":1114,"line_end":1114,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36826,"byte_end":36829,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ let it = (1..5).combinations(3);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36834,"byte_end":36870,"line_start":1116,"line_end":1116,"column_start":5,"column_end":41}},{"value":"/ itertools::assert_equal(it, vec![","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36875,"byte_end":36912,"line_start":1117,"line_end":1117,"column_start":5,"column_end":42}},{"value":"/     vec![1, 2, 3],","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36917,"byte_end":36939,"line_start":1118,"line_end":1118,"column_start":5,"column_end":27}},{"value":"/     vec![1, 2, 4],","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36944,"byte_end":36966,"line_start":1119,"line_end":1119,"column_start":5,"column_end":27}},{"value":"/     vec![1, 3, 4],","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36971,"byte_end":36993,"line_start":1120,"line_end":1120,"column_start":5,"column_end":27}},{"value":"/     vec![2, 3, 4],","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":36998,"byte_end":37020,"line_start":1121,"line_end":1121,"column_start":5,"column_end":27}},{"value":"/     ]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37025,"byte_end":37036,"line_start":1122,"line_end":1122,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37041,"byte_end":37048,"line_start":1123,"line_end":1123,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37053,"byte_end":37080,"line_start":1124,"line_end":1124,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37930,"byte_end":37939,"line_start":1149,"line_end":1149,"column_start":8,"column_end":17},"name":"pad_using","qualname":"::Itertools::pad_using","value":"pub fn pad_using<F>(Self, usize, F) -> PadUsing<Self, F> where Self: Sized,\nF: FnMut(usize) -> Self::Item","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that pads the sequence to a minimum length of\n `min` by filling missing elements using a closure `f`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that pads the sequence to a minimum length of","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37259,"byte_end":37335,"line_start":1132,"line_end":1132,"column_start":5,"column_end":81}},{"value":"/ `min` by filling missing elements using a closure `f`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37340,"byte_end":37398,"line_start":1133,"line_end":1133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37403,"byte_end":37406,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37411,"byte_end":37453,"line_start":1135,"line_end":1135,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37458,"byte_end":37461,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37466,"byte_end":37473,"line_start":1137,"line_end":1137,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37478,"byte_end":37507,"line_start":1138,"line_end":1138,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37512,"byte_end":37515,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ let it = (0..5).pad_using(10, |i| 2*i);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37520,"byte_end":37563,"line_start":1140,"line_end":1140,"column_start":5,"column_end":48}},{"value":"/ itertools::assert_equal(it, vec![0, 1, 2, 3, 4, 10, 12, 14, 16, 18]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37568,"byte_end":37641,"line_start":1141,"line_end":1141,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37646,"byte_end":37649,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ let it = (0..10).pad_using(5, |i| 2*i);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37654,"byte_end":37697,"line_start":1143,"line_end":1143,"column_start":5,"column_end":48}},{"value":"/ itertools::assert_equal(it, vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37702,"byte_end":37770,"line_start":1144,"line_end":1144,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37775,"byte_end":37778,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ let it = (0..5).pad_using(10, |i| 2*i).rev();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37783,"byte_end":37832,"line_start":1146,"line_end":1146,"column_start":5,"column_end":54}},{"value":"/ itertools::assert_equal(it, vec![18, 16, 14, 12, 10, 4, 3, 2, 1, 0]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37837,"byte_end":37910,"line_start":1147,"line_end":1147,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":37915,"byte_end":37922,"line_start":1148,"line_end":1148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38864,"byte_end":38877,"line_start":1175,"line_end":1175,"column_start":8,"column_end":21},"name":"with_position","qualname":"::Itertools::with_position","value":"pub fn with_position(Self) -> WithPosition<Self> where Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that wraps each element in a `Position` to\n ease special-case handling of the first or last elements.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that wraps each element in a `Position` to","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38118,"byte_end":38191,"line_start":1156,"line_end":1156,"column_start":5,"column_end":78}},{"value":"/ ease special-case handling of the first or last elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38196,"byte_end":38257,"line_start":1157,"line_end":1157,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38262,"byte_end":38265,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38270,"byte_end":38298,"line_start":1159,"line_end":1159,"column_start":5,"column_end":33}},{"value":"/ [`Position<Self::Item>`](enum.Position.html)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38303,"byte_end":38351,"line_start":1160,"line_end":1160,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38356,"byte_end":38359,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38364,"byte_end":38371,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}},{"value":"/ use itertools::{Itertools, Position};","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38376,"byte_end":38417,"line_start":1163,"line_end":1163,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38422,"byte_end":38425,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ let it = (0..4).with_position();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38430,"byte_end":38466,"line_start":1165,"line_end":1165,"column_start":5,"column_end":41}},{"value":"/ itertools::assert_equal(it,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38471,"byte_end":38502,"line_start":1166,"line_end":1166,"column_start":5,"column_end":36}},{"value":"/                         vec![Position::First(0),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38507,"byte_end":38559,"line_start":1167,"line_end":1167,"column_start":5,"column_end":57}},{"value":"/                              Position::Middle(1),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38564,"byte_end":38617,"line_start":1168,"line_end":1168,"column_start":5,"column_end":58}},{"value":"/                              Position::Middle(2),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38622,"byte_end":38675,"line_start":1169,"line_end":1169,"column_start":5,"column_end":58}},{"value":"/                              Position::Last(3)]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38680,"byte_end":38733,"line_start":1170,"line_end":1170,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38738,"byte_end":38741,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ let it = (0..1).with_position();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38746,"byte_end":38782,"line_start":1172,"line_end":1172,"column_start":5,"column_end":41}},{"value":"/ itertools::assert_equal(it, vec![Position::Only(0)]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38787,"byte_end":38844,"line_start":1173,"line_end":1173,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38849,"byte_end":38856,"line_start":1174,"line_end":1174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39556,"byte_end":39565,"line_start":1194,"line_end":1194,"column_start":8,"column_end":17},"name":"positions","qualname":"::Itertools::positions","value":"pub fn positions<P>(Self, P) -> Positions<Self, P> where Self: Sized,\nP: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that yields the indices of all elements\n satisfying a predicate, counted from the start of the iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that yields the indices of all elements","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":38993,"byte_end":39063,"line_start":1181,"line_end":1181,"column_start":5,"column_end":75}},{"value":"/ satisfying a predicate, counted from the start of the iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39068,"byte_end":39135,"line_start":1182,"line_end":1182,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39140,"byte_end":39143,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `iter.enumerate().filter(|(_, v)| predicate(v)).map(|(i, _)| i)`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39148,"byte_end":39231,"line_start":1184,"line_end":1184,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39236,"byte_end":39239,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39244,"byte_end":39251,"line_start":1186,"line_end":1186,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39256,"byte_end":39285,"line_start":1187,"line_end":1187,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39290,"byte_end":39293,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1, 2, 3, 3, 4, 6, 7, 9];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39298,"byte_end":39342,"line_start":1189,"line_end":1189,"column_start":5,"column_end":49}},{"value":"/ itertools::assert_equal(data.iter().positions(|v| v % 2 == 0), vec![1, 4, 5]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39347,"byte_end":39429,"line_start":1190,"line_end":1190,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39434,"byte_end":39437,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(data.iter().positions(|v| v % 2 == 1).rev(), vec![7, 6, 3, 2, 0]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39442,"byte_end":39536,"line_start":1192,"line_end":1192,"column_start":5,"column_end":99}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39541,"byte_end":39548,"line_start":1193,"line_end":1193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40118,"byte_end":40124,"line_start":1211,"line_end":1211,"column_start":8,"column_end":14},"name":"update","qualname":"::Itertools::update","value":"pub fn update<F>(Self, F) -> Update<Self, F> where Self: Sized,\nF: FnMut(&mut Self::Item) -> ()","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that applies a mutating function\n to each element before yielding it.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that applies a mutating function","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39744,"byte_end":39807,"line_start":1201,"line_end":1201,"column_start":5,"column_end":68}},{"value":"/ to each element before yielding it.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39812,"byte_end":39851,"line_start":1202,"line_end":1202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39856,"byte_end":39859,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39864,"byte_end":39871,"line_start":1204,"line_end":1204,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39876,"byte_end":39905,"line_start":1205,"line_end":1205,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39910,"byte_end":39913,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ let input = vec![vec![1], vec![3, 2, 1]];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39918,"byte_end":39963,"line_start":1207,"line_end":1207,"column_start":5,"column_end":50}},{"value":"/ let it = input.into_iter().update(|mut v| v.push(0));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":39968,"byte_end":40025,"line_start":1208,"line_end":1208,"column_start":5,"column_end":62}},{"value":"/ itertools::assert_equal(it, vec![vec![1, 0], vec![3, 2, 1, 0]]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40030,"byte_end":40098,"line_start":1209,"line_end":1209,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40103,"byte_end":40110,"line_start":1210,"line_end":1210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40749,"byte_end":40759,"line_start":1232,"line_end":1232,"column_start":8,"column_end":18},"name":"next_tuple","qualname":"::Itertools::next_tuple","value":"pub fn next_tuple<T>(&mut Self) -> Option<T> where Self: Sized + Iterator<Item\n= T::Item>, T: tuple_impl::TupleCollect","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Advances the iterator and returns the next items grouped in a tuple of\n a specific size (up to 4).","sig":null,"attributes":[{"value":"/ Advances the iterator and returns the next items grouped in a tuple of","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40317,"byte_end":40391,"line_start":1219,"line_end":1219,"column_start":5,"column_end":79}},{"value":"/ a specific size (up to 4).","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40396,"byte_end":40426,"line_start":1220,"line_end":1220,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40431,"byte_end":40434,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ If there are enough elements to be grouped in a tuple, then the tuple is","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40439,"byte_end":40515,"line_start":1222,"line_end":1222,"column_start":5,"column_end":81}},{"value":"/ returned inside `Some`, otherwise `None` is returned.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40520,"byte_end":40577,"line_start":1223,"line_end":1223,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40582,"byte_end":40585,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40590,"byte_end":40597,"line_start":1225,"line_end":1225,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40602,"byte_end":40631,"line_start":1226,"line_end":1226,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40636,"byte_end":40639,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ let mut iter = 1..5;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40644,"byte_end":40668,"line_start":1228,"line_end":1228,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40673,"byte_end":40676,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some((1, 2)), iter.next_tuple());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40681,"byte_end":40729,"line_start":1230,"line_end":1230,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40734,"byte_end":40741,"line_start":1231,"line_end":1231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41501,"byte_end":41514,"line_start":1257,"line_end":1257,"column_start":8,"column_end":21},"name":"collect_tuple","qualname":"::Itertools::collect_tuple","value":"pub fn collect_tuple<T>(Self) -> Option<T> where Self: Sized + Iterator<Item =\nT::Item>, T: tuple_impl::TupleCollect","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Collects all items from the iterator into a tuple of a specific size\n (up to 4).","sig":null,"attributes":[{"value":"/ Collects all items from the iterator into a tuple of a specific size","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":40942,"byte_end":41014,"line_start":1239,"line_end":1239,"column_start":5,"column_end":77}},{"value":"/ (up to 4).","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41019,"byte_end":41033,"line_start":1240,"line_end":1240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41038,"byte_end":41041,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ If the number of elements inside the iterator is **exactly** equal to","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41046,"byte_end":41119,"line_start":1242,"line_end":1242,"column_start":5,"column_end":78}},{"value":"/ the tuple size, then the tuple is returned inside `Some`, otherwise","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41124,"byte_end":41195,"line_start":1243,"line_end":1243,"column_start":5,"column_end":76}},{"value":"/ `None` is returned.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41200,"byte_end":41223,"line_start":1244,"line_end":1244,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41228,"byte_end":41231,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41236,"byte_end":41243,"line_start":1246,"line_end":1246,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41248,"byte_end":41277,"line_start":1247,"line_end":1247,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41282,"byte_end":41285,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ let iter = 1..3;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41290,"byte_end":41310,"line_start":1249,"line_end":1249,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41315,"byte_end":41318,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ if let Some((x, y)) = iter.collect_tuple() {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41323,"byte_end":41371,"line_start":1251,"line_end":1251,"column_start":5,"column_end":53}},{"value":"/     assert_eq!((x, y), (1, 2))","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41376,"byte_end":41410,"line_start":1252,"line_end":1252,"column_start":5,"column_end":39}},{"value":"/ } else {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41415,"byte_end":41427,"line_start":1253,"line_end":1253,"column_start":5,"column_end":17}},{"value":"/     panic!(\"Expected two elements\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41432,"byte_end":41471,"line_start":1254,"line_end":1254,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41476,"byte_end":41481,"line_start":1255,"line_end":1255,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41486,"byte_end":41493,"line_start":1256,"line_end":1256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42195,"byte_end":42208,"line_start":1281,"line_end":1281,"column_start":8,"column_end":21},"name":"find_position","qualname":"::Itertools::find_position","value":"pub fn find_position<P>(&mut Self, P) -> Option<(usize, Self::Item)> where\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Find the position and value of the first element satisfying a predicate.","sig":null,"attributes":[{"value":"/ Find the position and value of the first element satisfying a predicate.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41847,"byte_end":41923,"line_start":1271,"line_end":1271,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41928,"byte_end":41931,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ The iterator is not advanced past the first element found.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":41936,"byte_end":41998,"line_start":1273,"line_end":1273,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42003,"byte_end":42006,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42011,"byte_end":42018,"line_start":1275,"line_end":1275,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42023,"byte_end":42052,"line_start":1276,"line_end":1276,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42057,"byte_end":42060,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ let text = \"Hα\";","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42065,"byte_end":42086,"line_start":1278,"line_end":1278,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(text.chars().find_position(|ch| ch.is_lowercase()), Some((1, 'α')));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42091,"byte_end":42175,"line_start":1279,"line_end":1279,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42180,"byte_end":42187,"line_start":1280,"line_end":1280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43057,"byte_end":43066,"line_start":1310,"line_end":1310,"column_start":8,"column_end":17},"name":"all_equal","qualname":"::Itertools::all_equal","value":"pub fn all_equal(&mut Self) -> bool where Self::Item: PartialEq","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Check whether all elements compare equal.","sig":null,"attributes":[{"value":"/ Check whether all elements compare equal.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42518,"byte_end":42563,"line_start":1294,"line_end":1294,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42568,"byte_end":42571,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ Empty iterators are considered to have equal elements:","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42576,"byte_end":42634,"line_start":1296,"line_end":1296,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42639,"byte_end":42642,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42647,"byte_end":42654,"line_start":1298,"line_end":1298,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42659,"byte_end":42688,"line_start":1299,"line_end":1299,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42693,"byte_end":42696,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1, 1, 1, 2, 2, 3, 3, 3, 4, 5, 5];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42701,"byte_end":42754,"line_start":1301,"line_end":1301,"column_start":5,"column_end":58}},{"value":"/ assert!(!data.iter().all_equal());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42759,"byte_end":42797,"line_start":1302,"line_end":1302,"column_start":5,"column_end":43}},{"value":"/ assert!(data[0..3].iter().all_equal());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42802,"byte_end":42845,"line_start":1303,"line_end":1303,"column_start":5,"column_end":48}},{"value":"/ assert!(data[3..5].iter().all_equal());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42850,"byte_end":42893,"line_start":1304,"line_end":1304,"column_start":5,"column_end":48}},{"value":"/ assert!(data[5..8].iter().all_equal());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42898,"byte_end":42941,"line_start":1305,"line_end":1305,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42946,"byte_end":42949,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ let data : Option<usize> = None;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42954,"byte_end":42990,"line_start":1307,"line_end":1307,"column_start":5,"column_end":41}},{"value":"/ assert!(data.into_iter().all_equal());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":42995,"byte_end":43037,"line_start":1308,"line_end":1308,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43042,"byte_end":43049,"line_start":1309,"line_end":1309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43746,"byte_end":43754,"line_start":1331,"line_end":1331,"column_start":8,"column_end":16},"name":"dropping","qualname":"::Itertools::dropping","value":"pub fn dropping(Self, usize) -> Self where Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Consume the first `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[{"value":"/ Consume the first `n` elements from the iterator eagerly,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43178,"byte_end":43239,"line_start":1316,"line_end":1316,"column_start":5,"column_end":66}},{"value":"/ and return the same iterator again.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43244,"byte_end":43283,"line_start":1317,"line_end":1317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43288,"byte_end":43291,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ It works similarly to *.skip(* `n` *)* except it is eager and","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43296,"byte_end":43361,"line_start":1319,"line_end":1319,"column_start":5,"column_end":70}},{"value":"/ preserves the iterator type.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43366,"byte_end":43398,"line_start":1320,"line_end":1320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43403,"byte_end":43406,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43411,"byte_end":43418,"line_start":1322,"line_end":1322,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43423,"byte_end":43452,"line_start":1323,"line_end":1323,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43457,"byte_end":43460,"line_start":1324,"line_end":1324,"column_start":5,"column_end":8}},{"value":"/ let mut iter = \"αβγ\".chars().dropping(2);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43465,"byte_end":43513,"line_start":1325,"line_end":1325,"column_start":5,"column_end":50}},{"value":"/ itertools::assert_equal(iter, \"γ\".chars());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43518,"byte_end":43566,"line_start":1326,"line_end":1326,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43571,"byte_end":43578,"line_start":1327,"line_end":1327,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43583,"byte_end":43586,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ *Fusing notes: if the iterator is exhausted by dropping,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43591,"byte_end":43651,"line_start":1329,"line_end":1329,"column_start":5,"column_end":65}},{"value":"/ the result of calling `.next()` again depends on the iterator implementation.*","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43656,"byte_end":43738,"line_start":1330,"line_end":1330,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44447,"byte_end":44460,"line_start":1355,"line_end":1355,"column_start":8,"column_end":21},"name":"dropping_back","qualname":"::Itertools::dropping_back","value":"pub fn dropping_back(Self, usize) -> Self where Self: Sized,\nSelf: DoubleEndedIterator","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Consume the last `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[{"value":"/ Consume the last `n` elements from the iterator eagerly,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43897,"byte_end":43957,"line_start":1340,"line_end":1340,"column_start":5,"column_end":65}},{"value":"/ and return the same iterator again.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":43962,"byte_end":44001,"line_start":1341,"line_end":1341,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44006,"byte_end":44009,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ This is only possible on double ended iterators. `n` may be","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44014,"byte_end":44077,"line_start":1343,"line_end":1343,"column_start":5,"column_end":68}},{"value":"/ larger than the number of elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44082,"byte_end":44121,"line_start":1344,"line_end":1344,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44126,"byte_end":44129,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ Note: This method is eager, dropping the back elements immediately and","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44134,"byte_end":44208,"line_start":1346,"line_end":1346,"column_start":5,"column_end":79}},{"value":"/ preserves the iterator type.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44213,"byte_end":44245,"line_start":1347,"line_end":1347,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44250,"byte_end":44253,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44258,"byte_end":44265,"line_start":1349,"line_end":1349,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44270,"byte_end":44299,"line_start":1350,"line_end":1350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44304,"byte_end":44307,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ let init = vec![0, 3, 6, 9].into_iter().dropping_back(1);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44312,"byte_end":44373,"line_start":1352,"line_end":1352,"column_start":5,"column_end":66}},{"value":"/ itertools::assert_equal(init, vec![0, 3, 6]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44378,"byte_end":44427,"line_start":1353,"line_end":1353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44432,"byte_end":44439,"line_start":1354,"line_end":1354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45246,"byte_end":45253,"line_start":1383,"line_end":1383,"column_start":8,"column_end":15},"name":"foreach","qualname":"::Itertools::foreach","value":"pub fn foreach<F>(Self, F) where F: FnMut(Self::Item) -> (), Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Run the closure `f` eagerly on each element of the iterator.","sig":null,"attributes":[{"value":"/ Run the closure `f` eagerly on each element of the iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44657,"byte_end":44721,"line_start":1365,"line_end":1365,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44726,"byte_end":44729,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ Consumes the iterator until its end.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44734,"byte_end":44774,"line_start":1367,"line_end":1367,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44779,"byte_end":44782,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44787,"byte_end":44794,"line_start":1369,"line_end":1369,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44799,"byte_end":44832,"line_start":1370,"line_end":1370,"column_start":5,"column_end":38}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44837,"byte_end":44866,"line_start":1371,"line_end":1371,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44871,"byte_end":44874,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = channel();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44879,"byte_end":44908,"line_start":1373,"line_end":1373,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44913,"byte_end":44916,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ // use .foreach() to apply a function to each value -- sending it","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44921,"byte_end":44990,"line_start":1375,"line_end":1375,"column_start":5,"column_end":74}},{"value":"/ (0..5).map(|x| x * 2 + 1).foreach(|x| { tx.send(x).unwrap(); } );","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":44995,"byte_end":45064,"line_start":1376,"line_end":1376,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45069,"byte_end":45072,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ drop(tx);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45077,"byte_end":45090,"line_start":1378,"line_end":1378,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45095,"byte_end":45098,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(rx.iter(), vec![1, 3, 5, 7, 9]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45103,"byte_end":45163,"line_start":1380,"line_end":1380,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45168,"byte_end":45175,"line_start":1381,"line_end":1381,"column_start":5,"column_end":12}},{"value":"deprecated(note = \"Use .for_each() instead\", since = \"0.8\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45180,"byte_end":45238,"line_start":1382,"line_end":1382,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45884,"byte_end":45890,"line_start":1403,"line_end":1403,"column_start":8,"column_end":14},"name":"concat","qualname":"::Itertools::concat","value":"pub fn concat(Self) -> Self::Item where Self: Sized,\nSelf::Item: Extend<<<Self as Iterator>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Combine all an iterator's elements into one element by using `Extend`.","sig":null,"attributes":[{"value":"/ Combine all an iterator's elements into one element by using `Extend`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45374,"byte_end":45448,"line_start":1390,"line_end":1390,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45453,"byte_end":45456,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with each of the rest of the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45461,"byte_end":45536,"line_start":1392,"line_end":1392,"column_start":5,"column_end":80}},{"value":"/ items of the iterator. If the iterator is empty, the default value of","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45541,"byte_end":45614,"line_start":1393,"line_end":1393,"column_start":5,"column_end":78}},{"value":"/ `I::Item` is returned.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45619,"byte_end":45645,"line_start":1394,"line_end":1394,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45650,"byte_end":45653,"line_start":1395,"line_end":1395,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45658,"byte_end":45669,"line_start":1396,"line_end":1396,"column_start":5,"column_end":16}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45674,"byte_end":45703,"line_start":1397,"line_end":1397,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45708,"byte_end":45711,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ let input = vec![vec![1], vec![2, 3], vec![4, 5, 6]];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45716,"byte_end":45773,"line_start":1399,"line_end":1399,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(input.into_iter().concat(),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45778,"byte_end":45820,"line_start":1400,"line_end":1400,"column_start":5,"column_end":47}},{"value":"/            vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45825,"byte_end":45864,"line_start":1401,"line_end":1401,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":45869,"byte_end":45876,"line_start":1402,"line_end":1402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46218,"byte_end":46229,"line_start":1413,"line_end":1413,"column_start":8,"column_end":19},"name":"collect_vec","qualname":"::Itertools::collect_vec","value":"pub fn collect_vec(Self) -> Vec<Self::Item> where Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" `.collect_vec()` is simply a type specialization of `.collect()`,\n for convenience.\n","sig":null,"attributes":[{"value":"/ `.collect_vec()` is simply a type specialization of `.collect()`,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46084,"byte_end":46153,"line_start":1410,"line_end":1410,"column_start":5,"column_end":74}},{"value":"/ for convenience.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46158,"byte_end":46178,"line_start":1411,"line_end":1411,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46183,"byte_end":46210,"line_start":1412,"line_end":1412,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46846,"byte_end":46854,"line_start":1435,"line_end":1435,"column_start":8,"column_end":16},"name":"set_from","qualname":"::Itertools::set_from","value":"pub fn set_from<'a, A: 'a, J>(&mut Self, J) -> usize where Self: Iterator<Item\n= &'a mut A>, J: IntoIterator<Item = A>","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Assign to each reference in `self` from the `from` iterator,\n stopping at the shortest of the two iterators.","sig":null,"attributes":[{"value":"/ Assign to each reference in `self` from the `from` iterator,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46321,"byte_end":46385,"line_start":1419,"line_end":1419,"column_start":5,"column_end":69}},{"value":"/ stopping at the shortest of the two iterators.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46390,"byte_end":46440,"line_start":1420,"line_end":1420,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46445,"byte_end":46448,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ The `from` iterator is queried for its next element before the `self`","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46453,"byte_end":46526,"line_start":1422,"line_end":1422,"column_start":5,"column_end":78}},{"value":"/ iterator, and if either is exhausted the method is done.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46531,"byte_end":46591,"line_start":1423,"line_end":1423,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46596,"byte_end":46599,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ Return the number of elements written.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46604,"byte_end":46646,"line_start":1425,"line_end":1425,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46651,"byte_end":46654,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46659,"byte_end":46666,"line_start":1427,"line_end":1427,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46671,"byte_end":46700,"line_start":1428,"line_end":1428,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46705,"byte_end":46708,"line_start":1429,"line_end":1429,"column_start":5,"column_end":8}},{"value":"/ let mut xs = [0; 4];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46713,"byte_end":46737,"line_start":1430,"line_end":1430,"column_start":5,"column_end":29}},{"value":"/ xs.iter_mut().set_from(1..);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46742,"byte_end":46774,"line_start":1431,"line_end":1431,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(xs, [1, 2, 3, 4]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46779,"byte_end":46812,"line_start":1432,"line_end":1432,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46817,"byte_end":46824,"line_start":1433,"line_end":1433,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":46829,"byte_end":46838,"line_start":1434,"line_end":1434,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":47598,"byte_end":47602,"line_start":1461,"line_end":1461,"column_start":8,"column_end":12},"name":"join","qualname":"::Itertools::join","value":"pub fn join(&mut Self, &str) -> String where Self::Item: std::fmt::Display","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Combine all iterator elements into one String, seperated by `sep`.","sig":null,"attributes":[{"value":"/ Combine all iterator elements into one String, seperated by `sep`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":47222,"byte_end":47292,"line_start":1450,"line_end":1450,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":47297,"byte_end":47300,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ Use the `Display` implementation of each element.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":47305,"byte_end":47358,"line_start":1452,"line_end":1452,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":47363,"byte_end":47366,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":47371,"byte_end":47378,"line_start":1454,"line_end":1454,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":47383,"byte_end":47412,"line_start":1455,"line_end":1455,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":47417,"byte_end":47420,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ assert_eq!([\"a\", \"b\", \"c\"].iter().join(\", \"), \"a, b, c\");","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":47425,"byte_end":47486,"line_start":1457,"line_end":1457,"column_start":5,"column_end":66}},{"value":"/ assert_eq!([1, 2, 3].iter().join(\", \"), \"1, 2, 3\");","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":47491,"byte_end":47546,"line_start":1458,"line_end":1458,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":47551,"byte_end":47558,"line_start":1459,"line_end":1459,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":47563,"byte_end":47590,"line_start":1460,"line_end":1460,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48730,"byte_end":48736,"line_start":1495,"line_end":1495,"column_start":8,"column_end":14},"name":"format","qualname":"::Itertools::format","value":"pub fn format(Self, &str) -> Format<, Self> where Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements, separated by `sep`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48242,"byte_end":48295,"line_start":1480,"line_end":1480,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48300,"byte_end":48303,"line_start":1481,"line_end":1481,"column_start":5,"column_end":8}},{"value":"/ All elements are formatted (any formatting trait)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48308,"byte_end":48361,"line_start":1482,"line_end":1482,"column_start":5,"column_end":58}},{"value":"/ with `sep` inserted between each element.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48366,"byte_end":48411,"line_start":1483,"line_end":1483,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48416,"byte_end":48419,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the formatter helper is formatted more than once.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48424,"byte_end":48491,"line_start":1485,"line_end":1485,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48496,"byte_end":48499,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48504,"byte_end":48511,"line_start":1487,"line_end":1487,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48516,"byte_end":48545,"line_start":1488,"line_end":1488,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48550,"byte_end":48553,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ let data = [1.1, 2.71828, -3.];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48558,"byte_end":48593,"line_start":1490,"line_end":1490,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48598,"byte_end":48613,"line_start":1491,"line_end":1491,"column_start":5,"column_end":20}},{"value":"/     format!(\"{:.2}\", data.iter().format(\", \")),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48618,"byte_end":48669,"line_start":1492,"line_end":1492,"column_start":5,"column_end":56}},{"value":"/            \"1.10, 2.72, -3.00\");","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48674,"byte_end":48710,"line_start":1493,"line_end":1493,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48715,"byte_end":48722,"line_start":1494,"line_end":1494,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50214,"byte_end":50225,"line_start":1533,"line_end":1533,"column_start":8,"column_end":19},"name":"format_with","qualname":"::Itertools::format_with","value":"pub fn format_with<F>(Self, &str, F) -> FormatWith<, Self, F> where\nSelf: Sized, F: FnMut(Self::Item, &mut FnMut(&fmt::Display) -> fmt::Result) ->\nfmt::Result","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements, separated by `sep`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48860,"byte_end":48913,"line_start":1501,"line_end":1501,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48918,"byte_end":48921,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ This is a customizable version of `.format()`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48926,"byte_end":48976,"line_start":1503,"line_end":1503,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48981,"byte_end":48984,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ The supplied closure `format` is called once per iterator element,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":48989,"byte_end":49059,"line_start":1505,"line_end":1505,"column_start":5,"column_end":75}},{"value":"/ with two arguments: the element and a callback that takes a","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49064,"byte_end":49127,"line_start":1506,"line_end":1506,"column_start":5,"column_end":68}},{"value":"/ `&Display` value, i.e. any reference to type that implements `Display`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49132,"byte_end":49207,"line_start":1507,"line_end":1507,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49212,"byte_end":49215,"line_start":1508,"line_end":1508,"column_start":5,"column_end":8}},{"value":"/ Using `&format_args!(...)` is the most versatile way to apply custom","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49220,"byte_end":49292,"line_start":1509,"line_end":1509,"column_start":5,"column_end":77}},{"value":"/ element formatting. The callback can be called multiple times if needed.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49297,"byte_end":49373,"line_start":1510,"line_end":1510,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49378,"byte_end":49381,"line_start":1511,"line_end":1511,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the formatter helper is formatted more than once.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49386,"byte_end":49453,"line_start":1512,"line_end":1512,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49458,"byte_end":49461,"line_start":1513,"line_end":1513,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49466,"byte_end":49473,"line_start":1514,"line_end":1514,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49478,"byte_end":49507,"line_start":1515,"line_end":1515,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49512,"byte_end":49515,"line_start":1516,"line_end":1516,"column_start":5,"column_end":8}},{"value":"/ let data = [1.1, 2.71828, -3.];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49520,"byte_end":49555,"line_start":1517,"line_end":1517,"column_start":5,"column_end":40}},{"value":"/ let data_formatter = data.iter().format_with(\", \", |elt, f| f(&format_args!(\"{:.2}\", elt)));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49560,"byte_end":49656,"line_start":1518,"line_end":1518,"column_start":5,"column_end":101}},{"value":"/ assert_eq!(format!(\"{}\", data_formatter),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49661,"byte_end":49706,"line_start":1519,"line_end":1519,"column_start":5,"column_end":50}},{"value":"/            \"1.10, 2.72, -3.00\");","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49711,"byte_end":49747,"line_start":1520,"line_end":1520,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49752,"byte_end":49755,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ // .format_with() is recursively composable","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49760,"byte_end":49807,"line_start":1522,"line_end":1522,"column_start":5,"column_end":52}},{"value":"/ let matrix = [[1., 2., 3.],","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49812,"byte_end":49843,"line_start":1523,"line_end":1523,"column_start":5,"column_end":36}},{"value":"/               [4., 5., 6.]];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49848,"byte_end":49880,"line_start":1524,"line_end":1524,"column_start":5,"column_end":37}},{"value":"/ let matrix_formatter = matrix.iter().format_with(\"\\n\", |row, f| {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49885,"byte_end":49954,"line_start":1525,"line_end":1525,"column_start":5,"column_end":74}},{"value":"/                                 f(&row.iter().format_with(\", \", |elt, g| g(&elt)))","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":49959,"byte_end":50045,"line_start":1526,"line_end":1526,"column_start":5,"column_end":91}},{"value":"/                              });","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50050,"byte_end":50086,"line_start":1527,"line_end":1527,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(format!(\"{}\", matrix_formatter),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50091,"byte_end":50138,"line_start":1528,"line_end":1528,"column_start":5,"column_end":52}},{"value":"/            \"1, 2, 3\\n4, 5, 6\");","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50143,"byte_end":50178,"line_start":1529,"line_end":1529,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50183,"byte_end":50186,"line_start":1530,"line_end":1530,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50191,"byte_end":50194,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50199,"byte_end":50206,"line_start":1532,"line_end":1532,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51946,"byte_end":51958,"line_start":1582,"line_end":1582,"column_start":8,"column_end":20},"name":"fold_results","qualname":"::Itertools::fold_results","value":"pub fn fold_results<A, E, B, F>(&mut Self, B, F) -> Result<B, E> where\nSelf: Iterator<Item = Result<A, E>>, F: FnMut(B, A) -> B","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Fold `Result` values from an iterator.","sig":null,"attributes":[{"value":"/ Fold `Result` values from an iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50463,"byte_end":50505,"line_start":1540,"line_end":1540,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50510,"byte_end":50513,"line_start":1541,"line_end":1541,"column_start":5,"column_end":8}},{"value":"/ Only `Ok` values are folded. If no error is encountered, the folded","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50518,"byte_end":50589,"line_start":1542,"line_end":1542,"column_start":5,"column_end":76}},{"value":"/ value is returned inside `Ok`. Otherwise, the operation terminates","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50594,"byte_end":50664,"line_start":1543,"line_end":1543,"column_start":5,"column_end":75}},{"value":"/ and returns the first `Err` value it encounters. No iterator elements are","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50669,"byte_end":50746,"line_start":1544,"line_end":1544,"column_start":5,"column_end":82}},{"value":"/ consumed after the first error.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50751,"byte_end":50786,"line_start":1545,"line_end":1545,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50791,"byte_end":50794,"line_start":1546,"line_end":1546,"column_start":5,"column_end":8}},{"value":"/ The first accumulator value is the `start` parameter.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50799,"byte_end":50856,"line_start":1547,"line_end":1547,"column_start":5,"column_end":62}},{"value":"/ Each iteration passes the accumulator value and the next value inside `Ok`","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50861,"byte_end":50939,"line_start":1548,"line_end":1548,"column_start":5,"column_end":83}},{"value":"/ to the fold function `f` and its return value becomes the new accumulator value.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":50944,"byte_end":51028,"line_start":1549,"line_end":1549,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51033,"byte_end":51036,"line_start":1550,"line_end":1550,"column_start":5,"column_end":8}},{"value":"/ For example the sequence *Ok(1), Ok(2), Ok(3)* will result in a","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51041,"byte_end":51108,"line_start":1551,"line_end":1551,"column_start":5,"column_end":72}},{"value":"/ computation like this:","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51113,"byte_end":51139,"line_start":1552,"line_end":1552,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51144,"byte_end":51147,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51152,"byte_end":51165,"line_start":1554,"line_end":1554,"column_start":5,"column_end":18}},{"value":"/ let mut accum = start;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51170,"byte_end":51196,"line_start":1555,"line_end":1555,"column_start":5,"column_end":31}},{"value":"/ accum = f(accum, 1);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51201,"byte_end":51225,"line_start":1556,"line_end":1556,"column_start":5,"column_end":29}},{"value":"/ accum = f(accum, 2);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51230,"byte_end":51254,"line_start":1557,"line_end":1557,"column_start":5,"column_end":29}},{"value":"/ accum = f(accum, 3);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51259,"byte_end":51283,"line_start":1558,"line_end":1558,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51288,"byte_end":51295,"line_start":1559,"line_end":1559,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51300,"byte_end":51303,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ With a `start` value of 0 and an addition as folding function,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51308,"byte_end":51374,"line_start":1561,"line_end":1561,"column_start":5,"column_end":71}},{"value":"/ this effetively results in *((0 + 1) + 2) + 3*","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51379,"byte_end":51429,"line_start":1562,"line_end":1562,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51434,"byte_end":51437,"line_start":1563,"line_end":1563,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51442,"byte_end":51449,"line_start":1564,"line_end":1564,"column_start":5,"column_end":12}},{"value":"/ use std::ops::Add;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51454,"byte_end":51476,"line_start":1565,"line_end":1565,"column_start":5,"column_end":27}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51481,"byte_end":51510,"line_start":1566,"line_end":1566,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51515,"byte_end":51518,"line_start":1567,"line_end":1567,"column_start":5,"column_end":8}},{"value":"/ let values = [1, 2, -2, -1, 2, 1];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51523,"byte_end":51561,"line_start":1568,"line_end":1568,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51566,"byte_end":51581,"line_start":1569,"line_end":1569,"column_start":5,"column_end":20}},{"value":"/     values.iter()","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51586,"byte_end":51607,"line_start":1570,"line_end":1570,"column_start":5,"column_end":26}},{"value":"/           .map(Ok::<_, ()>)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51612,"byte_end":51643,"line_start":1571,"line_end":1571,"column_start":5,"column_end":36}},{"value":"/           .fold_results(0, Add::add),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51648,"byte_end":51689,"line_start":1572,"line_end":1572,"column_start":5,"column_end":46}},{"value":"/     Ok(3)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51694,"byte_end":51707,"line_start":1573,"line_end":1573,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51712,"byte_end":51718,"line_start":1574,"line_end":1574,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51723,"byte_end":51735,"line_start":1575,"line_end":1575,"column_start":5,"column_end":17}},{"value":"/     values.iter()","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51740,"byte_end":51761,"line_start":1576,"line_end":1576,"column_start":5,"column_end":26}},{"value":"/           .map(|&x| if x >= 0 { Ok(x) } else { Err(\"Negative number\") })","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51766,"byte_end":51842,"line_start":1577,"line_end":1577,"column_start":5,"column_end":81}},{"value":"/           .fold_results(0, Add::add)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51847,"byte_end":51887,"line_start":1578,"line_end":1578,"column_start":5,"column_end":45}},{"value":"/           .is_err()","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51892,"byte_end":51915,"line_start":1579,"line_end":1579,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51920,"byte_end":51926,"line_start":1580,"line_end":1580,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":51931,"byte_end":51938,"line_start":1581,"line_end":1581,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53115,"byte_end":53127,"line_start":1614,"line_end":1614,"column_start":8,"column_end":20},"name":"fold_options","qualname":"::Itertools::fold_options","value":"pub fn fold_options<A, B, F>(&mut Self, B, F) -> Option<B> where\nSelf: Iterator<Item = Option<A>>, F: FnMut(B, A) -> B","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Fold `Option` values from an iterator.","sig":null,"attributes":[{"value":"/ Fold `Option` values from an iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52303,"byte_end":52345,"line_start":1595,"line_end":1595,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52350,"byte_end":52353,"line_start":1596,"line_end":1596,"column_start":5,"column_end":8}},{"value":"/ Only `Some` values are folded. If no `None` is encountered, the folded","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52358,"byte_end":52432,"line_start":1597,"line_end":1597,"column_start":5,"column_end":79}},{"value":"/ value is returned inside `Some`. Otherwise, the operation terminates","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52437,"byte_end":52509,"line_start":1598,"line_end":1598,"column_start":5,"column_end":77}},{"value":"/ and returns `None`. No iterator elements are consumed after the `None`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52514,"byte_end":52589,"line_start":1599,"line_end":1599,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52594,"byte_end":52597,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ This is the `Option` equivalent to `fold_results`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52602,"byte_end":52656,"line_start":1601,"line_end":1601,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52661,"byte_end":52664,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52669,"byte_end":52676,"line_start":1603,"line_end":1603,"column_start":5,"column_end":12}},{"value":"/ use std::ops::Add;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52681,"byte_end":52703,"line_start":1604,"line_end":1604,"column_start":5,"column_end":27}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52708,"byte_end":52737,"line_start":1605,"line_end":1605,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52742,"byte_end":52745,"line_start":1606,"line_end":1606,"column_start":5,"column_end":8}},{"value":"/ let mut values = vec![Some(1), Some(2), Some(-2)].into_iter();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52750,"byte_end":52816,"line_start":1607,"line_end":1607,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(values.fold_options(5, Add::add), Some(5 + 1 + 2 - 2));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52821,"byte_end":52891,"line_start":1608,"line_end":1608,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52896,"byte_end":52899,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ let mut more_values = vec![Some(2), None, Some(0)].into_iter();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52904,"byte_end":52971,"line_start":1610,"line_end":1610,"column_start":5,"column_end":72}},{"value":"/ assert!(more_values.fold_options(0, Add::add).is_none());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":52976,"byte_end":53037,"line_start":1611,"line_end":1611,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(more_values.next().unwrap(), Some(0));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53042,"byte_end":53095,"line_start":1612,"line_end":1612,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53100,"byte_end":53107,"line_start":1613,"line_end":1613,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53927,"byte_end":53932,"line_start":1639,"line_end":1639,"column_start":8,"column_end":13},"name":"fold1","qualname":"::Itertools::fold1","value":"pub fn fold1<F>(Self, F) -> Option<Self::Item> where\nF: FnMut(Self::Item, Self::Item) -> Self::Item, Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Accumulator of the elements in the iterator.","sig":null,"attributes":[{"value":"/ Accumulator of the elements in the iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53463,"byte_end":53511,"line_start":1627,"line_end":1627,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53516,"byte_end":53519,"line_start":1628,"line_end":1628,"column_start":5,"column_end":8}},{"value":"/ Like `.fold()`, without a base case. If the iterator is","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53524,"byte_end":53583,"line_start":1629,"line_end":1629,"column_start":5,"column_end":64}},{"value":"/ empty, return `None`. With just one element, return it.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53588,"byte_end":53647,"line_start":1630,"line_end":1630,"column_start":5,"column_end":64}},{"value":"/ Otherwise elements are accumulated in sequence using the closure `f`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53652,"byte_end":53725,"line_start":1631,"line_end":1631,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53730,"byte_end":53733,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53738,"byte_end":53745,"line_start":1633,"line_end":1633,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53750,"byte_end":53779,"line_start":1634,"line_end":1634,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53784,"byte_end":53787,"line_start":1635,"line_end":1635,"column_start":5,"column_end":8}},{"value":"/ assert_eq!((0..10).fold1(|x, y| x + y).unwrap_or(0), 45);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53792,"byte_end":53853,"line_start":1636,"line_end":1636,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((0..0).fold1(|x, y| x * y), None);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53858,"byte_end":53907,"line_start":1637,"line_end":1637,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":53912,"byte_end":53919,"line_start":1638,"line_end":1638,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55996,"byte_end":56006,"line_start":1695,"line_end":1695,"column_start":8,"column_end":18},"name":"tree_fold1","qualname":"::Itertools::tree_fold1","value":"pub fn tree_fold1<F>(Self, F) -> Option<Self::Item> where\nF: FnMut(Self::Item, Self::Item) -> Self::Item, Self: Sized","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Accumulate the elements in the iterator in a tree-like manner.","sig":null,"attributes":[{"value":"/ Accumulate the elements in the iterator in a tree-like manner.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54130,"byte_end":54196,"line_start":1646,"line_end":1646,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54201,"byte_end":54204,"line_start":1647,"line_end":1647,"column_start":5,"column_end":8}},{"value":"/ You can think of it as, while there's more than one item, repeatedly","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54209,"byte_end":54281,"line_start":1648,"line_end":1648,"column_start":5,"column_end":77}},{"value":"/ combining adjacent items.  It does so in bottom-up-merge-sort order,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54286,"byte_end":54358,"line_start":1649,"line_end":1649,"column_start":5,"column_end":77}},{"value":"/ however, so that it needs only logarithmic stack space.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54363,"byte_end":54422,"line_start":1650,"line_end":1650,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54427,"byte_end":54430,"line_start":1651,"line_end":1651,"column_start":5,"column_end":8}},{"value":"/ This produces a call tree like the following (where the calls under","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54435,"byte_end":54506,"line_start":1652,"line_end":1652,"column_start":5,"column_end":76}},{"value":"/ an item are done after reading that item):","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54511,"byte_end":54557,"line_start":1653,"line_end":1653,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54562,"byte_end":54565,"line_start":1654,"line_end":1654,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54570,"byte_end":54581,"line_start":1655,"line_end":1655,"column_start":5,"column_end":16}},{"value":"/ 1 2 3 4 5 6 7","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54586,"byte_end":54603,"line_start":1656,"line_end":1656,"column_start":5,"column_end":22}},{"value":"/ │ │ │ │ │ │ │","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54608,"byte_end":54639,"line_start":1657,"line_end":1657,"column_start":5,"column_end":22}},{"value":"/ └─f └─f └─f │","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54644,"byte_end":54675,"line_start":1658,"line_end":1658,"column_start":5,"column_end":22}},{"value":"/   │   │   │ │","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54680,"byte_end":54705,"line_start":1659,"line_end":1659,"column_start":5,"column_end":22}},{"value":"/   └───f   └─f","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54710,"byte_end":54739,"line_start":1660,"line_end":1660,"column_start":5,"column_end":22}},{"value":"/       │     │","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54744,"byte_end":54765,"line_start":1661,"line_end":1661,"column_start":5,"column_end":22}},{"value":"/       └─────f","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54770,"byte_end":54799,"line_start":1662,"line_end":1662,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54804,"byte_end":54811,"line_start":1663,"line_end":1663,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54816,"byte_end":54819,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ Which, for non-associative functions, will typically produce a different","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54824,"byte_end":54900,"line_start":1665,"line_end":1665,"column_start":5,"column_end":81}},{"value":"/ result than the linear call tree used by `fold1`:","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54905,"byte_end":54958,"line_start":1666,"line_end":1666,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54963,"byte_end":54966,"line_start":1667,"line_end":1667,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54971,"byte_end":54982,"line_start":1668,"line_end":1668,"column_start":5,"column_end":16}},{"value":"/ 1 2 3 4 5 6 7","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":54987,"byte_end":55004,"line_start":1669,"line_end":1669,"column_start":5,"column_end":22}},{"value":"/ │ │ │ │ │ │ │","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55009,"byte_end":55040,"line_start":1670,"line_end":1670,"column_start":5,"column_end":22}},{"value":"/ └─f─f─f─f─f─f","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55045,"byte_end":55076,"line_start":1671,"line_end":1671,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55081,"byte_end":55088,"line_start":1672,"line_end":1672,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55093,"byte_end":55096,"line_start":1673,"line_end":1673,"column_start":5,"column_end":8}},{"value":"/ If `f` is associative, prefer the normal `fold1` instead.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55101,"byte_end":55162,"line_start":1674,"line_end":1674,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55167,"byte_end":55170,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55175,"byte_end":55182,"line_start":1676,"line_end":1676,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55187,"byte_end":55216,"line_start":1677,"line_end":1677,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55221,"byte_end":55224,"line_start":1678,"line_end":1678,"column_start":5,"column_end":8}},{"value":"/ // The same tree as above","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55229,"byte_end":55258,"line_start":1679,"line_end":1679,"column_start":5,"column_end":34}},{"value":"/ let num_strings = (1..8).map(|x| x.to_string());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55263,"byte_end":55315,"line_start":1680,"line_end":1680,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(num_strings.tree_fold1(|x, y| format!(\"f({}, {})\", x, y)),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55320,"byte_end":55393,"line_start":1681,"line_end":1681,"column_start":5,"column_end":78}},{"value":"/     Some(String::from(\"f(f(f(1, 2), f(3, 4)), f(f(5, 6), 7))\")));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55398,"byte_end":55467,"line_start":1682,"line_end":1682,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55472,"byte_end":55475,"line_start":1683,"line_end":1683,"column_start":5,"column_end":8}},{"value":"/ // Like fold1, an empty iterator produces None","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55480,"byte_end":55530,"line_start":1684,"line_end":1684,"column_start":5,"column_end":55}},{"value":"/ assert_eq!((0..0).tree_fold1(|x, y| x * y), None);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55535,"byte_end":55589,"line_start":1685,"line_end":1685,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55594,"byte_end":55597,"line_start":1686,"line_end":1686,"column_start":5,"column_end":8}},{"value":"/ // tree_fold1 matches fold1 for associative operations...","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55602,"byte_end":55663,"line_start":1687,"line_end":1687,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((0..10).tree_fold1(|x, y| x + y),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55668,"byte_end":55716,"line_start":1688,"line_end":1688,"column_start":5,"column_end":53}},{"value":"/     (0..10).fold1(|x, y| x + y));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55721,"byte_end":55758,"line_start":1689,"line_end":1689,"column_start":5,"column_end":42}},{"value":"/ // ...but not for non-associative ones","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55763,"byte_end":55805,"line_start":1690,"line_end":1690,"column_start":5,"column_end":47}},{"value":"/ assert!((0..10).tree_fold1(|x, y| x - y)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55810,"byte_end":55854,"line_start":1691,"line_end":1691,"column_start":5,"column_end":49}},{"value":"/     != (0..10).fold1(|x, y| x - y));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55859,"byte_end":55899,"line_start":1692,"line_end":1692,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":55904,"byte_end":55911,"line_start":1693,"line_end":1693,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":59565,"byte_end":59575,"line_start":1794,"line_end":1794,"column_start":8,"column_end":18},"name":"fold_while","qualname":"::Itertools::fold_while","value":"pub fn fold_while<B, F>(&mut Self, B, F) -> FoldWhile<B> where Self: Sized,\nF: FnMut(B, Self::Item) -> FoldWhile<B>","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" An iterator method that applies a function, producing a single, final value.","sig":null,"attributes":[{"value":"/ An iterator method that applies a function, producing a single, final value.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58186,"byte_end":58266,"line_start":1754,"line_end":1754,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58271,"byte_end":58274,"line_start":1755,"line_end":1755,"column_start":5,"column_end":8}},{"value":"/ `fold_while()` is basically equivalent to `fold()` but with additional support for","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58279,"byte_end":58365,"line_start":1756,"line_end":1756,"column_start":5,"column_end":91}},{"value":"/ early exit via short-circuiting.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58370,"byte_end":58406,"line_start":1757,"line_end":1757,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58411,"byte_end":58414,"line_start":1758,"line_end":1758,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58419,"byte_end":58426,"line_start":1759,"line_end":1759,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58431,"byte_end":58460,"line_start":1760,"line_end":1760,"column_start":5,"column_end":34}},{"value":"/ use itertools::FoldWhile::{Continue, Done};","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58465,"byte_end":58512,"line_start":1761,"line_end":1761,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58517,"byte_end":58520,"line_start":1762,"line_end":1762,"column_start":5,"column_end":8}},{"value":"/ let numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58525,"byte_end":58575,"line_start":1763,"line_end":1763,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58580,"byte_end":58583,"line_start":1764,"line_end":1764,"column_start":5,"column_end":8}},{"value":"/ let mut result = 0;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58588,"byte_end":58611,"line_start":1765,"line_end":1765,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58616,"byte_end":58619,"line_start":1766,"line_end":1766,"column_start":5,"column_end":8}},{"value":"/ // for loop:","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58624,"byte_end":58640,"line_start":1767,"line_end":1767,"column_start":5,"column_end":21}},{"value":"/ for i in &numbers {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58645,"byte_end":58668,"line_start":1768,"line_end":1768,"column_start":5,"column_end":28}},{"value":"/     if *i > 5 {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58673,"byte_end":58692,"line_start":1769,"line_end":1769,"column_start":5,"column_end":24}},{"value":"/         break;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58697,"byte_end":58715,"line_start":1770,"line_end":1770,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58720,"byte_end":58729,"line_start":1771,"line_end":1771,"column_start":5,"column_end":14}},{"value":"/     result = result + i;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58734,"byte_end":58762,"line_start":1772,"line_end":1772,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58767,"byte_end":58772,"line_start":1773,"line_end":1773,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58777,"byte_end":58780,"line_start":1774,"line_end":1774,"column_start":5,"column_end":8}},{"value":"/ // fold:","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58785,"byte_end":58797,"line_start":1775,"line_end":1775,"column_start":5,"column_end":17}},{"value":"/ let result2 = numbers.iter().fold(0, |acc, x| {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58802,"byte_end":58853,"line_start":1776,"line_end":1776,"column_start":5,"column_end":56}},{"value":"/     if *x > 5 { acc } else { acc + x }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58858,"byte_end":58900,"line_start":1777,"line_end":1777,"column_start":5,"column_end":47}},{"value":"/ });","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58905,"byte_end":58912,"line_start":1778,"line_end":1778,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58917,"byte_end":58920,"line_start":1779,"line_end":1779,"column_start":5,"column_end":8}},{"value":"/ // fold_while:","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58925,"byte_end":58943,"line_start":1780,"line_end":1780,"column_start":5,"column_end":23}},{"value":"/ let result3 = numbers.iter().fold_while(0, |acc, x| {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":58948,"byte_end":59005,"line_start":1781,"line_end":1781,"column_start":5,"column_end":62}},{"value":"/     if *x > 5 { Done(acc) } else { Continue(acc + x) }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":59010,"byte_end":59068,"line_start":1782,"line_end":1782,"column_start":5,"column_end":63}},{"value":"/ }).into_inner();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":59073,"byte_end":59093,"line_start":1783,"line_end":1783,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":59098,"byte_end":59101,"line_start":1784,"line_end":1784,"column_start":5,"column_end":8}},{"value":"/ // they're the same","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":59106,"byte_end":59129,"line_start":1785,"line_end":1785,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(result, result2);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":59134,"byte_end":59166,"line_start":1786,"line_end":1786,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(result2, result3);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":59171,"byte_end":59204,"line_start":1787,"line_end":1787,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":59209,"byte_end":59216,"line_start":1788,"line_end":1788,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":59221,"byte_end":59224,"line_start":1789,"line_end":1789,"column_start":5,"column_end":8}},{"value":"/ The big difference between the computations of `result2` and `result3` is that while","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":59229,"byte_end":59317,"line_start":1790,"line_end":1790,"column_start":5,"column_end":93}},{"value":"/ `fold()` called the provided closure for every item of the callee iterator,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":59322,"byte_end":59401,"line_start":1791,"line_end":1791,"column_start":5,"column_end":84}},{"value":"/ `fold_while()` actually stopped iterating as soon as it encountered `Fold::Done(_)`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":59406,"byte_end":59494,"line_start":1792,"line_end":1792,"column_start":5,"column_end":93}},{"value":"deprecated(note = \"Use .try_fold() instead\", since = \"0.8\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":59499,"byte_end":59557,"line_start":1793,"line_end":1793,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60690,"byte_end":60696,"line_start":1826,"line_end":1826,"column_start":8,"column_end":14},"name":"sorted","qualname":"::Itertools::sorted","value":"pub fn sorted(Self) -> VecIntoIter<Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"/ Sort all iterator elements into a new iterator in ascending order.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60000,"byte_end":60070,"line_start":1808,"line_end":1808,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60075,"byte_end":60078,"line_start":1809,"line_end":1809,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60083,"byte_end":60140,"line_start":1810,"line_end":1810,"column_start":5,"column_end":62}},{"value":"/ `slice::sort()` method and returns the result as a new","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60145,"byte_end":60203,"line_start":1811,"line_end":1811,"column_start":5,"column_end":63}},{"value":"/ iterator that owns its elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60208,"byte_end":60244,"line_start":1812,"line_end":1812,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60249,"byte_end":60252,"line_start":1813,"line_end":1813,"column_start":5,"column_end":8}},{"value":"/ The sorted iterator, if directly collected to a `Vec`, is converted","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60257,"byte_end":60328,"line_start":1814,"line_end":1814,"column_start":5,"column_end":76}},{"value":"/ without any extra copying or allocation cost.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60333,"byte_end":60382,"line_start":1815,"line_end":1815,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60387,"byte_end":60390,"line_start":1816,"line_end":1816,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60395,"byte_end":60402,"line_start":1817,"line_end":1817,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60407,"byte_end":60436,"line_start":1818,"line_end":1818,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60441,"byte_end":60444,"line_start":1819,"line_end":1819,"column_start":5,"column_end":8}},{"value":"/ // sort the letters of the text in ascending order","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60449,"byte_end":60503,"line_start":1820,"line_end":1820,"column_start":5,"column_end":59}},{"value":"/ let text = \"bdacfe\";","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60508,"byte_end":60532,"line_start":1821,"line_end":1821,"column_start":5,"column_end":29}},{"value":"/ itertools::assert_equal(text.chars().sorted(),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60537,"byte_end":60587,"line_start":1822,"line_end":1822,"column_start":5,"column_end":55}},{"value":"/                         \"abcdef\".chars());","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60592,"byte_end":60638,"line_start":1823,"line_end":1823,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60643,"byte_end":60650,"line_start":1824,"line_end":1824,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60655,"byte_end":60682,"line_start":1825,"line_end":1825,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61918,"byte_end":61927,"line_start":1861,"line_end":1861,"column_start":8,"column_end":17},"name":"sorted_by","qualname":"::Itertools::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> VecIntoIter<Self::Item> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"/ Sort all iterator elements into a new iterator in ascending order.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":60985,"byte_end":61055,"line_start":1837,"line_end":1837,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61060,"byte_end":61063,"line_start":1838,"line_end":1838,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61068,"byte_end":61125,"line_start":1839,"line_end":1839,"column_start":5,"column_end":62}},{"value":"/ `slice::sort_by()` method and returns the result as a new","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61130,"byte_end":61191,"line_start":1840,"line_end":1840,"column_start":5,"column_end":66}},{"value":"/ iterator that owns its elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61196,"byte_end":61232,"line_start":1841,"line_end":1841,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61237,"byte_end":61240,"line_start":1842,"line_end":1842,"column_start":5,"column_end":8}},{"value":"/ The sorted iterator, if directly collected to a `Vec`, is converted","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61245,"byte_end":61316,"line_start":1843,"line_end":1843,"column_start":5,"column_end":76}},{"value":"/ without any extra copying or allocation cost.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61321,"byte_end":61370,"line_start":1844,"line_end":1844,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61375,"byte_end":61378,"line_start":1845,"line_end":1845,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61383,"byte_end":61390,"line_start":1846,"line_end":1846,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61395,"byte_end":61424,"line_start":1847,"line_end":1847,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61429,"byte_end":61432,"line_start":1848,"line_end":1848,"column_start":5,"column_end":8}},{"value":"/ // sort people in descending order by age","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61437,"byte_end":61482,"line_start":1849,"line_end":1849,"column_start":5,"column_end":50}},{"value":"/ let people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61487,"byte_end":61565,"line_start":1850,"line_end":1850,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61570,"byte_end":61573,"line_start":1851,"line_end":1851,"column_start":5,"column_end":8}},{"value":"/ let oldest_people_first = people","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61578,"byte_end":61614,"line_start":1852,"line_end":1852,"column_start":5,"column_end":41}},{"value":"/     .into_iter()","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61619,"byte_end":61639,"line_start":1853,"line_end":1853,"column_start":5,"column_end":25}},{"value":"/     .sorted_by(|a, b| Ord::cmp(&b.1, &a.1))","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61644,"byte_end":61691,"line_start":1854,"line_end":1854,"column_start":5,"column_end":52}},{"value":"/     .map(|(person, _age)| person);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61696,"byte_end":61734,"line_start":1855,"line_end":1855,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61739,"byte_end":61742,"line_start":1856,"line_end":1856,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(oldest_people_first,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61747,"byte_end":61795,"line_start":1857,"line_end":1857,"column_start":5,"column_end":53}},{"value":"/                         vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61800,"byte_end":61866,"line_start":1858,"line_end":1858,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61871,"byte_end":61878,"line_start":1859,"line_end":1859,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":61883,"byte_end":61910,"line_start":1860,"line_end":1860,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63088,"byte_end":63101,"line_start":1894,"line_end":1894,"column_start":8,"column_end":21},"name":"sorted_by_key","qualname":"::Itertools::sorted_by_key","value":"pub fn sorted_by_key<K, F>(Self, F) -> VecIntoIter<Self::Item> where\nSelf: Sized, K: Ord, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"/ Sort all iterator elements into a new iterator in ascending order.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62166,"byte_end":62236,"line_start":1870,"line_end":1870,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62241,"byte_end":62244,"line_start":1871,"line_end":1871,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62249,"byte_end":62306,"line_start":1872,"line_end":1872,"column_start":5,"column_end":62}},{"value":"/ `slice::sort_by_key()` method and returns the result as a new","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62311,"byte_end":62376,"line_start":1873,"line_end":1873,"column_start":5,"column_end":70}},{"value":"/ iterator that owns its elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62381,"byte_end":62417,"line_start":1874,"line_end":1874,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62422,"byte_end":62425,"line_start":1875,"line_end":1875,"column_start":5,"column_end":8}},{"value":"/ The sorted iterator, if directly collected to a `Vec`, is converted","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62430,"byte_end":62501,"line_start":1876,"line_end":1876,"column_start":5,"column_end":76}},{"value":"/ without any extra copying or allocation cost.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62506,"byte_end":62555,"line_start":1877,"line_end":1877,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62560,"byte_end":62563,"line_start":1878,"line_end":1878,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62568,"byte_end":62575,"line_start":1879,"line_end":1879,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62580,"byte_end":62609,"line_start":1880,"line_end":1880,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62614,"byte_end":62617,"line_start":1881,"line_end":1881,"column_start":5,"column_end":8}},{"value":"/ // sort people in descending order by age","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62622,"byte_end":62667,"line_start":1882,"line_end":1882,"column_start":5,"column_end":50}},{"value":"/ let people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62672,"byte_end":62750,"line_start":1883,"line_end":1883,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62755,"byte_end":62758,"line_start":1884,"line_end":1884,"column_start":5,"column_end":8}},{"value":"/ let oldest_people_first = people","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62763,"byte_end":62799,"line_start":1885,"line_end":1885,"column_start":5,"column_end":41}},{"value":"/     .into_iter()","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62804,"byte_end":62824,"line_start":1886,"line_end":1886,"column_start":5,"column_end":25}},{"value":"/     .sorted_by_key(|x| -x.1)","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62829,"byte_end":62861,"line_start":1887,"line_end":1887,"column_start":5,"column_end":37}},{"value":"/     .map(|(person, _age)| person);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62866,"byte_end":62904,"line_start":1888,"line_end":1888,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62909,"byte_end":62912,"line_start":1889,"line_end":1889,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(oldest_people_first,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62917,"byte_end":62965,"line_start":1890,"line_end":1890,"column_start":5,"column_end":53}},{"value":"/                         vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":62970,"byte_end":63036,"line_start":1891,"line_end":1891,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63041,"byte_end":63048,"line_start":1892,"line_end":1892,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63053,"byte_end":63080,"line_start":1893,"line_end":1893,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":64054,"byte_end":64067,"line_start":1925,"line_end":1925,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::Itertools::partition_map","value":"pub fn partition_map<A, B, F, L, R>(Self, F) -> (A, B) where Self: Sized,\nF: Fn(Self::Item) -> Either<L, R>, A: Default + Extend<L>, B: Default +\nExtend<R>","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Collect all iterator elements into one of two\n partitions. Unlike `Iterator::partition`, each partition may\n have a distinct type.","sig":null,"attributes":[{"value":"/ Collect all iterator elements into one of two","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63345,"byte_end":63394,"line_start":1904,"line_end":1904,"column_start":5,"column_end":54}},{"value":"/ partitions. Unlike `Iterator::partition`, each partition may","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63399,"byte_end":63463,"line_start":1905,"line_end":1905,"column_start":5,"column_end":69}},{"value":"/ have a distinct type.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63468,"byte_end":63493,"line_start":1906,"line_end":1906,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63498,"byte_end":63501,"line_start":1907,"line_end":1907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63506,"byte_end":63513,"line_start":1908,"line_end":1908,"column_start":5,"column_end":12}},{"value":"/ use itertools::{Itertools, Either};","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63518,"byte_end":63557,"line_start":1909,"line_end":1909,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63562,"byte_end":63565,"line_start":1910,"line_end":1910,"column_start":5,"column_end":8}},{"value":"/ let successes_and_failures = vec![Ok(1), Err(false), Err(true), Ok(2)];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63570,"byte_end":63645,"line_start":1911,"line_end":1911,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63650,"byte_end":63653,"line_start":1912,"line_end":1912,"column_start":5,"column_end":8}},{"value":"/ let (successes, failures): (Vec<_>, Vec<_>) = successes_and_failures","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63658,"byte_end":63730,"line_start":1913,"line_end":1913,"column_start":5,"column_end":77}},{"value":"/     .into_iter()","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63735,"byte_end":63755,"line_start":1914,"line_end":1914,"column_start":5,"column_end":25}},{"value":"/     .partition_map(|r| {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63760,"byte_end":63788,"line_start":1915,"line_end":1915,"column_start":5,"column_end":33}},{"value":"/         match r {","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63793,"byte_end":63814,"line_start":1916,"line_end":1916,"column_start":5,"column_end":26}},{"value":"/             Ok(v) => Either::Left(v),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63819,"byte_end":63860,"line_start":1917,"line_end":1917,"column_start":5,"column_end":46}},{"value":"/             Err(v) => Either::Right(v),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63865,"byte_end":63908,"line_start":1918,"line_end":1918,"column_start":5,"column_end":48}},{"value":"/         }","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63913,"byte_end":63926,"line_start":1919,"line_end":1919,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63931,"byte_end":63942,"line_start":1920,"line_end":1920,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63947,"byte_end":63950,"line_start":1921,"line_end":1921,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(successes, [1, 2]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63955,"byte_end":63989,"line_start":1922,"line_end":1922,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(failures, [false, true]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":63994,"byte_end":64034,"line_start":1923,"line_end":1923,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":64039,"byte_end":64046,"line_start":1924,"line_end":1924,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65177,"byte_end":65191,"line_start":1959,"line_end":1959,"column_start":8,"column_end":22},"name":"into_group_map","qualname":"::Itertools::into_group_map","value":"pub fn into_group_map<K, V>(Self) -> HashMap<K, Vec<V>> where\nSelf: Iterator<Item = (K, V)> + Sized, K: Hash + Eq","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return a `HashMap` of keys mapped to `Vec`s of values. Keys and values\n are taken from `(Key, Value)` tuple pairs yielded by the input iterator.\n \n ```\n use itertools::Itertools;\n \n let data = vec![(0, 10), (2, 12), (3, 13), (0, 20), (3, 33), (2, 42)];\n let lookup = data.into_iter().into_group_map();\n \n assert_eq!(lookup[&0], vec![10, 20]);\n assert_eq!(lookup.get(&1), None);\n assert_eq!(lookup[&2], vec![12, 42]);\n assert_eq!(lookup[&3], vec![13, 33]);\n ```\n","sig":null,"attributes":[{"value":"/ Return a `HashMap` of keys mapped to `Vec`s of values. Keys and values","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":64582,"byte_end":64656,"line_start":1944,"line_end":1944,"column_start":5,"column_end":79}},{"value":"/ are taken from `(Key, Value)` tuple pairs yielded by the input iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":64661,"byte_end":64737,"line_start":1945,"line_end":1945,"column_start":5,"column_end":81}},{"value":"/ ","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":64742,"byte_end":64746,"line_start":1946,"line_end":1946,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":64751,"byte_end":64758,"line_start":1947,"line_end":1947,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":64763,"byte_end":64792,"line_start":1948,"line_end":1948,"column_start":5,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":64797,"byte_end":64801,"line_start":1949,"line_end":1949,"column_start":5,"column_end":9}},{"value":"/ let data = vec![(0, 10), (2, 12), (3, 13), (0, 20), (3, 33), (2, 42)];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":64806,"byte_end":64880,"line_start":1950,"line_end":1950,"column_start":5,"column_end":79}},{"value":"/ let lookup = data.into_iter().into_group_map();","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":64885,"byte_end":64936,"line_start":1951,"line_end":1951,"column_start":5,"column_end":56}},{"value":"/ ","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":64941,"byte_end":64945,"line_start":1952,"line_end":1952,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], vec![10, 20]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":64950,"byte_end":64991,"line_start":1953,"line_end":1953,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(lookup.get(&1), None);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":64996,"byte_end":65033,"line_start":1954,"line_end":1954,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(lookup[&2], vec![12, 42]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65038,"byte_end":65079,"line_start":1955,"line_end":1955,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(lookup[&3], vec![13, 33]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65084,"byte_end":65125,"line_start":1956,"line_end":1956,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65130,"byte_end":65137,"line_start":1957,"line_end":1957,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65142,"byte_end":65169,"line_start":1958,"line_end":1958,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66654,"byte_end":66660,"line_start":2001,"line_end":2001,"column_start":8,"column_end":14},"name":"minmax","qualname":"::Itertools::minmax","value":"pub fn minmax(Self) -> MinMaxResult<Self::Item> where Self: Sized,\nSelf::Item: PartialOrd","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return the minimum and maximum elements in the iterator.","sig":null,"attributes":[{"value":"/ Return the minimum and maximum elements in the iterator.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65362,"byte_end":65422,"line_start":1966,"line_end":1966,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65427,"byte_end":65430,"line_start":1967,"line_end":1967,"column_start":5,"column_end":8}},{"value":"/ The return type `MinMaxResult` is an enum of three variants:","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65435,"byte_end":65499,"line_start":1968,"line_end":1968,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65504,"byte_end":65507,"line_start":1969,"line_end":1969,"column_start":5,"column_end":8}},{"value":"/ - `NoElements` if the iterator is empty.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65512,"byte_end":65556,"line_start":1970,"line_end":1970,"column_start":5,"column_end":49}},{"value":"/ - `OneElement(x)` if the iterator has exactly one element.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65561,"byte_end":65623,"line_start":1971,"line_end":1971,"column_start":5,"column_end":67}},{"value":"/ - `MinMax(x, y)` is returned otherwise, where `x <= y`. Two","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65628,"byte_end":65691,"line_start":1972,"line_end":1972,"column_start":5,"column_end":68}},{"value":"/    values are equal if and only if there is more than one","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65696,"byte_end":65757,"line_start":1973,"line_end":1973,"column_start":5,"column_end":66}},{"value":"/    element in the iterator and all elements are equal.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65762,"byte_end":65820,"line_start":1974,"line_end":1974,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65825,"byte_end":65828,"line_start":1975,"line_end":1975,"column_start":5,"column_end":8}},{"value":"/ On an iterator of length `n`, `minmax` does `1.5 * n` comparisons,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65833,"byte_end":65903,"line_start":1976,"line_end":1976,"column_start":5,"column_end":75}},{"value":"/ and so is faster than calling `min` and `max` separately which does","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65908,"byte_end":65979,"line_start":1977,"line_end":1977,"column_start":5,"column_end":76}},{"value":"/ `2 * n` comparisons.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":65984,"byte_end":66008,"line_start":1978,"line_end":1978,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66013,"byte_end":66016,"line_start":1979,"line_end":1979,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66021,"byte_end":66035,"line_start":1980,"line_end":1980,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66040,"byte_end":66043,"line_start":1981,"line_end":1981,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66048,"byte_end":66055,"line_start":1982,"line_end":1982,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66060,"byte_end":66089,"line_start":1983,"line_end":1983,"column_start":5,"column_end":34}},{"value":"/ use itertools::MinMaxResult::{NoElements, OneElement, MinMax};","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66094,"byte_end":66160,"line_start":1984,"line_end":1984,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66165,"byte_end":66168,"line_start":1985,"line_end":1985,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66173,"byte_end":66198,"line_start":1986,"line_end":1986,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().minmax(), NoElements);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66203,"byte_end":66249,"line_start":1987,"line_end":1987,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66254,"byte_end":66257,"line_start":1988,"line_end":1988,"column_start":5,"column_end":8}},{"value":"/ let a = [1];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66262,"byte_end":66278,"line_start":1989,"line_end":1989,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.iter().minmax(), OneElement(&1));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66283,"byte_end":66333,"line_start":1990,"line_end":1990,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66338,"byte_end":66341,"line_start":1991,"line_end":1991,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 4, 5];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66346,"byte_end":66374,"line_start":1992,"line_end":1992,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(a.iter().minmax(), MinMax(&1, &5));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66379,"byte_end":66429,"line_start":1993,"line_end":1993,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66434,"byte_end":66437,"line_start":1994,"line_end":1994,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 1, 1, 1];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66442,"byte_end":66467,"line_start":1995,"line_end":1995,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().minmax(), MinMax(&1, &1));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66472,"byte_end":66522,"line_start":1996,"line_end":1996,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66527,"byte_end":66534,"line_start":1997,"line_end":1997,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66539,"byte_end":66542,"line_start":1998,"line_end":1998,"column_start":5,"column_end":8}},{"value":"/ The elements can be floats but no particular result is guaranteed","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66547,"byte_end":66616,"line_start":1999,"line_end":1999,"column_start":5,"column_end":74}},{"value":"/ if an element is NaN.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66621,"byte_end":66646,"line_start":2000,"line_end":2000,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67356,"byte_end":67369,"line_start":2018,"line_end":2018,"column_start":8,"column_end":21},"name":"minmax_by_key","qualname":"::Itertools::minmax_by_key","value":"pub fn minmax_by_key<K, F>(Self, F) -> MinMaxResult<Self::Item> where\nSelf: Sized, K: PartialOrd, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified function.","sig":null,"attributes":[{"value":"/ Return the minimum and maximum element of an iterator, as determined by","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66824,"byte_end":66899,"line_start":2007,"line_end":2007,"column_start":5,"column_end":80}},{"value":"/ the specified function.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66904,"byte_end":66931,"line_start":2008,"line_end":2008,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66936,"byte_end":66939,"line_start":2009,"line_end":2009,"column_start":5,"column_end":8}},{"value":"/ The return value is a variant of `MinMaxResult` like for `minmax()`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":66944,"byte_end":67016,"line_start":2010,"line_end":2010,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67021,"byte_end":67024,"line_start":2011,"line_end":2011,"column_start":5,"column_end":8}},{"value":"/ For the minimum, the first minimal element is returned.  For the maximum,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67029,"byte_end":67106,"line_start":2012,"line_end":2012,"column_start":5,"column_end":82}},{"value":"/ the last maximal element wins.  This matches the behavior of the standard","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67111,"byte_end":67188,"line_start":2013,"line_end":2013,"column_start":5,"column_end":82}},{"value":"/ `Iterator::min()` and `Iterator::max()` methods.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67193,"byte_end":67245,"line_start":2014,"line_end":2014,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67250,"byte_end":67253,"line_start":2015,"line_end":2015,"column_start":5,"column_end":8}},{"value":"/ The keys can be floats but no particular result is guaranteed","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67258,"byte_end":67323,"line_start":2016,"line_end":2016,"column_start":5,"column_end":70}},{"value":"/ if a key is NaN.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67328,"byte_end":67348,"line_start":2017,"line_end":2017,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":68007,"byte_end":68016,"line_start":2032,"line_end":2032,"column_start":8,"column_end":17},"name":"minmax_by","qualname":"::Itertools::minmax_by","value":"pub fn minmax_by<F>(Self, F) -> MinMaxResult<Self::Item> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified comparison function.","sig":null,"attributes":[{"value":"/ Return the minimum and maximum element of an iterator, as determined by","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67567,"byte_end":67642,"line_start":2024,"line_end":2024,"column_start":5,"column_end":80}},{"value":"/ the specified comparison function.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67647,"byte_end":67685,"line_start":2025,"line_end":2025,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67690,"byte_end":67693,"line_start":2026,"line_end":2026,"column_start":5,"column_end":8}},{"value":"/ The return value is a variant of `MinMaxResult` like for `minmax()`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67698,"byte_end":67770,"line_start":2027,"line_end":2027,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67775,"byte_end":67778,"line_start":2028,"line_end":2028,"column_start":5,"column_end":8}},{"value":"/ For the minimum, the first minimal element is returned.  For the maximum,","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67783,"byte_end":67860,"line_start":2029,"line_end":2029,"column_start":5,"column_end":82}},{"value":"/ the last maximal element wins.  This matches the behavior of the standard","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67865,"byte_end":67942,"line_start":2030,"line_end":2030,"column_start":5,"column_end":82}},{"value":"/ `Iterator::min()` and `Iterator::max()` methods.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":67947,"byte_end":67999,"line_start":2031,"line_end":2031,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1414},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":68745,"byte_end":68750,"line_start":2056,"line_end":2056,"column_start":8,"column_end":13},"name":"equal","qualname":"::equal","value":"pub fn equal<I, J>(I, J) -> bool where I: IntoIterator, J: IntoIterator,\nI::Item: PartialEq<J::Item>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if both iterables produce equal sequences\n (elements pairwise equal and sequences of the same length),\n `false` otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if both iterables produce equal sequences","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":68348,"byte_end":68407,"line_start":2045,"line_end":2045,"column_start":1,"column_end":60}},{"value":"/ (elements pairwise equal and sequences of the same length),","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":68408,"byte_end":68471,"line_start":2046,"line_end":2046,"column_start":1,"column_end":64}},{"value":"/ `false` otherwise.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":68472,"byte_end":68494,"line_start":2047,"line_end":2047,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":68495,"byte_end":68498,"line_start":2048,"line_end":2048,"column_start":1,"column_end":4}},{"value":"/ This is an `IntoIterator` enabled function that is similar to the standard","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":68499,"byte_end":68577,"line_start":2049,"line_end":2049,"column_start":1,"column_end":79}},{"value":"/ library method `Iterator::eq`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":68578,"byte_end":68612,"line_start":2050,"line_end":2050,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":68613,"byte_end":68616,"line_start":2051,"line_end":2051,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":68617,"byte_end":68624,"line_start":2052,"line_end":2052,"column_start":1,"column_end":8}},{"value":"/ assert!(itertools::equal(vec![1, 2, 3], 1..4));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":68625,"byte_end":68676,"line_start":2053,"line_end":2053,"column_start":1,"column_end":52}},{"value":"/ assert!(!itertools::equal(&[0, 0], &[0, 0, 0]));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":68677,"byte_end":68729,"line_start":2054,"line_end":2054,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":68730,"byte_end":68737,"line_start":2055,"line_end":2055,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1417},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":69570,"byte_end":69582,"line_start":2084,"line_end":2084,"column_start":8,"column_end":20},"name":"assert_equal","qualname":"::assert_equal","value":"pub fn assert_equal<I, J>(I, J) where I: IntoIterator, J: IntoIterator,\nI::Item: fmt::Debug + PartialEq<J::Item>, J::Item: fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Assert that two iterables produce equal sequences, with the same\n semantics as *equal(a, b)*.","sig":null,"attributes":[{"value":"/ Assert that two iterables produce equal sequences, with the same","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":69188,"byte_end":69256,"line_start":2074,"line_end":2074,"column_start":1,"column_end":69}},{"value":"/ semantics as *equal(a, b)*.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":69257,"byte_end":69288,"line_start":2075,"line_end":2075,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":69289,"byte_end":69292,"line_start":2076,"line_end":2076,"column_start":1,"column_end":4}},{"value":"/ **Panics** on assertion failure with a message that shows the","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":69293,"byte_end":69358,"line_start":2077,"line_end":2077,"column_start":1,"column_end":66}},{"value":"/ two iteration elements.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":69359,"byte_end":69386,"line_start":2078,"line_end":2078,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":69387,"byte_end":69390,"line_start":2079,"line_end":2079,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":69391,"byte_end":69404,"line_start":2080,"line_end":2080,"column_start":1,"column_end":14}},{"value":"/ assert_equal(\"exceed\".split('c'), \"excess\".split('c'));","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":69405,"byte_end":69464,"line_start":2081,"line_end":2081,"column_start":1,"column_end":60}},{"value":"/ // ^PANIC: panicked at 'Failed assertion Some(\"eed\") == Some(\"ess\") for iteration 1',","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":69465,"byte_end":69554,"line_start":2082,"line_end":2082,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":69555,"byte_end":69562,"line_start":2083,"line_end":2083,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1420},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70809,"byte_end":70818,"line_start":2126,"line_end":2126,"column_start":8,"column_end":17},"name":"partition","qualname":"::partition","value":"pub fn partition<'a, A: 'a, I, F>(I, F) -> usize where I: IntoIterator<Item =\n&'a mut A>, I::IntoIter: DoubleEndedIterator, F: FnMut(&A) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Partition a sequence using predicate `pred` so that elements\n that map to `true` are placed before elements which map to `false`.","sig":null,"attributes":[{"value":"/ Partition a sequence using predicate `pred` so that elements","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70270,"byte_end":70334,"line_start":2109,"line_end":2109,"column_start":1,"column_end":65}},{"value":"/ that map to `true` are placed before elements which map to `false`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70335,"byte_end":70406,"line_start":2110,"line_end":2110,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70407,"byte_end":70410,"line_start":2111,"line_end":2111,"column_start":1,"column_end":4}},{"value":"/ The order within the partitions is arbitrary.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70411,"byte_end":70460,"line_start":2112,"line_end":2112,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70461,"byte_end":70464,"line_start":2113,"line_end":2113,"column_start":1,"column_end":4}},{"value":"/ Return the index of the split point.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70465,"byte_end":70505,"line_start":2114,"line_end":2114,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70506,"byte_end":70509,"line_start":2115,"line_end":2115,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70510,"byte_end":70517,"line_start":2116,"line_end":2116,"column_start":1,"column_end":8}},{"value":"/ use itertools::partition;","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70518,"byte_end":70547,"line_start":2117,"line_end":2117,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70548,"byte_end":70551,"line_start":2118,"line_end":2118,"column_start":1,"column_end":4}},{"value":"/ # // use repeated numbers to not promise any ordering","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70552,"byte_end":70609,"line_start":2119,"line_end":2119,"column_start":1,"column_end":58}},{"value":"/ let mut data = [7, 1, 1, 7, 1, 1, 7];","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70610,"byte_end":70651,"line_start":2120,"line_end":2120,"column_start":1,"column_end":42}},{"value":"/ let split_index = partition(&mut data, |elt| *elt >= 3);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70652,"byte_end":70712,"line_start":2121,"line_end":2121,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70713,"byte_end":70716,"line_start":2122,"line_end":2122,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(data, [7, 7, 7, 1, 1, 1, 1]);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70717,"byte_end":70761,"line_start":2123,"line_end":2123,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(split_index, 3);","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70762,"byte_end":70793,"line_start":2124,"line_end":2124,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":70794,"byte_end":70801,"line_start":2125,"line_end":2125,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2396},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":71754,"byte_end":71762,"line_start":2156,"line_end":2156,"column_start":5,"column_end":13},"name":"Continue","qualname":"::FoldWhile::Continue","value":"FoldWhile::Continue(T)","parent":{"krate":0,"index":2394},"children":[],"decl_id":null,"docs":" Continue folding with this value\n","sig":null,"attributes":[{"value":"/ Continue folding with this value","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":71713,"byte_end":71749,"line_start":2155,"line_end":2155,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2399},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":71823,"byte_end":71827,"line_start":2158,"line_end":2158,"column_start":5,"column_end":9},"name":"Done","qualname":"::FoldWhile::Done","value":"FoldWhile::Done(T)","parent":{"krate":0,"index":2394},"children":[],"decl_id":null,"docs":" Fold is complete and will return this value\n","sig":null,"attributes":[{"value":"/ Fold is complete and will return this value","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":71771,"byte_end":71818,"line_start":2157,"line_end":2157,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":2394},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":71694,"byte_end":71703,"line_start":2154,"line_end":2154,"column_start":10,"column_end":19},"name":"FoldWhile","qualname":"::FoldWhile","value":"pub enum FoldWhile<T> {\n\n    /// Continue folding with this value\n    Continue(T),\n\n    /// Fold is complete and will return this value\n    Done(T),\n}","parent":null,"children":[{"krate":0,"index":2396},{"krate":0,"index":2399}],"decl_id":null,"docs":" An enum used for controlling the execution of `.fold_while()`.","sig":null,"attributes":[{"value":"/ An enum used for controlling the execution of `.fold_while()`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":71481,"byte_end":71547,"line_start":2150,"line_end":2150,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":71548,"byte_end":71551,"line_start":2151,"line_end":2151,"column_start":1,"column_end":4}},{"value":"/ See [`.fold_while()`](trait.Itertools.html#method.fold_while) for more information.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":71552,"byte_end":71639,"line_start":2152,"line_end":2152,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":71919,"byte_end":71929,"line_start":2163,"line_end":2163,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FoldWhile<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value in the continue or done.\n","sig":null,"attributes":[{"value":"/ Return the value in the continue or done.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":71862,"byte_end":71907,"line_start":2162,"line_end":2162,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":72122,"byte_end":72129,"line_start":2170,"line_end":2170,"column_start":12,"column_end":19},"name":"is_done","qualname":"<FoldWhile<T>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if `self` is `Done`, false if it is `Continue`.\n","sig":null,"attributes":[{"value":"/ Return true if `self` is `Done`, false if it is `Continue`.","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":72047,"byte_end":72110,"line_start":2169,"line_end":2169,"column_start":5,"column_end":68}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs","byte_start":107034,"byte_end":107046,"line_start":50,"line_end":50,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs","byte_start":109152,"byte_end":109168,"line_start":117,"line_end":117,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs","byte_start":109816,"byte_end":109828,"line_start":146,"line_end":146,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":74326,"byte_end":74336,"line_start":63,"line_end":63,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":75747,"byte_end":75765,"line_start":119,"line_end":119,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":78015,"byte_end":78022,"line_start":204,"line_end":204,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":78641,"byte_end":78648,"line_start":229,"line_end":229,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":80495,"byte_end":80502,"line_start":302,"line_end":302,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":82935,"byte_end":82943,"line_start":377,"line_end":377,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":83171,"byte_end":83179,"line_start":386,"line_end":386,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":84344,"byte_end":84348,"line_start":434,"line_end":434,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":84967,"byte_end":84971,"line_start":462,"line_end":462,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":85187,"byte_end":85196,"line_start":477,"line_end":477,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":85428,"byte_end":85437,"line_start":488,"line_end":488,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":86940,"byte_end":86945,"line_start":538,"line_end":538,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87182,"byte_end":87187,"line_start":549,"line_end":549,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87993,"byte_end":87998,"line_start":581,"line_end":581,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":88836,"byte_end":88843,"line_start":612,"line_end":612,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":89368,"byte_end":89375,"line_start":634,"line_end":634,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":89643,"byte_end":89650,"line_start":646,"line_end":646,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":90110,"byte_end":90122,"line_start":670,"line_end":670,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":91356,"byte_end":91364,"line_start":712,"line_end":712,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":91533,"byte_end":91541,"line_start":721,"line_end":721,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":91928,"byte_end":91936,"line_start":741,"line_end":741,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":92569,"byte_end":92574,"line_start":766,"line_end":766,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":92938,"byte_end":92943,"line_start":787,"line_end":787,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":93076,"byte_end":93081,"line_start":794,"line_end":794,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":94290,"byte_end":94302,"line_start":838,"line_end":838,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":94639,"byte_end":94651,"line_start":851,"line_end":851,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":95750,"byte_end":95759,"line_start":893,"line_end":893,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":97068,"byte_end":97085,"line_start":944,"line_end":944,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":97337,"byte_end":97354,"line_start":960,"line_end":960,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":97472,"byte_end":97489,"line_start":966,"line_end":966,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":100249,"byte_end":100256,"line_start":1058,"line_end":1058,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":100771,"byte_end":100778,"line_start":1081,"line_end":1081,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":101017,"byte_end":101024,"line_start":1092,"line_end":1092,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":101667,"byte_end":101677,"line_start":1118,"line_end":1118,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":102968,"byte_end":102977,"line_start":1169,"line_end":1169,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":103466,"byte_end":103475,"line_start":1191,"line_end":1191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":104313,"byte_end":104319,"line_start":1223,"line_end":1223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":105185,"byte_end":105191,"line_start":1259,"line_end":1259,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":105297,"byte_end":105303,"line_start":1265,"line_end":1265,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112165,"byte_end":112177,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs","byte_start":121395,"byte_end":121405,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs","byte_start":122230,"byte_end":122242,"line_start":16,"line_end":16,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs","byte_start":122905,"byte_end":122917,"line_start":47,"line_end":47,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs","byte_start":124596,"byte_end":124606,"line_start":109,"line_end":109,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs","byte_start":125542,"byte_end":125552,"line_start":155,"line_end":155,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":129797,"byte_end":129807,"line_start":49,"line_end":49,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":130556,"byte_end":130562,"line_start":73,"line_end":73,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":132524,"byte_end":132525,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":132830,"byte_end":132840,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":133036,"byte_end":133046,"line_start":40,"line_end":40,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":134088,"byte_end":134098,"line_start":77,"line_end":77,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":140876,"byte_end":140886,"line_start":263,"line_end":263,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":142698,"byte_end":142705,"line_start":320,"line_end":320,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":143912,"byte_end":143918,"line_start":366,"line_end":366,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":144828,"byte_end":144833,"line_start":402,"line_end":402,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":145004,"byte_end":145009,"line_start":411,"line_end":411,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":146841,"byte_end":146851,"line_start":475,"line_end":475,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":147837,"byte_end":147843,"line_start":517,"line_end":517,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":148602,"byte_end":148607,"line_start":550,"line_end":550,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":148766,"byte_end":148771,"line_start":559,"line_end":559,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs","byte_start":149869,"byte_end":149880,"line_start":35,"line_end":35,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":151219,"byte_end":151227,"line_start":33,"line_end":33,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":152123,"byte_end":152131,"line_start":64,"line_end":64,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":153785,"byte_end":153791,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":154714,"byte_end":154720,"line_start":153,"line_end":153,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":154889,"byte_end":154895,"line_start":162,"line_end":162,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":155998,"byte_end":156006,"line_start":204,"line_end":204,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":156923,"byte_end":156931,"line_start":230,"line_end":230,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs","byte_start":158787,"byte_end":158798,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs","byte_start":159023,"byte_end":159034,"line_start":43,"line_end":43,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":160907,"byte_end":160919,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":164950,"byte_end":164959,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":165112,"byte_end":165121,"line_start":39,"line_end":39,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":165765,"byte_end":165774,"line_start":61,"line_end":61,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":166241,"byte_end":166250,"line_start":80,"line_end":80,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":166674,"byte_end":166683,"line_start":100,"line_end":100,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs","byte_start":167508,"byte_end":167516,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs","byte_start":168279,"byte_end":168287,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs","byte_start":168744,"byte_end":168752,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":169648,"byte_end":169656,"line_start":23,"line_end":23,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":169976,"byte_end":169983,"line_start":38,"line_end":38,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":170400,"byte_end":170408,"line_start":57,"line_end":57,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":171363,"byte_end":171379,"line_start":97,"line_end":97,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":173660,"byte_end":173674,"line_start":14,"line_end":14,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176400,"byte_end":176408,"line_start":26,"line_end":26,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176910,"byte_end":176918,"line_start":47,"line_end":47,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178934,"byte_end":178940,"line_start":53,"line_end":53,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":179075,"byte_end":179081,"line_start":60,"line_end":60,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":179640,"byte_end":179646,"line_start":79,"line_end":79,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs","byte_start":180621,"byte_end":180628,"line_start":23,"line_end":23,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs","byte_start":181018,"byte_end":181025,"line_start":43,"line_end":43,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs","byte_start":181175,"byte_end":181182,"line_start":52,"line_end":52,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184167,"byte_end":184177,"line_start":14,"line_end":14,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185016,"byte_end":185026,"line_start":48,"line_end":48,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186695,"byte_end":186701,"line_start":109,"line_end":109,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":187088,"byte_end":187094,"line_start":124,"line_end":124,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":187783,"byte_end":187790,"line_start":153,"line_end":153,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":187893,"byte_end":187900,"line_start":159,"line_end":159,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tee.rs","byte_start":189614,"byte_end":189617,"line_start":37,"line_end":37,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tee.rs","byte_start":190714,"byte_end":190717,"line_start":75,"line_end":75,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":191142,"byte_end":191153,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":191326,"byte_end":191337,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":192003,"byte_end":192014,"line_start":56,"line_end":56,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":192663,"byte_end":192669,"line_start":84,"line_end":84,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":192881,"byte_end":192887,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":194494,"byte_end":194506,"line_start":153,"line_end":153,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":198310,"byte_end":198318,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2159}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":199116,"byte_end":199124,"line_start":50,"line_end":50,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":199841,"byte_end":199847,"line_start":79,"line_end":79,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":200874,"byte_end":200880,"line_start":116,"line_end":116,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202412,"byte_end":202420,"line_start":42,"line_end":42,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202699,"byte_end":202711,"line_start":54,"line_end":54,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":203947,"byte_end":203959,"line_start":88,"line_end":88,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204877,"byte_end":204882,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":205460,"byte_end":205465,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs","byte_start":206387,"byte_end":206397,"line_start":33,"line_end":33,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs","byte_start":207019,"byte_end":207029,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs","byte_start":207850,"byte_end":207860,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":68323,"byte_end":68324,"line_start":2043,"line_end":2043,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":71843,"byte_end":71852,"line_start":2161,"line_end":2161,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1427},{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":4228,"byte_end":4232,"line_start":154,"line_end":154,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":484}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs","byte_start":107034,"byte_end":107046,"line_start":50,"line_end":50,"column_start":9,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs","byte_start":109152,"byte_end":109168,"line_start":117,"line_end":117,"column_start":9,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs","byte_start":109816,"byte_end":109828,"line_start":146,"line_end":146,"column_start":22,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1429},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":74326,"byte_end":74336,"line_start":63,"line_end":63,"column_start":25,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1454},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":75747,"byte_end":75765,"line_start":119,"line_end":119,"column_start":25,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1468},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":78015,"byte_end":78022,"line_start":204,"line_end":204,"column_start":9,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":78641,"byte_end":78648,"line_start":229,"line_end":229,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":80495,"byte_end":80502,"line_start":302,"line_end":302,"column_start":25,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":82935,"byte_end":82943,"line_start":377,"line_end":377,"column_start":27,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1507},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":83171,"byte_end":83179,"line_start":386,"line_end":386,"column_start":28,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1507},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":84344,"byte_end":84348,"line_start":434,"line_end":434,"column_start":22,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1517},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":84967,"byte_end":84971,"line_start":462,"line_end":462,"column_start":31,"column_end":35},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1517},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":85187,"byte_end":85196,"line_start":477,"line_end":477,"column_start":22,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":85428,"byte_end":85437,"line_start":488,"line_end":488,"column_start":12,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":86940,"byte_end":86945,"line_start":538,"line_end":538,"column_start":22,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87182,"byte_end":87187,"line_start":549,"line_end":549,"column_start":27,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":87993,"byte_end":87998,"line_start":581,"line_end":581,"column_start":25,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":88836,"byte_end":88843,"line_start":612,"line_end":612,"column_start":30,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":89368,"byte_end":89375,"line_start":634,"line_end":634,"column_start":25,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":89643,"byte_end":89650,"line_start":646,"line_end":646,"column_start":28,"column_end":35},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":90110,"byte_end":90122,"line_start":670,"line_end":670,"column_start":9,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":91356,"byte_end":91364,"line_start":712,"line_end":712,"column_start":36,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":278},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":91533,"byte_end":91541,"line_start":721,"line_end":721,"column_start":27,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":278},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":91928,"byte_end":91936,"line_start":741,"line_end":741,"column_start":25,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":278},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":92569,"byte_end":92574,"line_start":766,"line_end":766,"column_start":26,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":299},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":92938,"byte_end":92943,"line_start":787,"line_end":787,"column_start":24,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":299},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":93076,"byte_end":93081,"line_start":794,"line_end":794,"column_start":22,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":299},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":94290,"byte_end":94302,"line_start":838,"line_end":838,"column_start":31,"column_end":43},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":319},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":94639,"byte_end":94651,"line_start":851,"line_end":851,"column_start":29,"column_end":41},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":319},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":95750,"byte_end":95759,"line_start":893,"line_end":893,"column_start":25,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":96629,"byte_end":96634,"line_start":927,"line_end":927,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":97068,"byte_end":97085,"line_start":944,"line_end":944,"column_start":25,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1551},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":97337,"byte_end":97354,"line_start":960,"line_end":960,"column_start":21,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1561},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":97472,"byte_end":97489,"line_start":966,"line_end":966,"column_start":32,"column_end":49},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1561},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":100249,"byte_end":100256,"line_start":1058,"line_end":1058,"column_start":25,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":100771,"byte_end":100778,"line_start":1081,"line_end":1081,"column_start":36,"column_end":43},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":101017,"byte_end":101024,"line_start":1092,"line_end":1092,"column_start":34,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":101667,"byte_end":101677,"line_start":1118,"line_end":1118,"column_start":34,"column_end":44},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":397},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":102968,"byte_end":102977,"line_start":1169,"line_end":1169,"column_start":25,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":425},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":103466,"byte_end":103475,"line_start":1191,"line_end":1191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":425},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":104313,"byte_end":104319,"line_start":1223,"line_end":1223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":105185,"byte_end":105191,"line_start":1259,"line_end":1259,"column_start":34,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs","byte_start":105297,"byte_end":105303,"line_start":1265,"line_end":1265,"column_start":36,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs","byte_start":112165,"byte_end":112177,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs","byte_start":121395,"byte_end":121405,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1828},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs","byte_start":122230,"byte_end":122242,"line_start":16,"line_end":16,"column_start":24,"column_end":36},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs","byte_start":122905,"byte_end":122917,"line_start":47,"line_end":47,"column_start":22,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs","byte_start":124596,"byte_end":124606,"line_start":109,"line_end":109,"column_start":9,"column_end":19},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs","byte_start":125542,"byte_end":125552,"line_start":155,"line_end":155,"column_start":26,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1837},"to":{"krate":2,"index":2362}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":129797,"byte_end":129807,"line_start":49,"line_end":49,"column_start":33,"column_end":43},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs","byte_start":130556,"byte_end":130562,"line_start":73,"line_end":73,"column_start":13,"column_end":19},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":132524,"byte_end":132525,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":650},"to":{"krate":0,"index":642}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":132830,"byte_end":132840,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":133036,"byte_end":133046,"line_start":40,"line_end":40,"column_start":32,"column_end":42},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1892},"to":{"krate":0,"index":642}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":134088,"byte_end":134098,"line_start":77,"line_end":77,"column_start":15,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":140876,"byte_end":140886,"line_start":263,"line_end":263,"column_start":15,"column_end":25},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":142698,"byte_end":142705,"line_start":320,"line_end":320,"column_start":15,"column_end":22},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":143912,"byte_end":143918,"line_start":366,"line_end":366,"column_start":32,"column_end":38},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":718},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":144828,"byte_end":144833,"line_start":402,"line_end":402,"column_start":28,"column_end":33},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":145004,"byte_end":145009,"line_start":411,"line_end":411,"column_start":32,"column_end":37},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":146841,"byte_end":146851,"line_start":475,"line_end":475,"column_start":9,"column_end":19},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":147837,"byte_end":147843,"line_start":517,"line_end":517,"column_start":26,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":769},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":148602,"byte_end":148607,"line_start":550,"line_end":550,"column_start":22,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":779},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs","byte_start":148766,"byte_end":148771,"line_start":559,"line_end":559,"column_start":26,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":779},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs","byte_start":149869,"byte_end":149880,"line_start":35,"line_end":35,"column_start":22,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1898},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":151219,"byte_end":151227,"line_start":33,"line_end":33,"column_start":9,"column_end":17},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":152123,"byte_end":152131,"line_start":64,"line_end":64,"column_start":19,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1909},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":153785,"byte_end":153791,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":825},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":154714,"byte_end":154720,"line_start":153,"line_end":153,"column_start":19,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":825},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":154889,"byte_end":154895,"line_start":162,"line_end":162,"column_start":22,"column_end":28},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":825},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":155998,"byte_end":156006,"line_start":204,"line_end":204,"column_start":27,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":844},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs","byte_start":156923,"byte_end":156931,"line_start":230,"line_end":230,"column_start":25,"column_end":33},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":844},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs","byte_start":158787,"byte_end":158798,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":877},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs","byte_start":159023,"byte_end":159034,"line_start":43,"line_end":43,"column_start":28,"column_end":39},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":877},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs","byte_start":160907,"byte_end":160919,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":164950,"byte_end":164959,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":165112,"byte_end":165121,"line_start":39,"line_end":39,"column_start":19,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":165765,"byte_end":165774,"line_start":61,"line_end":61,"column_start":25,"column_end":34},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1944},"to":{"krate":0,"index":951}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":166241,"byte_end":166250,"line_start":80,"line_end":80,"column_start":22,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1944},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs","byte_start":166674,"byte_end":166683,"line_start":100,"line_end":100,"column_start":31,"column_end":40},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1944},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs","byte_start":167508,"byte_end":167516,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1955},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs","byte_start":168279,"byte_end":168287,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1955},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs","byte_start":168744,"byte_end":168752,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1955},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":169334,"byte_end":169342,"line_start":15,"line_end":15,"column_start":25,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":5625},"to":{"krate":0,"index":951}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":169648,"byte_end":169656,"line_start":23,"line_end":23,"column_start":25,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":2,"index":34032},"to":{"krate":0,"index":951}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":169976,"byte_end":169983,"line_start":38,"line_end":38,"column_start":25,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1482},"to":{"krate":0,"index":951}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":170400,"byte_end":170408,"line_start":57,"line_end":57,"column_start":25,"column_end":33},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2022},"to":{"krate":0,"index":951}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs","byte_start":171363,"byte_end":171379,"line_start":97,"line_end":97,"column_start":29,"column_end":45},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":966},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs","byte_start":173660,"byte_end":173674,"line_start":14,"line_end":14,"column_start":32,"column_end":46},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2011},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176400,"byte_end":176408,"line_start":26,"line_end":26,"column_start":19,"column_end":27},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs","byte_start":176910,"byte_end":176918,"line_start":47,"line_end":47,"column_start":32,"column_end":40},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2022},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":178934,"byte_end":178940,"line_start":53,"line_end":53,"column_start":19,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2032},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":179075,"byte_end":179081,"line_start":60,"line_end":60,"column_start":25,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2032},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs","byte_start":179640,"byte_end":179646,"line_start":79,"line_end":79,"column_start":33,"column_end":39},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2032},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs","byte_start":180621,"byte_end":180628,"line_start":23,"line_end":23,"column_start":22,"column_end":29},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2038},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs","byte_start":181018,"byte_end":181025,"line_start":43,"line_end":43,"column_start":33,"column_end":40},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2038},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs","byte_start":181175,"byte_end":181182,"line_start":52,"line_end":52,"column_start":31,"column_end":38},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2038},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":184167,"byte_end":184177,"line_start":14,"line_end":14,"column_start":24,"column_end":34},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1065},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":185016,"byte_end":185026,"line_start":48,"line_end":48,"column_start":25,"column_end":35},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1065},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":186695,"byte_end":186701,"line_start":109,"line_end":109,"column_start":28,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2047},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":187088,"byte_end":187094,"line_start":124,"line_end":124,"column_start":29,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2047},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":187783,"byte_end":187790,"line_start":153,"line_end":153,"column_start":28,"column_end":35},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2056},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs","byte_start":187893,"byte_end":187900,"line_start":159,"line_end":159,"column_start":26,"column_end":33},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2056},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tee.rs","byte_start":189614,"byte_end":189617,"line_start":37,"line_end":37,"column_start":22,"column_end":25},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2076},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tee.rs","byte_start":190714,"byte_end":190717,"line_start":75,"line_end":75,"column_start":31,"column_end":34},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2076},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":191142,"byte_end":191153,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":191326,"byte_end":191337,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2083},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":192003,"byte_end":192014,"line_start":56,"line_end":56,"column_start":31,"column_end":42},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2083},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":192663,"byte_end":192669,"line_start":84,"line_end":84,"column_start":25,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1132},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":192881,"byte_end":192887,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":194494,"byte_end":194506,"line_start":153,"line_end":153,"column_start":25,"column_end":37},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2090},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs","byte_start":195032,"byte_end":195037,"line_start":174,"line_end":174,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":1158}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":198310,"byte_end":198318,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2147},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":199116,"byte_end":199124,"line_start":50,"line_end":50,"column_start":28,"column_end":36},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2147},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":199841,"byte_end":199847,"line_start":79,"line_end":79,"column_start":22,"column_end":28},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2160},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs","byte_start":200874,"byte_end":200880,"line_start":116,"line_end":116,"column_start":24,"column_end":30},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2160},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202412,"byte_end":202420,"line_start":42,"line_end":42,"column_start":9,"column_end":17},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":202699,"byte_end":202711,"line_start":54,"line_end":54,"column_start":32,"column_end":44},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1209},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs","byte_start":203947,"byte_end":203959,"line_start":88,"line_end":88,"column_start":31,"column_end":43},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1209},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":204877,"byte_end":204882,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2195},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs","byte_start":205460,"byte_end":205465,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2195},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs","byte_start":206387,"byte_end":206397,"line_start":33,"line_end":33,"column_start":25,"column_end":35},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2208},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs","byte_start":207019,"byte_end":207029,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2208},"to":{"krate":2,"index":5552}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs","byte_start":207850,"byte_end":207860,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2208},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":9409,"byte_end":9417,"line_start":331,"line_end":331,"column_start":23,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":5625},"to":{"krate":0,"index":1271}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":68323,"byte_end":68324,"line_start":2043,"line_end":2043,"column_start":31,"column_end":32},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1413},"to":{"krate":0,"index":1271}},{"span":{"file_name":"/home/vodkatypique/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs","byte_start":71843,"byte_end":71852,"line_start":2161,"line_end":2161,"column_start":9,"column_end":18},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2394},"to":{"krate":4294967295,"index":4294967295}}]}